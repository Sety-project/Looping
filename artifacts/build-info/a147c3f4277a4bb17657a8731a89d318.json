{"id":"a147c3f4277a4bb17657a8731a89d318","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@aave/core-v3/contracts/interfaces/IAaveOracle.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {IPriceOracleGetter} from './IPriceOracleGetter.sol';\nimport {IPoolAddressesProvider} from './IPoolAddressesProvider.sol';\n\n/**\n * @title IAaveOracle\n * @author Aave\n * @notice Defines the basic interface for the Aave Oracle\n */\ninterface IAaveOracle is IPriceOracleGetter {\n  /**\n   * @dev Emitted after the base currency is set\n   * @param baseCurrency The base currency of used for price quotes\n   * @param baseCurrencyUnit The unit of the base currency\n   */\n  event BaseCurrencySet(address indexed baseCurrency, uint256 baseCurrencyUnit);\n\n  /**\n   * @dev Emitted after the price source of an asset is updated\n   * @param asset The address of the asset\n   * @param source The price source of the asset\n   */\n  event AssetSourceUpdated(address indexed asset, address indexed source);\n\n  /**\n   * @dev Emitted after the address of fallback oracle is updated\n   * @param fallbackOracle The address of the fallback oracle\n   */\n  event FallbackOracleUpdated(address indexed fallbackOracle);\n\n  /**\n   * @notice Returns the PoolAddressesProvider\n   * @return The address of the PoolAddressesProvider contract\n   */\n  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);\n\n  /**\n   * @notice Sets or replaces price sources of assets\n   * @param assets The addresses of the assets\n   * @param sources The addresses of the price sources\n   */\n  function setAssetSources(address[] calldata assets, address[] calldata sources) external;\n\n  /**\n   * @notice Sets the fallback oracle\n   * @param fallbackOracle The address of the fallback oracle\n   */\n  function setFallbackOracle(address fallbackOracle) external;\n\n  /**\n   * @notice Returns a list of prices from a list of assets addresses\n   * @param assets The list of assets addresses\n   * @return The prices of the given assets\n   */\n  function getAssetsPrices(address[] calldata assets) external view returns (uint256[] memory);\n\n  /**\n   * @notice Returns the address of the source for an asset address\n   * @param asset The address of the asset\n   * @return The address of the source\n   */\n  function getSourceOfAsset(address asset) external view returns (address);\n\n  /**\n   * @notice Returns the address of the fallback oracle\n   * @return The address of the fallback oracle\n   */\n  function getFallbackOracle() external view returns (address);\n}\n"},"@aave/core-v3/contracts/interfaces/IPool.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {IPoolAddressesProvider} from './IPoolAddressesProvider.sol';\nimport {DataTypes} from '../protocol/libraries/types/DataTypes.sol';\n\n/**\n * @title IPool\n * @author Aave\n * @notice Defines the basic interface for an Aave Pool.\n */\ninterface IPool {\n  /**\n   * @dev Emitted on mintUnbacked()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the supply\n   * @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n   * @param amount The amount of supplied assets\n   * @param referralCode The referral code used\n   */\n  event MintUnbacked(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on backUnbacked()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param backer The address paying for the backing\n   * @param amount The amount added as backing\n   * @param fee The amount paid in fees\n   */\n  event BackUnbacked(address indexed reserve, address indexed backer, uint256 amount, uint256 fee);\n\n  /**\n   * @dev Emitted on supply()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the supply\n   * @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n   * @param amount The amount supplied\n   * @param referralCode The referral code used\n   */\n  event Supply(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlying asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to The address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   */\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n   * @param referralCode The referral code used\n   */\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    DataTypes.InterestRateMode interestRateMode,\n    uint256 borrowRate,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   * @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly\n   */\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount,\n    bool useATokens\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\n   */\n  event SwapBorrowRateMode(\n    address indexed reserve,\n    address indexed user,\n    DataTypes.InterestRateMode interestRateMode\n  );\n\n  /**\n   * @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n   * @param asset The address of the underlying asset of the reserve\n   * @param totalDebt The total isolation mode debt for the reserve\n   */\n  event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt);\n\n  /**\n   * @dev Emitted when the user selects a certain asset category for eMode\n   * @param user The address of the user\n   * @param categoryId The category id\n   */\n  event UserEModeSet(address indexed user, uint8 categoryId);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   */\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   */\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   */\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   */\n  event FlashLoan(\n    address indexed target,\n    address initiator,\n    address indexed asset,\n    uint256 amount,\n    DataTypes.InterestRateMode interestRateMode,\n    uint256 premium,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted when a borrower is liquidated.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   */\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated.\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The next liquidity rate\n   * @param stableBorrowRate The next stable borrow rate\n   * @param variableBorrowRate The next variable borrow rate\n   * @param liquidityIndex The next liquidity index\n   * @param variableBorrowIndex The next variable borrow index\n   */\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n   * @param reserve The address of the reserve\n   * @param amountMinted The amount minted to the treasury\n   */\n  event MintedToTreasury(address indexed reserve, uint256 amountMinted);\n\n  /**\n   * @notice Mints an `amount` of aTokens to the `onBehalfOf`\n   * @param asset The address of the underlying asset to mint\n   * @param amount The amount to mint\n   * @param onBehalfOf The address that will receive the aTokens\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function mintUnbacked(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Back the current unbacked underlying with `amount` and pay `fee`.\n   * @param asset The address of the underlying asset to back\n   * @param amount The amount to back\n   * @param fee The amount paid in fees\n   * @return The backed amount\n   */\n  function backUnbacked(address asset, uint256 amount, uint256 fee) external returns (uint256);\n\n  /**\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function supply(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\n\n  /**\n   * @notice Supply with transfer approval of asset to be supplied done via permit function\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param deadline The deadline timestamp that the permit is valid\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param permitV The V parameter of ERC712 permit sig\n   * @param permitR The R parameter of ERC712 permit sig\n   * @param permitS The S parameter of ERC712 permit sig\n   */\n  function supplyWithPermit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode,\n    uint256 deadline,\n    uint8 permitV,\n    bytes32 permitR,\n    bytes32 permitS\n  ) external;\n\n  /**\n   * @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to The address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   */\n  function withdraw(address asset, uint256 amount, address to) external returns (uint256);\n\n  /**\n   * @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   */\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   */\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @notice Repay with transfer approval of asset to be repaid done via permit function\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @param deadline The deadline timestamp that the permit is valid\n   * @param permitV The V parameter of ERC712 permit sig\n   * @param permitR The R parameter of ERC712 permit sig\n   * @param permitS The S parameter of ERC712 permit sig\n   * @return The final amount repaid\n   */\n  function repayWithPermit(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    address onBehalfOf,\n    uint256 deadline,\n    uint8 permitV,\n    bytes32 permitR,\n    bytes32 permitS\n  ) external returns (uint256);\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n   * equivalent debt tokens\n   * - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n   * @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n   * balance is not enough to cover the whole debt\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @return The final amount repaid\n   */\n  function repayWithATokens(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode\n  ) external returns (uint256);\n\n  /**\n   * @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n   * @param asset The address of the underlying asset borrowed\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\n   */\n  function swapBorrowRateMode(address asset, uint256 interestRateMode) external;\n\n  /**\n   * @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n   *        much has been borrowed at a stable rate and suppliers are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   */\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n   * @param asset The address of the underlying asset supplied\n   * @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise\n   */\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   */\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n   * into consideration. For further details please visit https://docs.aave.com/developers/\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts of the assets being flash-borrowed\n   * @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata interestRateModes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n   * into consideration. For further details please visit https://docs.aave.com/developers/\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n   * @param asset The address of the asset being flash-borrowed\n   * @param amount The amount of the asset being flash-borrowed\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function flashLoanSimple(\n    address receiverAddress,\n    address asset,\n    uint256 amount,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n   * @return totalDebtBase The total debt of the user in the base currency used by the price feed\n   * @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n   * @return currentLiquidationThreshold The liquidation threshold of the user\n   * @return ltv The loan to value of The user\n   * @return healthFactor The current health factor of the user\n   */\n  function getUserAccountData(\n    address user\n  )\n    external\n    view\n    returns (\n      uint256 totalCollateralBase,\n      uint256 totalDebtBase,\n      uint256 availableBorrowsBase,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  /**\n   * @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n   * interest rate strategy\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param aTokenAddress The address of the aToken that will be assigned to the reserve\n   * @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n   * @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n   * @param interestRateStrategyAddress The address of the interest rate strategy contract\n   */\n  function initReserve(\n    address asset,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  /**\n   * @notice Drop a reserve\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   */\n  function dropReserve(address asset) external;\n\n  /**\n   * @notice Updates the address of the interest rate strategy contract\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param rateStrategyAddress The address of the interest rate strategy contract\n   */\n  function setReserveInterestRateStrategyAddress(\n    address asset,\n    address rateStrategyAddress\n  ) external;\n\n  /**\n   * @notice Sets the configuration bitmap of the reserve as a whole\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param configuration The new configuration bitmap\n   */\n  function setConfiguration(\n    address asset,\n    DataTypes.ReserveConfigurationMap calldata configuration\n  ) external;\n\n  /**\n   * @notice Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   */\n  function getConfiguration(\n    address asset\n  ) external view returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @notice Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   */\n  function getUserConfiguration(\n    address user\n  ) external view returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @notice Returns the normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @notice Returns the normalized variable debt per unit of asset\n   * @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\n   * \"dynamic\" variable index based on time, current stored index and virtual rate at the current\n   * moment (approx. a borrower would get if opening a position). This means that is always used in\n   * combination with variable debt supply/balances.\n   * If using this function externally, consider that is possible to have an increasing normalized\n   * variable debt that is not equivalent to how the variable debt index would be updated in storage\n   * (e.g. only updates with non-zero variable debt supply)\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @notice Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state and configuration data of the reserve\n   */\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  /**\n   * @notice Validates and finalizes an aToken transfer\n   * @dev Only callable by the overlying aToken of the `asset`\n   * @param asset The address of the underlying asset of the aToken\n   * @param from The user from which the aTokens are transferred\n   * @param to The user receiving the aTokens\n   * @param amount The amount being transferred/withdrawn\n   * @param balanceFromBefore The aToken balance of the `from` user before the transfer\n   * @param balanceToBefore The aToken balance of the `to` user before the transfer\n   */\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromBefore,\n    uint256 balanceToBefore\n  ) external;\n\n  /**\n   * @notice Returns the list of the underlying assets of all the initialized reserves\n   * @dev It does not include dropped reserves\n   * @return The addresses of the underlying assets of the initialized reserves\n   */\n  function getReservesList() external view returns (address[] memory);\n\n  /**\n   * @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\n   * @param id The id of the reserve as stored in the DataTypes.ReserveData struct\n   * @return The address of the reserve associated with id\n   */\n  function getReserveAddressById(uint16 id) external view returns (address);\n\n  /**\n   * @notice Returns the PoolAddressesProvider connected to this contract\n   * @return The address of the PoolAddressesProvider\n   */\n  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);\n\n  /**\n   * @notice Updates the protocol fee on the bridging\n   * @param bridgeProtocolFee The part of the premium sent to the protocol treasury\n   */\n  function updateBridgeProtocolFee(uint256 bridgeProtocolFee) external;\n\n  /**\n   * @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n   * - A part is sent to aToken holders as extra, one time accumulated interest\n   * - A part is collected by the protocol treasury\n   * @dev The total premium is calculated on the total borrowed amount\n   * @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n   * @dev Only callable by the PoolConfigurator contract\n   * @param flashLoanPremiumTotal The total premium, expressed in bps\n   * @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps\n   */\n  function updateFlashloanPremiums(\n    uint128 flashLoanPremiumTotal,\n    uint128 flashLoanPremiumToProtocol\n  ) external;\n\n  /**\n   * @notice Configures a new category for the eMode.\n   * @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n   * The category 0 is reserved as it's the default for volatile assets\n   * @param id The id of the category\n   * @param config The configuration of the category\n   */\n  function configureEModeCategory(uint8 id, DataTypes.EModeCategory memory config) external;\n\n  /**\n   * @notice Returns the data of an eMode category\n   * @param id The id of the category\n   * @return The configuration data of the category\n   */\n  function getEModeCategoryData(uint8 id) external view returns (DataTypes.EModeCategory memory);\n\n  /**\n   * @notice Allows a user to use the protocol in eMode\n   * @param categoryId The id of the category\n   */\n  function setUserEMode(uint8 categoryId) external;\n\n  /**\n   * @notice Returns the eMode the user is using\n   * @param user The address of the user\n   * @return The eMode id\n   */\n  function getUserEMode(address user) external view returns (uint256);\n\n  /**\n   * @notice Resets the isolation mode total debt of the given asset to zero\n   * @dev It requires the given asset has zero debt ceiling\n   * @param asset The address of the underlying asset to reset the isolationModeTotalDebt\n   */\n  function resetIsolationModeTotalDebt(address asset) external;\n\n  /**\n   * @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n   * @return The percentage of available liquidity to borrow, expressed in bps\n   */\n  function MAX_STABLE_RATE_BORROW_SIZE_PERCENT() external view returns (uint256);\n\n  /**\n   * @notice Returns the total fee on flash loans\n   * @return The total fee on flashloans\n   */\n  function FLASHLOAN_PREMIUM_TOTAL() external view returns (uint128);\n\n  /**\n   * @notice Returns the part of the bridge fees sent to protocol\n   * @return The bridge fee sent to the protocol treasury\n   */\n  function BRIDGE_PROTOCOL_FEE() external view returns (uint256);\n\n  /**\n   * @notice Returns the part of the flashloan fees sent to protocol\n   * @return The flashloan fee sent to the protocol treasury\n   */\n  function FLASHLOAN_PREMIUM_TO_PROTOCOL() external view returns (uint128);\n\n  /**\n   * @notice Returns the maximum number of reserves supported to be listed in this Pool\n   * @return The maximum number of reserves supported\n   */\n  function MAX_NUMBER_RESERVES() external view returns (uint16);\n\n  /**\n   * @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n   * @param assets The list of reserves for which the minting needs to be executed\n   */\n  function mintToTreasury(address[] calldata assets) external;\n\n  /**\n   * @notice Rescue and transfer tokens locked in this contract\n   * @param token The address of the token\n   * @param to The address of the recipient\n   * @param amount The amount of token to transfer\n   */\n  function rescueTokens(address token, address to, uint256 amount) external;\n\n  /**\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n   * @dev Deprecated: Use the `supply` function instead\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\n}\n"},"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\n/**\n * @title IPoolAddressesProvider\n * @author Aave\n * @notice Defines the basic interface for a Pool Addresses Provider.\n */\ninterface IPoolAddressesProvider {\n  /**\n   * @dev Emitted when the market identifier is updated.\n   * @param oldMarketId The old id of the market\n   * @param newMarketId The new id of the market\n   */\n  event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\n\n  /**\n   * @dev Emitted when the pool is updated.\n   * @param oldAddress The old address of the Pool\n   * @param newAddress The new address of the Pool\n   */\n  event PoolUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the pool configurator is updated.\n   * @param oldAddress The old address of the PoolConfigurator\n   * @param newAddress The new address of the PoolConfigurator\n   */\n  event PoolConfiguratorUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the price oracle is updated.\n   * @param oldAddress The old address of the PriceOracle\n   * @param newAddress The new address of the PriceOracle\n   */\n  event PriceOracleUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the ACL manager is updated.\n   * @param oldAddress The old address of the ACLManager\n   * @param newAddress The new address of the ACLManager\n   */\n  event ACLManagerUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the ACL admin is updated.\n   * @param oldAddress The old address of the ACLAdmin\n   * @param newAddress The new address of the ACLAdmin\n   */\n  event ACLAdminUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the price oracle sentinel is updated.\n   * @param oldAddress The old address of the PriceOracleSentinel\n   * @param newAddress The new address of the PriceOracleSentinel\n   */\n  event PriceOracleSentinelUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the pool data provider is updated.\n   * @param oldAddress The old address of the PoolDataProvider\n   * @param newAddress The new address of the PoolDataProvider\n   */\n  event PoolDataProviderUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when a new proxy is created.\n   * @param id The identifier of the proxy\n   * @param proxyAddress The address of the created proxy contract\n   * @param implementationAddress The address of the implementation contract\n   */\n  event ProxyCreated(\n    bytes32 indexed id,\n    address indexed proxyAddress,\n    address indexed implementationAddress\n  );\n\n  /**\n   * @dev Emitted when a new non-proxied contract address is registered.\n   * @param id The identifier of the contract\n   * @param oldAddress The address of the old contract\n   * @param newAddress The address of the new contract\n   */\n  event AddressSet(bytes32 indexed id, address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the implementation of the proxy registered with id is updated\n   * @param id The identifier of the contract\n   * @param proxyAddress The address of the proxy contract\n   * @param oldImplementationAddress The address of the old implementation contract\n   * @param newImplementationAddress The address of the new implementation contract\n   */\n  event AddressSetAsProxy(\n    bytes32 indexed id,\n    address indexed proxyAddress,\n    address oldImplementationAddress,\n    address indexed newImplementationAddress\n  );\n\n  /**\n   * @notice Returns the id of the Aave market to which this contract points to.\n   * @return The market id\n   */\n  function getMarketId() external view returns (string memory);\n\n  /**\n   * @notice Associates an id with a specific PoolAddressesProvider.\n   * @dev This can be used to create an onchain registry of PoolAddressesProviders to\n   * identify and validate multiple Aave markets.\n   * @param newMarketId The market id\n   */\n  function setMarketId(string calldata newMarketId) external;\n\n  /**\n   * @notice Returns an address by its identifier.\n   * @dev The returned address might be an EOA or a contract, potentially proxied\n   * @dev It returns ZERO if there is no registered address with the given id\n   * @param id The id\n   * @return The address of the registered for the specified id\n   */\n  function getAddress(bytes32 id) external view returns (address);\n\n  /**\n   * @notice General function to update the implementation of a proxy registered with\n   * certain `id`. If there is no proxy registered, it will instantiate one and\n   * set as implementation the `newImplementationAddress`.\n   * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n   * setter function, in order to avoid unexpected consequences\n   * @param id The id\n   * @param newImplementationAddress The address of the new implementation\n   */\n  function setAddressAsProxy(bytes32 id, address newImplementationAddress) external;\n\n  /**\n   * @notice Sets an address for an id replacing the address saved in the addresses map.\n   * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n   * @param id The id\n   * @param newAddress The address to set\n   */\n  function setAddress(bytes32 id, address newAddress) external;\n\n  /**\n   * @notice Returns the address of the Pool proxy.\n   * @return The Pool proxy address\n   */\n  function getPool() external view returns (address);\n\n  /**\n   * @notice Updates the implementation of the Pool, or creates a proxy\n   * setting the new `pool` implementation when the function is called for the first time.\n   * @param newPoolImpl The new Pool implementation\n   */\n  function setPoolImpl(address newPoolImpl) external;\n\n  /**\n   * @notice Returns the address of the PoolConfigurator proxy.\n   * @return The PoolConfigurator proxy address\n   */\n  function getPoolConfigurator() external view returns (address);\n\n  /**\n   * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n   * setting the new `PoolConfigurator` implementation when the function is called for the first time.\n   * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\n   */\n  function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\n\n  /**\n   * @notice Returns the address of the price oracle.\n   * @return The address of the PriceOracle\n   */\n  function getPriceOracle() external view returns (address);\n\n  /**\n   * @notice Updates the address of the price oracle.\n   * @param newPriceOracle The address of the new PriceOracle\n   */\n  function setPriceOracle(address newPriceOracle) external;\n\n  /**\n   * @notice Returns the address of the ACL manager.\n   * @return The address of the ACLManager\n   */\n  function getACLManager() external view returns (address);\n\n  /**\n   * @notice Updates the address of the ACL manager.\n   * @param newAclManager The address of the new ACLManager\n   */\n  function setACLManager(address newAclManager) external;\n\n  /**\n   * @notice Returns the address of the ACL admin.\n   * @return The address of the ACL admin\n   */\n  function getACLAdmin() external view returns (address);\n\n  /**\n   * @notice Updates the address of the ACL admin.\n   * @param newAclAdmin The address of the new ACL admin\n   */\n  function setACLAdmin(address newAclAdmin) external;\n\n  /**\n   * @notice Returns the address of the price oracle sentinel.\n   * @return The address of the PriceOracleSentinel\n   */\n  function getPriceOracleSentinel() external view returns (address);\n\n  /**\n   * @notice Updates the address of the price oracle sentinel.\n   * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\n   */\n  function setPriceOracleSentinel(address newPriceOracleSentinel) external;\n\n  /**\n   * @notice Returns the address of the data provider.\n   * @return The address of the DataProvider\n   */\n  function getPoolDataProvider() external view returns (address);\n\n  /**\n   * @notice Updates the address of the data provider.\n   * @param newDataProvider The address of the new DataProvider\n   */\n  function setPoolDataProvider(address newDataProvider) external;\n}\n"},"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\n/**\n * @title IPriceOracleGetter\n * @author Aave\n * @notice Interface for the Aave price oracle.\n */\ninterface IPriceOracleGetter {\n  /**\n   * @notice Returns the base currency address\n   * @dev Address 0x0 is reserved for USD as base currency.\n   * @return Returns the base currency address.\n   */\n  function BASE_CURRENCY() external view returns (address);\n\n  /**\n   * @notice Returns the base currency unit\n   * @dev 1 ether for ETH, 1e8 for USD.\n   * @return Returns the base currency unit.\n   */\n  function BASE_CURRENCY_UNIT() external view returns (uint256);\n\n  /**\n   * @notice Returns the asset price in the base currency\n   * @param asset The address of the asset\n   * @return The price of the asset\n   */\n  function getAssetPrice(address asset) external view returns (uint256);\n}\n"},"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nlibrary DataTypes {\n  struct ReserveData {\n    //stores the reserve configuration\n    ReserveConfigurationMap configuration;\n    //the liquidity index. Expressed in ray\n    uint128 liquidityIndex;\n    //the current supply rate. Expressed in ray\n    uint128 currentLiquidityRate;\n    //variable borrow index. Expressed in ray\n    uint128 variableBorrowIndex;\n    //the current variable borrow rate. Expressed in ray\n    uint128 currentVariableBorrowRate;\n    //the current stable borrow rate. Expressed in ray\n    uint128 currentStableBorrowRate;\n    //timestamp of last update\n    uint40 lastUpdateTimestamp;\n    //the id of the reserve. Represents the position in the list of the active reserves\n    uint16 id;\n    //aToken address\n    address aTokenAddress;\n    //stableDebtToken address\n    address stableDebtTokenAddress;\n    //variableDebtToken address\n    address variableDebtTokenAddress;\n    //address of the interest rate strategy\n    address interestRateStrategyAddress;\n    //the current treasury balance, scaled\n    uint128 accruedToTreasury;\n    //the outstanding unbacked aTokens minted through the bridging feature\n    uint128 unbacked;\n    //the outstanding debt borrowed against this asset in isolation mode\n    uint128 isolationModeTotalDebt;\n  }\n\n  struct ReserveConfigurationMap {\n    //bit 0-15: LTV\n    //bit 16-31: Liq. threshold\n    //bit 32-47: Liq. bonus\n    //bit 48-55: Decimals\n    //bit 56: reserve is active\n    //bit 57: reserve is frozen\n    //bit 58: borrowing is enabled\n    //bit 59: stable rate borrowing enabled\n    //bit 60: asset is paused\n    //bit 61: borrowing in isolation mode is enabled\n    //bit 62-63: reserved\n    //bit 64-79: reserve factor\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\n    //bit 152-167 liquidation protocol fee\n    //bit 168-175 eMode category\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\n    //bit 252-255 unused\n\n    uint256 data;\n  }\n\n  struct UserConfigurationMap {\n    /**\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\n     * asset is borrowed by the user.\n     */\n    uint256 data;\n  }\n\n  struct EModeCategory {\n    // each eMode category has a custom ltv and liquidation threshold\n    uint16 ltv;\n    uint16 liquidationThreshold;\n    uint16 liquidationBonus;\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\n    address priceSource;\n    string label;\n  }\n\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\n\n  struct ReserveCache {\n    uint256 currScaledVariableDebt;\n    uint256 nextScaledVariableDebt;\n    uint256 currPrincipalStableDebt;\n    uint256 currAvgStableBorrowRate;\n    uint256 currTotalStableDebt;\n    uint256 nextAvgStableBorrowRate;\n    uint256 nextTotalStableDebt;\n    uint256 currLiquidityIndex;\n    uint256 nextLiquidityIndex;\n    uint256 currVariableBorrowIndex;\n    uint256 nextVariableBorrowIndex;\n    uint256 currLiquidityRate;\n    uint256 currVariableBorrowRate;\n    uint256 reserveFactor;\n    ReserveConfigurationMap reserveConfiguration;\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    uint40 reserveLastUpdateTimestamp;\n    uint40 stableDebtLastUpdateTimestamp;\n  }\n\n  struct ExecuteLiquidationCallParams {\n    uint256 reservesCount;\n    uint256 debtToCover;\n    address collateralAsset;\n    address debtAsset;\n    address user;\n    bool receiveAToken;\n    address priceOracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteSupplyParams {\n    address asset;\n    uint256 amount;\n    address onBehalfOf;\n    uint16 referralCode;\n  }\n\n  struct ExecuteBorrowParams {\n    address asset;\n    address user;\n    address onBehalfOf;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint16 referralCode;\n    bool releaseUnderlying;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteRepayParams {\n    address asset;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    address onBehalfOf;\n    bool useATokens;\n  }\n\n  struct ExecuteWithdrawParams {\n    address asset;\n    uint256 amount;\n    address to;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ExecuteSetUserEModeParams {\n    uint256 reservesCount;\n    address oracle;\n    uint8 categoryId;\n  }\n\n  struct FinalizeTransferParams {\n    address asset;\n    address from;\n    address to;\n    uint256 amount;\n    uint256 balanceFromBefore;\n    uint256 balanceToBefore;\n    uint256 reservesCount;\n    address oracle;\n    uint8 fromEModeCategory;\n  }\n\n  struct FlashloanParams {\n    address receiverAddress;\n    address[] assets;\n    uint256[] amounts;\n    uint256[] interestRateModes;\n    address onBehalfOf;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address addressesProvider;\n    uint8 userEModeCategory;\n    bool isAuthorizedFlashBorrower;\n  }\n\n  struct FlashloanSimpleParams {\n    address receiverAddress;\n    address asset;\n    uint256 amount;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n  }\n\n  struct FlashLoanRepaymentParams {\n    uint256 amount;\n    uint256 totalPremium;\n    uint256 flashLoanPremiumToProtocol;\n    address asset;\n    address receiverAddress;\n    uint16 referralCode;\n  }\n\n  struct CalculateUserAccountDataParams {\n    UserConfigurationMap userConfig;\n    uint256 reservesCount;\n    address user;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ValidateBorrowParams {\n    ReserveCache reserveCache;\n    UserConfigurationMap userConfig;\n    address asset;\n    address userAddress;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint256 maxStableLoanPercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n    bool isolationModeActive;\n    address isolationModeCollateralAddress;\n    uint256 isolationModeDebtCeiling;\n  }\n\n  struct ValidateLiquidationCallParams {\n    ReserveCache debtReserveCache;\n    uint256 totalDebt;\n    uint256 healthFactor;\n    address priceOracleSentinel;\n  }\n\n  struct CalculateInterestRatesParams {\n    uint256 unbacked;\n    uint256 liquidityAdded;\n    uint256 liquidityTaken;\n    uint256 totalStableDebt;\n    uint256 totalVariableDebt;\n    uint256 averageStableBorrowRate;\n    uint256 reserveFactor;\n    address reserve;\n    address aToken;\n  }\n\n  struct InitReserveParams {\n    address asset;\n    address aTokenAddress;\n    address stableDebtAddress;\n    address variableDebtAddress;\n    address interestRateStrategyAddress;\n    uint16 reservesCount;\n    uint16 maxNumberReserves;\n  }\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IAuthentication {\n    /**\n     * @dev Returns the action identifier associated with the external function described by `selector`.\n     */\n    function getActionId(bytes4 selector) external view returns (bytes32);\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface for the SignatureValidator helper, used to support meta-transactions.\n */\ninterface ISignaturesValidator {\n    /**\n     * @dev Returns the EIP712 domain separator.\n     */\n    function getDomainSeparator() external view returns (bytes32);\n\n    /**\n     * @dev Returns the next nonce used by an address to sign messages.\n     */\n    function getNextNonce(address user) external view returns (uint256);\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface for the TemporarilyPausable helper.\n */\ninterface ITemporarilyPausable {\n    /**\n     * @dev Emitted every time the pause state changes by `_setPaused`.\n     */\n    event PausedStateChanged(bool paused);\n\n    /**\n     * @dev Returns the current paused state.\n     */\n    function getPausedState()\n        external\n        view\n        returns (\n            bool paused,\n            uint256 pauseWindowEndTime,\n            uint256 bufferPeriodEndTime\n        );\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"../openzeppelin/IERC20.sol\";\n\n/**\n * @dev Interface for WETH9.\n * See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\n */\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n\n    function withdraw(uint256 amount) external;\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n * address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n * types.\n *\n * This concept is unrelated to a Pool's Asset Managers.\n */\ninterface IAsset {\n    // solhint-disable-previous-line no-empty-blocks\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IAuthorizer {\n    /**\n     * @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`.\n     */\n    function canPerform(\n        bytes32 actionId,\n        address account,\n        address where\n    ) external view returns (bool);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n// Inspired by Aave Protocol's IFlashLoanReceiver.\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\n\ninterface IFlashLoanRecipient {\n    /**\n     * @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n     *\n     * At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n     * call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n     * Vault, or else the entire flash loan will revert.\n     *\n     * `userData` is the same value passed in the `IVault.flashLoan` call.\n     */\n    function receiveFlashLoan(\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        uint256[] memory feeAmounts,\n        bytes memory userData\n    ) external;\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\n\nimport \"./IVault.sol\";\nimport \"./IAuthorizer.sol\";\n\ninterface IProtocolFeesCollector {\n    event SwapFeePercentageChanged(uint256 newSwapFeePercentage);\n    event FlashLoanFeePercentageChanged(uint256 newFlashLoanFeePercentage);\n\n    function withdrawCollectedFees(\n        IERC20[] calldata tokens,\n        uint256[] calldata amounts,\n        address recipient\n    ) external;\n\n    function setSwapFeePercentage(uint256 newSwapFeePercentage) external;\n\n    function setFlashLoanFeePercentage(uint256 newFlashLoanFeePercentage) external;\n\n    function getSwapFeePercentage() external view returns (uint256);\n\n    function getFlashLoanFeePercentage() external view returns (uint256);\n\n    function getCollectedFeeAmounts(IERC20[] memory tokens) external view returns (uint256[] memory feeAmounts);\n\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    function vault() external view returns (IVault);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma experimental ABIEncoderV2;\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\nimport \"../solidity-utils/helpers/IAuthentication.sol\";\nimport \"../solidity-utils/helpers/ISignaturesValidator.sol\";\nimport \"../solidity-utils/helpers/ITemporarilyPausable.sol\";\nimport \"../solidity-utils/misc/IWETH.sol\";\n\nimport \"./IAsset.sol\";\nimport \"./IAuthorizer.sol\";\nimport \"./IFlashLoanRecipient.sol\";\nimport \"./IProtocolFeesCollector.sol\";\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n * don't override one of these declarations.\n */\ninterface IVault is ISignaturesValidator, ITemporarilyPausable, IAuthentication {\n    // Generalities about the Vault:\n    //\n    // - Whenever documentation refers to 'tokens', it strictly refers to ERC20-compliant token contracts. Tokens are\n    // transferred out of the Vault by calling the `IERC20.transfer` function, and transferred in by calling\n    // `IERC20.transferFrom`. In these cases, the sender must have previously allowed the Vault to use their tokens by\n    // calling `IERC20.approve`. The only deviation from the ERC20 standard that is supported is functions not returning\n    // a boolean value: in these scenarios, a non-reverting call is assumed to be successful.\n    //\n    // - All non-view functions in the Vault are non-reentrant: calling them while another one is mid-execution (e.g.\n    // while execution control is transferred to a token contract during a swap) will result in a revert. View\n    // functions can be called in a re-reentrant way, but doing so might cause them to return inconsistent results.\n    // Contracts calling view functions in the Vault must make sure the Vault has not already been entered.\n    //\n    // - View functions revert if referring to either unregistered Pools, or unregistered tokens for registered Pools.\n\n    // Authorizer\n    //\n    // Some system actions are permissioned, like setting and collecting protocol fees. This permissioning system exists\n    // outside of the Vault in the Authorizer contract: the Vault simply calls the Authorizer to check if the caller\n    // can perform a given action.\n\n    /**\n     * @dev Returns the Vault's Authorizer.\n     */\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    /**\n     * @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n     *\n     * Emits an `AuthorizerChanged` event.\n     */\n    function setAuthorizer(IAuthorizer newAuthorizer) external;\n\n    /**\n     * @dev Emitted when a new authorizer is set by `setAuthorizer`.\n     */\n    event AuthorizerChanged(IAuthorizer indexed newAuthorizer);\n\n    // Relayers\n    //\n    // Additionally, it is possible for an account to perform certain actions on behalf of another one, using their\n    // Vault ERC20 allowance and Internal Balance. These accounts are said to be 'relayers' for these Vault functions,\n    // and are expected to be smart contracts with sound authentication mechanisms. For an account to be able to wield\n    // this power, two things must occur:\n    //  - The Authorizer must grant the account the permission to be a relayer for the relevant Vault function. This\n    //    means that Balancer governance must approve each individual contract to act as a relayer for the intended\n    //    functions.\n    //  - Each user must approve the relayer to act on their behalf.\n    // This double protection means users cannot be tricked into approving malicious relayers (because they will not\n    // have been allowed by the Authorizer via governance), nor can malicious relayers approved by a compromised\n    // Authorizer or governance drain user funds, since they would also need to be approved by each individual user.\n\n    /**\n     * @dev Returns true if `user` has approved `relayer` to act as a relayer for them.\n     */\n    function hasApprovedRelayer(address user, address relayer) external view returns (bool);\n\n    /**\n     * @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n     *\n     * Emits a `RelayerApprovalChanged` event.\n     */\n    function setRelayerApproval(\n        address sender,\n        address relayer,\n        bool approved\n    ) external;\n\n    /**\n     * @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\n     */\n    event RelayerApprovalChanged(address indexed relayer, address indexed sender, bool approved);\n\n    // Internal Balance\n    //\n    // Users can deposit tokens into the Vault, where they are allocated to their Internal Balance, and later\n    // transferred or withdrawn. It can also be used as a source of tokens when joining Pools, as a destination\n    // when exiting them, and as either when performing swaps. This usage of Internal Balance results in greatly reduced\n    // gas costs when compared to relying on plain ERC20 transfers, leading to large savings for frequent users.\n    //\n    // Internal Balance management features batching, which means a single contract call can be used to perform multiple\n    // operations of different kinds, with different senders and recipients, at once.\n\n    /**\n     * @dev Returns `user`'s Internal Balance for a set of tokens.\n     */\n    function getInternalBalance(address user, IERC20[] memory tokens) external view returns (uint256[] memory);\n\n    /**\n     * @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n     * and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n     * it lets integrators reuse a user's Vault allowance.\n     *\n     * For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\n     */\n    function manageUserBalance(UserBalanceOp[] memory ops) external payable;\n\n    /**\n     * @dev Data for `manageUserBalance` operations, which include the possibility for ETH to be sent and received\n     without manual WETH wrapping or unwrapping.\n     */\n    struct UserBalanceOp {\n        UserBalanceOpKind kind;\n        IAsset asset;\n        uint256 amount;\n        address sender;\n        address payable recipient;\n    }\n\n    // There are four possible operations in `manageUserBalance`:\n    //\n    // - DEPOSIT_INTERNAL\n    // Increases the Internal Balance of the `recipient` account by transferring tokens from the corresponding\n    // `sender`. The sender must have allowed the Vault to use their tokens via `IERC20.approve()`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset and forwarding ETH in the call: it will be wrapped\n    // and deposited as WETH. Any ETH amount remaining will be sent back to the caller (not the sender, which is\n    // relevant for relayers).\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - WITHDRAW_INTERNAL\n    // Decreases the Internal Balance of the `sender` account by transferring tokens to the `recipient`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset. This will deduct WETH instead, unwrap it and send\n    // it to the recipient as ETH.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_INTERNAL\n    // Transfers tokens from the Internal Balance of the `sender` account to the Internal Balance of `recipient`.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_EXTERNAL\n    // Transfers tokens from `sender` to `recipient`, using the Vault's ERC20 allowance. This is typically used by\n    // relayers, as it lets them reuse a user's Vault allowance.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `ExternalBalanceTransfer` event.\n\n    enum UserBalanceOpKind { DEPOSIT_INTERNAL, WITHDRAW_INTERNAL, TRANSFER_INTERNAL, TRANSFER_EXTERNAL }\n\n    /**\n     * @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n     * interacting with Pools using Internal Balance.\n     *\n     * Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n     * address.\n     */\n    event InternalBalanceChanged(address indexed user, IERC20 indexed token, int256 delta);\n\n    /**\n     * @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\n     */\n    event ExternalBalanceTransfer(IERC20 indexed token, address indexed sender, address recipient, uint256 amount);\n\n    // Pools\n    //\n    // There are three specialization settings for Pools, which allow for cheaper swaps at the cost of reduced\n    // functionality:\n    //\n    //  - General: no specialization, suited for all Pools. IGeneralPool is used for swap request callbacks, passing the\n    // balance of all tokens in the Pool. These Pools have the largest swap costs (because of the extra storage reads),\n    // which increase with the number of registered tokens.\n    //\n    //  - Minimal Swap Info: IMinimalSwapInfoPool is used instead of IGeneralPool, which saves gas by only passing the\n    // balance of the two tokens involved in the swap. This is suitable for some pricing algorithms, like the weighted\n    // constant product one popularized by Balancer V1. Swap costs are smaller compared to general Pools, and are\n    // independent of the number of registered tokens.\n    //\n    //  - Two Token: only allows two tokens to be registered. This achieves the lowest possible swap gas cost. Like\n    // minimal swap info Pools, these are called via IMinimalSwapInfoPool.\n\n    enum PoolSpecialization { GENERAL, MINIMAL_SWAP_INFO, TWO_TOKEN }\n\n    /**\n     * @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n     * is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n     * changed.\n     *\n     * The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n     * depending on the chosen specialization setting. This contract is known as the Pool's contract.\n     *\n     * Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n     * multiple Pools may share the same contract.\n     *\n     * Emits a `PoolRegistered` event.\n     */\n    function registerPool(PoolSpecialization specialization) external returns (bytes32);\n\n    /**\n     * @dev Emitted when a Pool is registered by calling `registerPool`.\n     */\n    event PoolRegistered(bytes32 indexed poolId, address indexed poolAddress, PoolSpecialization specialization);\n\n    /**\n     * @dev Returns a Pool's contract address and specialization setting.\n     */\n    function getPool(bytes32 poolId) external view returns (address, PoolSpecialization);\n\n    /**\n     * @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n     * exit by receiving registered tokens, and can only swap registered tokens.\n     *\n     * Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n     * of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n     * ascending order.\n     *\n     * The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n     * Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n     * depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n     * expected to be highly secured smart contracts with sound design principles, and the decision to register an\n     * Asset Manager should not be made lightly.\n     *\n     * Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n     * Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n     * different Asset Manager.\n     *\n     * Emits a `TokensRegistered` event.\n     */\n    function registerTokens(\n        bytes32 poolId,\n        IERC20[] memory tokens,\n        address[] memory assetManagers\n    ) external;\n\n    /**\n     * @dev Emitted when a Pool registers tokens by calling `registerTokens`.\n     */\n    event TokensRegistered(bytes32 indexed poolId, IERC20[] tokens, address[] assetManagers);\n\n    /**\n     * @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n     * balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n     * must be deregistered in the same `deregisterTokens` call.\n     *\n     * A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n     *\n     * Emits a `TokensDeregistered` event.\n     */\n    function deregisterTokens(bytes32 poolId, IERC20[] memory tokens) external;\n\n    /**\n     * @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\n     */\n    event TokensDeregistered(bytes32 indexed poolId, IERC20[] tokens);\n\n    /**\n     * @dev Returns detailed information for a Pool's registered token.\n     *\n     * `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n     * withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n     * equals the sum of `cash` and `managed`.\n     *\n     * Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n     * `managed` or `total` balance to be greater than 2^112 - 1.\n     *\n     * `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n     * join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n     * example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n     * change for this purpose, and will update `lastChangeBlock`.\n     *\n     * `assetManager` is the Pool's token Asset Manager.\n     */\n    function getPoolTokenInfo(bytes32 poolId, IERC20 token)\n        external\n        view\n        returns (\n            uint256 cash,\n            uint256 managed,\n            uint256 lastChangeBlock,\n            address assetManager\n        );\n\n    /**\n     * @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n     * the tokens' `balances` changed.\n     *\n     * The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n     * Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n     *\n     * If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n     * order as passed to `registerTokens`.\n     *\n     * Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n     * the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n     * instead.\n     */\n    function getPoolTokens(bytes32 poolId)\n        external\n        view\n        returns (\n            IERC20[] memory tokens,\n            uint256[] memory balances,\n            uint256 lastChangeBlock\n        );\n\n    /**\n     * @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n     * trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n     * Pool shares.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n     * to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n     * these maximums.\n     *\n     * If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n     * this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n     * WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n     * back to the caller (not the sender, which is important for relayers).\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n     * sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n     * `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n     *\n     * If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n     * be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n     * withdrawn from Internal Balance: attempting to do so will trigger a revert.\n     *\n     * This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n     * directly to the Pool's contract, as is `recipient`.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function joinPool(\n        bytes32 poolId,\n        address sender,\n        address recipient,\n        JoinPoolRequest memory request\n    ) external payable;\n\n    struct JoinPoolRequest {\n        IAsset[] assets;\n        uint256[] maxAmountsIn;\n        bytes userData;\n        bool fromInternalBalance;\n    }\n\n    /**\n     * @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n     * trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n     * Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n     * `getPoolTokenInfo`).\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n     * token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n     * it just enforces these minimums.\n     *\n     * If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n     * enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n     * of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n     * be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n     * final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n     *\n     * If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n     * an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n     * do so will trigger a revert.\n     *\n     * `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n     * `tokens` array. This array must match the Pool's registered tokens.\n     *\n     * This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n     * passed directly to the Pool's contract.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function exitPool(\n        bytes32 poolId,\n        address sender,\n        address payable recipient,\n        ExitPoolRequest memory request\n    ) external;\n\n    struct ExitPoolRequest {\n        IAsset[] assets;\n        uint256[] minAmountsOut;\n        bytes userData;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\n     */\n    event PoolBalanceChanged(\n        bytes32 indexed poolId,\n        address indexed liquidityProvider,\n        IERC20[] tokens,\n        int256[] deltas,\n        uint256[] protocolFeeAmounts\n    );\n\n    enum PoolBalanceChangeKind { JOIN, EXIT }\n\n    // Swaps\n    //\n    // Users can swap tokens with Pools by calling the `swap` and `batchSwap` functions. To do this,\n    // they need not trust Pool contracts in any way: all security checks are made by the Vault. They must however be\n    // aware of the Pools' pricing algorithms in order to estimate the prices Pools will quote.\n    //\n    // The `swap` function executes a single swap, while `batchSwap` can perform multiple swaps in sequence.\n    // In each individual swap, tokens of one kind are sent from the sender to the Pool (this is the 'token in'),\n    // and tokens of another kind are sent from the Pool to the recipient in exchange (this is the 'token out').\n    // More complex swaps, such as one token in to multiple tokens out can be achieved by batching together\n    // individual swaps.\n    //\n    // There are two swap kinds:\n    //  - 'given in' swaps, where the amount of tokens in (sent to the Pool) is known, and the Pool determines (via the\n    // `onSwap` hook) the amount of tokens out (to send to the recipient).\n    //  - 'given out' swaps, where the amount of tokens out (received from the Pool) is known, and the Pool determines\n    // (via the `onSwap` hook) the amount of tokens in (to receive from the sender).\n    //\n    // Additionally, it is possible to chain swaps using a placeholder input amount, which the Vault replaces with\n    // the calculated output of the previous swap. If the previous swap was 'given in', this will be the calculated\n    // tokenOut amount. If the previous swap was 'given out', it will use the calculated tokenIn amount. These extended\n    // swaps are known as 'multihop' swaps, since they 'hop' through a number of intermediate tokens before arriving at\n    // the final intended token.\n    //\n    // In all cases, tokens are only transferred in and out of the Vault (or withdrawn from and deposited into Internal\n    // Balance) after all individual swaps have been completed, and the net token balance change computed. This makes\n    // certain swap patterns, such as multihops, or swaps that interact with the same token pair in multiple Pools, cost\n    // much less gas than they would otherwise.\n    //\n    // It also means that under certain conditions it is possible to perform arbitrage by swapping with multiple\n    // Pools in a way that results in net token movement out of the Vault (profit), with no tokens being sent in (only\n    // updating the Pool's internal accounting).\n    //\n    // To protect users from front-running or the market changing rapidly, they supply a list of 'limits' for each token\n    // involved in the swap, where either the maximum number of tokens to send (by passing a positive value) or the\n    // minimum amount of tokens to receive (by passing a negative value) is specified.\n    //\n    // Additionally, a 'deadline' timestamp can also be provided, forcing the swap to fail if it occurs after\n    // this point in time (e.g. if the transaction failed to be included in a block promptly).\n    //\n    // If interacting with Pools that hold WETH, it is possible to both send and receive ETH directly: the Vault will do\n    // the wrapping and unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be\n    // passed in the `assets` array instead of the WETH address. Note that it is possible to combine ETH and WETH in the\n    // same swap. Any excess ETH will be sent back to the caller (not the sender, which is relevant for relayers).\n    //\n    // Finally, Internal Balance can be used when either sending or receiving tokens.\n\n    enum SwapKind { GIVEN_IN, GIVEN_OUT }\n\n    /**\n     * @dev Performs a swap with a single Pool.\n     *\n     * If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n     * taken from the Pool, which must be greater than or equal to `limit`.\n     *\n     * If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n     * sent to the Pool, which must be less than or equal to `limit`.\n     *\n     * Internal Balance usage and the recipient are determined by the `funds` struct.\n     *\n     * Emits a `Swap` event.\n     */\n    function swap(\n        SingleSwap memory singleSwap,\n        FundManagement memory funds,\n        uint256 limit,\n        uint256 deadline\n    ) external payable returns (uint256);\n\n    /**\n     * @dev Data for a single swap executed by `swap`. `amount` is either `amountIn` or `amountOut` depending on\n     * the `kind` value.\n     *\n     * `assetIn` and `assetOut` are either token addresses, or the IAsset sentinel value for ETH (the zero address).\n     * Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct SingleSwap {\n        bytes32 poolId;\n        SwapKind kind;\n        IAsset assetIn;\n        IAsset assetOut;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n     * the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n     *\n     * Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n     * Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n     * the same index in the `assets` array.\n     *\n     * Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n     * Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n     * `amountOut` depending on the swap kind.\n     *\n     * Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n     * of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n     * the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n     *\n     * The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n     * or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n     * out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n     * or unwrapped from WETH by the Vault.\n     *\n     * Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n     * the minimum or maximum amount of each token the vault is allowed to transfer.\n     *\n     * `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n     * equivalent `swap` call.\n     *\n     * Emits `Swap` events.\n     */\n    function batchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds,\n        int256[] memory limits,\n        uint256 deadline\n    ) external payable returns (int256[] memory);\n\n    /**\n     * @dev Data for each individual swap executed by `batchSwap`. The asset in and out fields are indexes into the\n     * `assets` array passed to that function, and ETH assets are converted to WETH.\n     *\n     * If `amount` is zero, the multihop mechanism is used to determine the actual amount based on the amount in/out\n     * from the previous swap, depending on the swap kind.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct BatchSwapStep {\n        bytes32 poolId;\n        uint256 assetInIndex;\n        uint256 assetOutIndex;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Emitted for each individual swap performed by `swap` or `batchSwap`.\n     */\n    event Swap(\n        bytes32 indexed poolId,\n        IERC20 indexed tokenIn,\n        IERC20 indexed tokenOut,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n\n    /**\n     * @dev All tokens in a swap are either sent from the `sender` account to the Vault, or from the Vault to the\n     * `recipient` account.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * If `fromInternalBalance` is true, the `sender`'s Internal Balance will be preferred, performing an ERC20\n     * transfer for the difference between the requested amount and the User's Internal Balance (if any). The `sender`\n     * must have allowed the Vault to use their tokens via `IERC20.approve()`. This matches the behavior of\n     * `joinPool`.\n     *\n     * If `toInternalBalance` is true, tokens will be deposited to `recipient`'s internal balance instead of\n     * transferred. This matches the behavior of `exitPool`.\n     *\n     * Note that ETH cannot be deposited to or withdrawn from Internal Balance: attempting to do so will trigger a\n     * revert.\n     */\n    struct FundManagement {\n        address sender;\n        bool fromInternalBalance;\n        address payable recipient;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n     * simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n     *\n     * Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n     * the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n     * receives are the same that an equivalent `batchSwap` call would receive.\n     *\n     * Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n     * This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n     * approve them for the Vault, or even know a user's address.\n     *\n     * Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n     * eth_call instead of eth_sendTransaction.\n     */\n    function queryBatchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds\n    ) external returns (int256[] memory assetDeltas);\n\n    // Flash Loans\n\n    /**\n     * @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n     * and then reverting unless the tokens plus a proportional protocol fee have been returned.\n     *\n     * The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n     * for each token contract. `tokens` must be sorted in ascending order.\n     *\n     * The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n     * `receiveFlashLoan` call.\n     *\n     * Emits `FlashLoan` events.\n     */\n    function flashLoan(\n        IFlashLoanRecipient recipient,\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        bytes memory userData\n    ) external;\n\n    /**\n     * @dev Emitted for each individual flash loan performed by `flashLoan`.\n     */\n    event FlashLoan(IFlashLoanRecipient indexed recipient, IERC20 indexed token, uint256 amount, uint256 feeAmount);\n\n    // Asset Management\n    //\n    // Each token registered for a Pool can be assigned an Asset Manager, which is able to freely withdraw the Pool's\n    // tokens from the Vault, deposit them, or assign arbitrary values to its `managed` balance (see\n    // `getPoolTokenInfo`). This makes them extremely powerful and dangerous. Even if an Asset Manager only directly\n    // controls one of the tokens in a Pool, a malicious manager could set that token's balance to manipulate the\n    // prices of the other tokens, and then drain the Pool with swaps. The risk of using Asset Managers is therefore\n    // not constrained to the tokens they are managing, but extends to the entire Pool's holdings.\n    //\n    // However, a properly designed Asset Manager smart contract can be safely used for the Pool's benefit,\n    // for example by lending unused tokens out for interest, or using them to participate in voting protocols.\n    //\n    // This concept is unrelated to the IAsset interface.\n\n    /**\n     * @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n     *\n     * Pool Balance management features batching, which means a single contract call can be used to perform multiple\n     * operations of different kinds, with different Pools and tokens, at once.\n     *\n     * For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\n     */\n    function managePoolBalance(PoolBalanceOp[] memory ops) external;\n\n    struct PoolBalanceOp {\n        PoolBalanceOpKind kind;\n        bytes32 poolId;\n        IERC20 token;\n        uint256 amount;\n    }\n\n    /**\n     * Withdrawals decrease the Pool's cash, but increase its managed balance, leaving the total balance unchanged.\n     *\n     * Deposits increase the Pool's cash, but decrease its managed balance, leaving the total balance unchanged.\n     *\n     * Updates don't affect the Pool's cash balance, but because the managed balance changes, it does alter the total.\n     * The external amount can be either increased or decreased by this call (i.e., reporting a gain or a loss).\n     */\n    enum PoolBalanceOpKind { WITHDRAW, DEPOSIT, UPDATE }\n\n    /**\n     * @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\n     */\n    event PoolBalanceManaged(\n        bytes32 indexed poolId,\n        address indexed assetManager,\n        IERC20 indexed token,\n        int256 cashDelta,\n        int256 managedDelta\n    );\n\n    // Protocol Fees\n    //\n    // Some operations cause the Vault to collect tokens in the form of protocol fees, which can then be withdrawn by\n    // permissioned accounts.\n    //\n    // There are two kinds of protocol fees:\n    //\n    //  - flash loan fees: charged on all flash loans, as a percentage of the amounts lent.\n    //\n    //  - swap fees: a percentage of the fees charged by Pools when performing swaps. For a number of reasons, including\n    // swap gas costs and interface simplicity, protocol swap fees are not charged on each individual swap. Rather,\n    // Pools are expected to keep track of how much they have charged in swap fees, and pay any outstanding debts to the\n    // Vault when they are joined or exited. This prevents users from joining a Pool with unpaid debt, as well as\n    // exiting a Pool in debt without first paying their share.\n\n    /**\n     * @dev Returns the current protocol fee module.\n     */\n    function getProtocolFeesCollector() external view returns (IProtocolFeesCollector);\n\n    /**\n     * @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n     * error in some part of the system.\n     *\n     * The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n     *\n     * While the contract is paused, the following features are disabled:\n     * - depositing and transferring internal balance\n     * - transferring external balance (using the Vault's allowance)\n     * - swaps\n     * - joining Pools\n     * - Asset Manager interactions\n     *\n     * Internal Balance can still be withdrawn, and Pools exited.\n     */\n    function setPaused(bool paused) external;\n\n    /**\n     * @dev Returns the Vault's WETH instance.\n     */\n    function WETH() external view returns (IWETH);\n    // solhint-disable-previous-line func-name-mixedcase\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4626.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4626.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"../token/ERC20/extensions/IERC20Metadata.sol\";\n\n/**\n * @dev Interface of the ERC4626 \"Tokenized Vault Standard\", as defined in\n * https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\n */\ninterface IERC4626 is IERC20, IERC20Metadata {\n    event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares);\n\n    event Withdraw(\n        address indexed sender,\n        address indexed receiver,\n        address indexed owner,\n        uint256 assets,\n        uint256 shares\n    );\n\n    /**\n     * @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n     *\n     * - MUST be an ERC-20 token contract.\n     * - MUST NOT revert.\n     */\n    function asset() external view returns (address assetTokenAddress);\n\n    /**\n     * @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n     *\n     * - SHOULD include any compounding that occurs from yield.\n     * - MUST be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT revert.\n     */\n    function totalAssets() external view returns (uint256 totalManagedAssets);\n\n    /**\n     * @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n     * through a deposit call.\n     *\n     * - MUST return a limited value if receiver is subject to some deposit limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n     * - MUST NOT revert.\n     */\n    function maxDeposit(address receiver) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n     *   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n     *   in the same transaction.\n     * - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n     *   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewDeposit(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   deposit execution, and are accounted for during deposit.\n     * - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function deposit(uint256 assets, address receiver) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n     * - MUST return a limited value if receiver is subject to some mint limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n     * - MUST NOT revert.\n     */\n    function maxMint(address receiver) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n     *   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n     *   same transaction.\n     * - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n     *   would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by minting.\n     */\n    function previewMint(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n     *   execution, and are accounted for during mint.\n     * - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function mint(uint256 shares, address receiver) external returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n     * Vault, through a withdraw call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxWithdraw(address owner) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n     *   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n     *   called\n     *   in the same transaction.\n     * - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n     *   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewWithdraw(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   withdraw execution, and are accounted for during withdraw.\n     * - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function withdraw(uint256 assets, address receiver, address owner) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n     * through a redeem call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxRedeem(address owner) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n     *   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n     *   same transaction.\n     * - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n     *   redemption would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by redeeming.\n     */\n    function previewRedeem(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   redeem execution, and are accounted for during redeem.\n     * - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256 assets);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC4626.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20, IERC20Metadata, ERC20} from \"../ERC20.sol\";\nimport {SafeERC20} from \"../utils/SafeERC20.sol\";\nimport {IERC4626} from \"../../../interfaces/IERC4626.sol\";\nimport {Math} from \"../../../utils/math/Math.sol\";\n\n/**\n * @dev Implementation of the ERC4626 \"Tokenized Vault Standard\" as defined in\n * https://eips.ethereum.org/EIPS/eip-4626[EIP-4626].\n *\n * This extension allows the minting and burning of \"shares\" (represented using the ERC20 inheritance) in exchange for\n * underlying \"assets\" through standardized {deposit}, {mint}, {redeem} and {burn} workflows. This contract extends\n * the ERC20 standard. Any additional extensions included along it would affect the \"shares\" token represented by this\n * contract and not the \"assets\" token which is an independent contract.\n *\n * [CAUTION]\n * ====\n * In empty (or nearly empty) ERC-4626 vaults, deposits are at high risk of being stolen through frontrunning\n * with a \"donation\" to the vault that inflates the price of a share. This is variously known as a donation or inflation\n * attack and is essentially a problem of slippage. Vault deployers can protect against this attack by making an initial\n * deposit of a non-trivial amount of the asset, such that price manipulation becomes infeasible. Withdrawals may\n * similarly be affected by slippage. Users can protect against this attack as well as unexpected slippage in general by\n * verifying the amount received is as expected, using a wrapper that performs these checks such as\n * https://github.com/fei-protocol/ERC4626#erc4626router-and-base[ERC4626Router].\n *\n * Since v4.9, this implementation uses virtual assets and shares to mitigate that risk. The `_decimalsOffset()`\n * corresponds to an offset in the decimal representation between the underlying asset's decimals and the vault\n * decimals. This offset also determines the rate of virtual shares to virtual assets in the vault, which itself\n * determines the initial exchange rate. While not fully preventing the attack, analysis shows that the default offset\n * (0) makes it non-profitable, as a result of the value being captured by the virtual shares (out of the attacker's\n * donation) matching the attacker's expected gains. With a larger offset, the attack becomes orders of magnitude more\n * expensive than it is profitable. More details about the underlying math can be found\n * xref:erc4626.adoc#inflation-attack[here].\n *\n * The drawback of this approach is that the virtual shares do capture (a very small) part of the value being accrued\n * to the vault. Also, if the vault experiences losses, the users try to exit the vault, the virtual shares and assets\n * will cause the first user to exit to experience reduced losses in detriment to the last users that will experience\n * bigger losses. Developers willing to revert back to the pre-v4.9 behavior just need to override the\n * `_convertToShares` and `_convertToAssets` functions.\n *\n * To learn more, check out our xref:ROOT:erc4626.adoc[ERC-4626 guide].\n * ====\n */\nabstract contract ERC4626 is ERC20, IERC4626 {\n    using Math for uint256;\n\n    IERC20 private immutable _asset;\n    uint8 private immutable _underlyingDecimals;\n\n    /**\n     * @dev Attempted to deposit more assets than the max amount for `receiver`.\n     */\n    error ERC4626ExceededMaxDeposit(address receiver, uint256 assets, uint256 max);\n\n    /**\n     * @dev Attempted to mint more shares than the max amount for `receiver`.\n     */\n    error ERC4626ExceededMaxMint(address receiver, uint256 shares, uint256 max);\n\n    /**\n     * @dev Attempted to withdraw more assets than the max amount for `receiver`.\n     */\n    error ERC4626ExceededMaxWithdraw(address owner, uint256 assets, uint256 max);\n\n    /**\n     * @dev Attempted to redeem more shares than the max amount for `receiver`.\n     */\n    error ERC4626ExceededMaxRedeem(address owner, uint256 shares, uint256 max);\n\n    /**\n     * @dev Set the underlying asset contract. This must be an ERC20-compatible contract (ERC20 or ERC777).\n     */\n    constructor(IERC20 asset_) {\n        (bool success, uint8 assetDecimals) = _tryGetAssetDecimals(asset_);\n        _underlyingDecimals = success ? assetDecimals : 18;\n        _asset = asset_;\n    }\n\n    /**\n     * @dev Attempts to fetch the asset decimals. A return value of false indicates that the attempt failed in some way.\n     */\n    function _tryGetAssetDecimals(IERC20 asset_) private view returns (bool, uint8) {\n        (bool success, bytes memory encodedDecimals) = address(asset_).staticcall(\n            abi.encodeCall(IERC20Metadata.decimals, ())\n        );\n        if (success && encodedDecimals.length >= 32) {\n            uint256 returnedDecimals = abi.decode(encodedDecimals, (uint256));\n            if (returnedDecimals <= type(uint8).max) {\n                return (true, uint8(returnedDecimals));\n            }\n        }\n        return (false, 0);\n    }\n\n    /**\n     * @dev Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This\n     * \"original\" value is cached during construction of the vault contract. If this read operation fails (e.g., the\n     * asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals.\n     *\n     * See {IERC20Metadata-decimals}.\n     */\n    function decimals() public view virtual override(IERC20Metadata, ERC20) returns (uint8) {\n        return _underlyingDecimals + _decimalsOffset();\n    }\n\n    /** @dev See {IERC4626-asset}. */\n    function asset() public view virtual returns (address) {\n        return address(_asset);\n    }\n\n    /** @dev See {IERC4626-totalAssets}. */\n    function totalAssets() public view virtual returns (uint256) {\n        return _asset.balanceOf(address(this));\n    }\n\n    /** @dev See {IERC4626-convertToShares}. */\n    function convertToShares(uint256 assets) public view virtual returns (uint256) {\n        return _convertToShares(assets, Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-convertToAssets}. */\n    function convertToAssets(uint256 shares) public view virtual returns (uint256) {\n        return _convertToAssets(shares, Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-maxDeposit}. */\n    function maxDeposit(address) public view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    /** @dev See {IERC4626-maxMint}. */\n    function maxMint(address) public view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    /** @dev See {IERC4626-maxWithdraw}. */\n    function maxWithdraw(address owner) public view virtual returns (uint256) {\n        return _convertToAssets(balanceOf(owner), Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-maxRedeem}. */\n    function maxRedeem(address owner) public view virtual returns (uint256) {\n        return balanceOf(owner);\n    }\n\n    /** @dev See {IERC4626-previewDeposit}. */\n    function previewDeposit(uint256 assets) public view virtual returns (uint256) {\n        return _convertToShares(assets, Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-previewMint}. */\n    function previewMint(uint256 shares) public view virtual returns (uint256) {\n        return _convertToAssets(shares, Math.Rounding.Ceil);\n    }\n\n    /** @dev See {IERC4626-previewWithdraw}. */\n    function previewWithdraw(uint256 assets) public view virtual returns (uint256) {\n        return _convertToShares(assets, Math.Rounding.Ceil);\n    }\n\n    /** @dev See {IERC4626-previewRedeem}. */\n    function previewRedeem(uint256 shares) public view virtual returns (uint256) {\n        return _convertToAssets(shares, Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-deposit}. */\n    function deposit(uint256 assets, address receiver) public virtual returns (uint256) {\n        uint256 maxAssets = maxDeposit(receiver);\n        if (assets > maxAssets) {\n            revert ERC4626ExceededMaxDeposit(receiver, assets, maxAssets);\n        }\n\n        uint256 shares = previewDeposit(assets);\n        _deposit(_msgSender(), receiver, assets, shares);\n\n        return shares;\n    }\n\n    /** @dev See {IERC4626-mint}.\n     *\n     * As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero.\n     * In this case, the shares will be minted without requiring any assets to be deposited.\n     */\n    function mint(uint256 shares, address receiver) public virtual returns (uint256) {\n        uint256 maxShares = maxMint(receiver);\n        if (shares > maxShares) {\n            revert ERC4626ExceededMaxMint(receiver, shares, maxShares);\n        }\n\n        uint256 assets = previewMint(shares);\n        _deposit(_msgSender(), receiver, assets, shares);\n\n        return assets;\n    }\n\n    /** @dev See {IERC4626-withdraw}. */\n    function withdraw(uint256 assets, address receiver, address owner) public virtual returns (uint256) {\n        uint256 maxAssets = maxWithdraw(owner);\n        if (assets > maxAssets) {\n            revert ERC4626ExceededMaxWithdraw(owner, assets, maxAssets);\n        }\n\n        uint256 shares = previewWithdraw(assets);\n        _withdraw(_msgSender(), receiver, owner, assets, shares);\n\n        return shares;\n    }\n\n    /** @dev See {IERC4626-redeem}. */\n    function redeem(uint256 shares, address receiver, address owner) public virtual returns (uint256) {\n        uint256 maxShares = maxRedeem(owner);\n        if (shares > maxShares) {\n            revert ERC4626ExceededMaxRedeem(owner, shares, maxShares);\n        }\n\n        uint256 assets = previewRedeem(shares);\n        _withdraw(_msgSender(), receiver, owner, assets, shares);\n\n        return assets;\n    }\n\n    /**\n     * @dev Internal conversion function (from assets to shares) with support for rounding direction.\n     */\n    function _convertToShares(uint256 assets, Math.Rounding rounding) internal view virtual returns (uint256) {\n        return assets.mulDiv(totalSupply() + 10 ** _decimalsOffset(), totalAssets() + 1, rounding);\n    }\n\n    /**\n     * @dev Internal conversion function (from shares to assets) with support for rounding direction.\n     */\n    function _convertToAssets(uint256 shares, Math.Rounding rounding) internal view virtual returns (uint256) {\n        return shares.mulDiv(totalAssets() + 1, totalSupply() + 10 ** _decimalsOffset(), rounding);\n    }\n\n    /**\n     * @dev Deposit/mint common workflow.\n     */\n    function _deposit(address caller, address receiver, uint256 assets, uint256 shares) internal virtual {\n        // If _asset is ERC777, `transferFrom` can trigger a reentrancy BEFORE the transfer happens through the\n        // `tokensToSend` hook. On the other hand, the `tokenReceived` hook, that is triggered after the transfer,\n        // calls the vault, which is assumed not malicious.\n        //\n        // Conclusion: we need to do the transfer before we mint so that any reentrancy would happen before the\n        // assets are transferred and before the shares are minted, which is a valid state.\n        // slither-disable-next-line reentrancy-no-eth\n        SafeERC20.safeTransferFrom(_asset, caller, address(this), assets);\n        _mint(receiver, shares);\n\n        emit Deposit(caller, receiver, assets, shares);\n    }\n\n    /**\n     * @dev Withdraw/redeem common workflow.\n     */\n    function _withdraw(\n        address caller,\n        address receiver,\n        address owner,\n        uint256 assets,\n        uint256 shares\n    ) internal virtual {\n        if (caller != owner) {\n            _spendAllowance(owner, caller, shares);\n        }\n\n        // If _asset is ERC777, `transfer` can trigger a reentrancy AFTER the transfer happens through the\n        // `tokensReceived` hook. On the other hand, the `tokensToSend` hook, that is triggered before the transfer,\n        // calls the vault, which is assumed not malicious.\n        //\n        // Conclusion: we need to do the transfer after the burn so that any reentrancy would happen after the\n        // shares are burned and after the assets are transferred, which is a valid state.\n        _burn(owner, shares);\n        SafeERC20.safeTransfer(_asset, receiver, assets);\n\n        emit Withdraw(caller, receiver, owner, assets, shares);\n    }\n\n    function _decimalsOffset() internal view virtual returns (uint8) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"contracts/Looping.sol":{"content":"pragma solidity ^0.8.20;\n\nimport {Math} from \"@openzeppelin/contracts/utils/math/Math.sol\";\n\nimport {OwnableERC4626} from \"./OwnableERC4626.sol\";\nimport {IERC20} from \"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\";\n// import {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\nimport {IFlashLoanRecipient} from \"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\";\nimport {IVault} from \"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\";\nimport {IAsset} from \"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\";\n// import {AaveOracle} from \"@aave/core-v3/contracts/misc/AaveOracle.sol\";\nimport {IAaveOracle} from \"@aave/core-v3/contracts/interfaces/IAaveOracle.sol\";\nimport {DataTypes} from \"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\";\nimport {IPool} from \"@aave/core-v3/contracts/interfaces/IPool.sol\";\nimport {IVault} from \"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\";\n// import \"lib/forge-std/src/console.sol\";\n\nabstract contract Looping is OwnableERC4626 , IFlashLoanRecipient {\n    using Math for uint256;\n\n    address private constant BALANCER_FLASHLOAN = address(0xBA12222222228d8Ba445958a75a0704d566BF2C8);\n    address private constant AAVE = address(0x794a61358D6845594F94dc1DB02A252b5b4814aD);\n    address private constant AAVE_ORACLE = address(0xb56c2F0B653B2e0b10C9b928C8580Ac5Df02C7C7);\n    address private constant BALANCER_SWAP = address(0xBA12222222228d8Ba445958a75a0704d566BF2C8);\n    bytes32 private constant BALANCER_POOL_ID = bytes32(uint256(0x36bf227d6bac96e2ab1ebb5492ecec69c691943f000200000000000000000316));\n    uint256 private _max_ltv; // in bps\n    uint256 private _slippage; // in bps\n    DataTypes.InterestRateMode private _interestRateMode;\n\n    enum Operation {Deposit, Withdraw}\n\n    constructor(address asset, address base, uint256 max_ltv, uint256 slippage) \n    OwnableERC4626(asset, base) {\n        _max_ltv = max_ltv;\n        _slippage = slippage;\n        _interestRateMode = DataTypes.InterestRateMode.VARIABLE;\n    }\n    \n    function setExecutionParams(uint16 max_ltv, uint16 slippage, DataTypes.InterestRateMode interestRateMode) external onlyOwner {\n        IPool(AAVE).setUserEMode(2);\n        _max_ltv = max_ltv;\n        _slippage = slippage;\n        _interestRateMode = interestRateMode;\n    }\n\n    function depositCalculations(uint depositAmt) private view returns (uint flashLoanAmt, uint minAmountsOut) {\n        // compute how much we can flashloan\n        // assume assetPrice/liabilityPrice is p from orcacle, but slippage to p*(1+slippage/10000)\n        // there are also starting asset and liability A and L and we look for dL and dA.\n        // ltv contraint: L+dL = max_ltv * (A+dA)\n        // swap new deposit dE and flashLoan dF into dA, worth (dE+dF) / (1+slippage/10000)\n        // flashLoan return from loan, so dF = dL\n        // solve that...\n        uint assetPrice = IAaveOracle(AAVE_ORACLE).getAssetPrice(_base);\n        uint liabilityPrice = IAaveOracle(AAVE_ORACLE).getAssetPrice(this.asset());\n        (, , uint256 availableBorrowsBase, , , ) = IPool(AAVE).getUserAccountData(address(this));\n        uint availableBorrows =  availableBorrowsBase / liabilityPrice;\n\n        flashLoanAmt = (availableBorrows + depositAmt.mulDiv(_max_ltv,(1+_slippage/10000))) / (1-_max_ltv/(1+_slippage/10000));\n        minAmountsOut = (depositAmt + flashLoanAmt).mulDiv(liabilityPrice, assetPrice*(1+_slippage/10000));\n    } \n\n    function _deposit(address caller, address receiver, uint256 assets, uint256 shares) internal override {\n        super._deposit(caller, receiver, assets, shares);\n        \n        // well,  that assumes we start empty\n        (uint flashLoanAmt, uint minAmountsOut) = depositCalculations(assets);\n\n        // Flashloan will call receiveFlashLoan(), where the rest of the logic will be executed\n        IERC20[] memory tokens = new IERC20[](1);\n        tokens[0] = IERC20(this.asset());\n        uint256[] memory amounts = new uint256[](1);\n        amounts[0] = flashLoanAmt;\n        bytes memory userData = abi.encodePacked(Operation.Deposit, minAmountsOut, type(uint256).min);\n        \n        IVault(BALANCER_FLASHLOAN).flashLoan(IFlashLoanRecipient(this), tokens, amounts, userData);\n    }\n\n    function withdrawCalculations(uint sharesAmt) private view returns (uint flashLoanAmt, uint minAmountsOut, uint withdrawAmt) {\n        /* for withdraw:\n        - just scale the debt by the ratio of shares then repay that \"flashLoanAmt\"\n        - can now withdraw flashLoanAmt/max_ltv worth of base asset\n        - swap this into flashLoanAmt/max_ltv*liabilityPrice/assetPrice asset\n        - apply slippage to that => flashLoanAmt*liabilityPrice/(max_ltv*assetPrice asset*(1+slippage/10000))\n        */\n        uint assetPrice = IAaveOracle(AAVE_ORACLE).getAssetPrice(_base);\n        uint liabilityPrice = IAaveOracle(AAVE_ORACLE).getAssetPrice(this.asset());\n        (uint256 totalCollateralBase, uint256 totalDebtBase, , , , ) = IPool(AAVE).getUserAccountData(address(this));\n        \n        flashLoanAmt = totalDebtBase.mulDiv(sharesAmt, totalSupply());\n        minAmountsOut = flashLoanAmt.mulDiv(liabilityPrice, _max_ltv*assetPrice*(1+_slippage/10000));\n    }\n\n    function _withdraw(\n        address caller,\n        address receiver,\n        address owner,\n        uint256 assets,\n        uint256 shares\n    ) internal override {\n        (uint flashLoanAmt, uint minAmountsOut, uint withdrawAmt) = withdrawCalculations(shares);\n\n        // Flashloan will call receiveFlashLoan(), where the rest of the logic will be executed\n        IERC20[] memory tokens = new IERC20[](1);\n        tokens[0] = IERC20(_base);\n        uint256[] memory amounts = new uint256[](1);\n        amounts[0] = flashLoanAmt;\n        bytes memory userData = abi.encodePacked(Operation.Withdraw, minAmountsOut, withdrawAmt);\n        \n        IVault(BALANCER_FLASHLOAN).flashLoan(IFlashLoanRecipient(this), tokens, amounts, userData);\n\n        super._withdraw(caller, receiver, owner, assets, shares);\n    }\n\n    // Implement the IFlashLoanRecipient interface\n    function receiveFlashLoan(\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        uint256[] memory feeAmounts,\n        bytes memory userData\n    ) external {\n        (Operation operation, uint minAmountsOut, uint withdrawAmt) = abi.decode(userData, (Operation, uint256, uint256));\n\n        if (operation == Operation.Deposit) {\n            _leverage(amounts[0], minAmountsOut);\n        } else if (operation == Operation.Withdraw) {\n            _deleverage(amounts[0], withdrawAmt, minAmountsOut);\n        } else {\n            revert(\"Looping: unknown operation\");\n        }\n    }\n\n    function _leverage(uint flashLoanAmt, uint minAmountsOut) private {\n        // swap this.asset() for base\n        uint256 amountToSwap = IERC20(this.asset()).balanceOf(address(this));\n        if (IERC20(this.asset()).allowance(address(this), BALANCER_SWAP) < amountToSwap)\n        {\n            bool success = IERC20(this.asset()).approve(BALANCER_SWAP, amountToSwap);\n            require(success, \"Looping: failed to approve this.asset() for ONEINCH\");\n        }\n        \n        {\n            IVault.SingleSwap memory singleSwap = IVault.SingleSwap({\n                poolId: BALANCER_POOL_ID,\n                kind: IVault.SwapKind.GIVEN_IN,\n                assetIn: IAsset(this.asset()),\n                assetOut: IAsset(_base),\n                amount: amountToSwap,\n                userData: \"0x\"\n            });\n\n            IVault.FundManagement memory funds = IVault.FundManagement({\n                sender:address(this),\n                fromInternalBalance:false,\n                recipient:payable(address(this)),\n                toInternalBalance:false});\n            uint limit = minAmountsOut;\n            uint deadline = block.timestamp+60; // 1 minute\n            uint256 amountCalculated = IVault(BALANCER_SWAP).swap(\n                singleSwap,\n                funds,\n                limit,\n                deadline\n            );\n        }\n\n        // deposit base to AAVE\n        {\n            bool success = IERC20(_base).approve(AAVE, IERC20(_base).balanceOf(address(this)));\n            require(success, \"Looping: failed to approve stETH for AAVE\");\n        }\n        IPool(AAVE).supply(_base, IERC20(_base).balanceOf(address(this)), address(this), 0);\n\n        // borrow asset from AAVE to repay flashloan\n        IPool(AAVE).borrow(this.asset(), flashLoanAmt, uint256(_interestRateMode), 0, address(this));\n    }\n\n    function _deleverage(uint flashLoanAmt, uint lendAmt, uint minAmountsOut) private {\n        // repay this.asset() from AAVE\n        IPool(AAVE).repay(this.asset(), flashLoanAmt, uint256(_interestRateMode), address(this));\n\n        // withdraw base from AAVE\n        IPool(AAVE).withdraw(_base, lendAmt, address(this));\n        \n        // swap base for this.asset()\n        uint256 amountToSwap = IERC20(_base).balanceOf(address(this));\n        if (IERC20(_base).allowance(address(this), BALANCER_SWAP) < amountToSwap)\n        {\n            bool success = IERC20(_base).approve(BALANCER_SWAP, amountToSwap);\n            require(success, \"Looping: failed to approve _base for ONEINCH\");\n        }\n        \n        {\n            IVault.SingleSwap memory singleSwap = IVault.SingleSwap({\n                poolId: BALANCER_POOL_ID,\n                kind: IVault.SwapKind.GIVEN_IN,\n                assetOut: IAsset(this.asset()),\n                assetIn: IAsset(_base),\n                amount: amountToSwap,\n                userData: \"0x\"\n            });\n\n            IVault.FundManagement memory funds = IVault.FundManagement({\n                sender:address(this),\n                fromInternalBalance:false,\n                recipient:payable(address(this)),\n                toInternalBalance:false});\n            uint limit = minAmountsOut;\n            uint deadline = block.timestamp+60; // 1 minute\n            uint256 amountCalculated = IVault(BALANCER_SWAP).swap(\n                singleSwap,\n                funds,\n                limit,\n                deadline\n            );\n        }\n    }\n}"},"contracts/OwnableERC4626.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {ERC4626} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/interfaces/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/* this was needed to make the contract compile, \nbecause both balancer and openzepppelin ERC4626 uses IERC20, \nbut from different locations.\n*/\nabstract contract OwnableERC4626 is ERC4626, Ownable {\n    using SafeERC20 for IERC20;\n\n    address internal immutable _base;\n    constructor(address quote, address base) \n    ERC4626(IERC20(quote))\n    Ownable(msg.sender)\n    {\n        _base = base;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Looping.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Looping.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Looping.sol:80:112:\n   |\n80 |     function withdrawCalculations(uint sharesAmt) private view returns (uint flashLoanAmt, uint minAmountsOut, uint withdrawAmt) {\n   |                                                                                                                ^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4409,"file":"contracts/Looping.sol","start":4393},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/Looping.sol:89:10:\n   |\n89 |         (uint256 totalCollateralBase, uint256 totalDebtBase, , , , ) = IPool(AAVE).getUserAccountData(address(this));\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":4982,"file":"contracts/Looping.sol","start":4955},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/Looping.sol:118:9:\n    |\n118 |         IERC20[] memory tokens,\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6184,"file":"contracts/Looping.sol","start":6162},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/Looping.sol:120:9:\n    |\n120 |         uint256[] memory feeAmounts,\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6255,"file":"contracts/Looping.sol","start":6228},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/Looping.sol:160:13:\n    |\n160 |             uint256 amountCalculated = IVault(BALANCER_SWAP).swap(\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":7931,"file":"contracts/Looping.sol","start":7907},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/Looping.sol:211:13:\n    |\n211 |             uint256 amountCalculated = IVault(BALANCER_SWAP).swap(\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":10002,"file":"contracts/Looping.sol","start":9978},"type":"Warning"}],"sources":{"@aave/core-v3/contracts/interfaces/IAaveOracle.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/interfaces/IAaveOracle.sol","exportedSymbols":{"IAaveOracle":[75],"IPoolAddressesProvider":[923],"IPriceOracleGetter":[947]},"id":76,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:0"},{"absolutePath":"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol","file":"./IPriceOracleGetter.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":76,"sourceUnit":948,"src":"62:60:0","symbolAliases":[{"foreign":{"id":2,"name":"IPriceOracleGetter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"70:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol","file":"./IPoolAddressesProvider.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":76,"sourceUnit":924,"src":"123:68:0","symbolAliases":[{"foreign":{"id":4,"name":"IPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"131:22:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7,"name":"IPriceOracleGetter","nameLocations":["323:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":947,"src":"323:18:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"323:18:0"}],"canonicalName":"IAaveOracle","contractDependencies":[],"contractKind":"interface","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"193:104:0","text":" @title IAaveOracle\n @author Aave\n @notice Defines the basic interface for the Aave Oracle"},"fullyImplemented":false,"id":75,"linearizedBaseContracts":[75,947],"name":"IAaveOracle","nameLocation":"308:11:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"346:185:0","text":" @dev Emitted after the base currency is set\n @param baseCurrency The base currency of used for price quotes\n @param baseCurrencyUnit The unit of the base currency"},"eventSelector":"e27c4c1372396a3d15a9922f74f9dfc7c72b1ad6d63868470787249c356454c1","id":15,"name":"BaseCurrencySet","nameLocation":"540:15:0","nodeType":"EventDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"baseCurrency","nameLocation":"572:12:0","nodeType":"VariableDeclaration","scope":15,"src":"556:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"556:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13,"indexed":false,"mutability":"mutable","name":"baseCurrencyUnit","nameLocation":"594:16:0","nodeType":"VariableDeclaration","scope":15,"src":"586:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"555:56:0"},"src":"534:78:0"},{"anonymous":false,"documentation":{"id":16,"nodeType":"StructuredDocumentation","src":"616:165:0","text":" @dev Emitted after the price source of an asset is updated\n @param asset The address of the asset\n @param source The price source of the asset"},"eventSelector":"22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc1","id":22,"name":"AssetSourceUpdated","nameLocation":"790:18:0","nodeType":"EventDefinition","parameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"825:5:0","nodeType":"VariableDeclaration","scope":22,"src":"809:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"source","nameLocation":"848:6:0","nodeType":"VariableDeclaration","scope":22,"src":"832:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"832:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"808:47:0"},"src":"784:72:0"},{"anonymous":false,"documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"860:137:0","text":" @dev Emitted after the address of fallback oracle is updated\n @param fallbackOracle The address of the fallback oracle"},"eventSelector":"ce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb","id":27,"name":"FallbackOracleUpdated","nameLocation":"1006:21:0","nodeType":"EventDefinition","parameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"indexed":true,"mutability":"mutable","name":"fallbackOracle","nameLocation":"1044:14:0","nodeType":"VariableDeclaration","scope":27,"src":"1028:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1027:32:0"},"src":"1000:60:0"},{"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"1064:119:0","text":" @notice Returns the PoolAddressesProvider\n @return The address of the PoolAddressesProvider contract"},"functionSelector":"0542975c","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"ADDRESSES_PROVIDER","nameLocation":"1195:18:0","nodeType":"FunctionDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1213:2:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"1239:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolAddressesProvider_$923","typeString":"contract IPoolAddressesProvider"},"typeName":{"id":31,"nodeType":"UserDefinedTypeName","pathNode":{"id":30,"name":"IPoolAddressesProvider","nameLocations":["1239:22:0"],"nodeType":"IdentifierPath","referencedDeclaration":923,"src":"1239:22:0"},"referencedDeclaration":923,"src":"1239:22:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolAddressesProvider_$923","typeString":"contract IPoolAddressesProvider"}},"visibility":"internal"}],"src":"1238:24:0"},"scope":75,"src":"1186:77:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"1267:165:0","text":" @notice Sets or replaces price sources of assets\n @param assets The addresses of the assets\n @param sources The addresses of the price sources"},"functionSelector":"abfd5310","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"setAssetSources","nameLocation":"1444:15:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"assets","nameLocation":"1479:6:0","nodeType":"VariableDeclaration","scope":44,"src":"1460:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1460:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":37,"nodeType":"ArrayTypeName","src":"1460:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"sources","nameLocation":"1506:7:0","nodeType":"VariableDeclaration","scope":44,"src":"1487:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":39,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":40,"nodeType":"ArrayTypeName","src":"1487:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1459:55:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1523:0:0"},"scope":75,"src":"1435:89:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1528:109:0","text":" @notice Sets the fallback oracle\n @param fallbackOracle The address of the fallback oracle"},"functionSelector":"170aee73","id":50,"implemented":false,"kind":"function","modifiers":[],"name":"setFallbackOracle","nameLocation":"1649:17:0","nodeType":"FunctionDefinition","parameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"fallbackOracle","nameLocation":"1675:14:0","nodeType":"VariableDeclaration","scope":50,"src":"1667:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1666:24:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[],"src":"1699:0:0"},"scope":75,"src":"1640:60:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1704:171:0","text":" @notice Returns a list of prices from a list of assets addresses\n @param assets The list of assets addresses\n @return The prices of the given assets"},"functionSelector":"9d23d9f2","id":60,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetsPrices","nameLocation":"1887:15:0","nodeType":"FunctionDefinition","parameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54,"mutability":"mutable","name":"assets","nameLocation":"1922:6:0","nodeType":"VariableDeclaration","scope":60,"src":"1903:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"1903:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":53,"nodeType":"ArrayTypeName","src":"1903:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1902:27:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"1953:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":57,"nodeType":"ArrayTypeName","src":"1953:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1952:18:0"},"scope":75,"src":"1878:93:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1975:159:0","text":" @notice Returns the address of the source for an asset address\n @param asset The address of the asset\n @return The address of the source"},"functionSelector":"92bf2be0","id":68,"implemented":false,"kind":"function","modifiers":[],"name":"getSourceOfAsset","nameLocation":"2146:16:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"asset","nameLocation":"2171:5:0","nodeType":"VariableDeclaration","scope":68,"src":"2163:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2163:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2162:15:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":68,"src":"2201:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"2201:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2200:9:0"},"scope":75,"src":"2137:73:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"2214:113:0","text":" @notice Returns the address of the fallback oracle\n @return The address of the fallback oracle"},"functionSelector":"6210308c","id":74,"implemented":false,"kind":"function","modifiers":[],"name":"getFallbackOracle","nameLocation":"2339:17:0","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2356:2:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"2382:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"2382:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2381:9:0"},"scope":75,"src":"2330:61:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":76,"src":"298:2095:0","usedErrors":[],"usedEvents":[15,22,27]}],"src":"37:2357:0"},"id":0},"@aave/core-v3/contracts/interfaces/IPool.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/interfaces/IPool.sol","exportedSymbols":{"DataTypes":[1299],"IPool":[714],"IPoolAddressesProvider":[923]},"id":715,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":77,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:1"},{"absolutePath":"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol","file":"./IPoolAddressesProvider.sol","id":79,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":715,"sourceUnit":924,"src":"62:68:1","symbolAliases":[{"foreign":{"id":78,"name":"IPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"70:22:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","file":"../protocol/libraries/types/DataTypes.sol","id":81,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":715,"sourceUnit":1300,"src":"131:68:1","symbolAliases":[{"foreign":{"id":80,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"139:9:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPool","contractDependencies":[],"contractKind":"interface","documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"201:96:1","text":" @title IPool\n @author Aave\n @notice Defines the basic interface for an Aave Pool."},"fullyImplemented":false,"id":714,"linearizedBaseContracts":[714],"name":"IPool","nameLocation":"308:5:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"318:349:1","text":" @dev Emitted on mintUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n @param amount The amount of supplied assets\n @param referralCode The referral code used"},"eventSelector":"f25af37b3d3ec226063dc9bdc103ece7eb110a50f340fe854bb7bc1b0676d7d0","id":95,"name":"MintUnbacked","nameLocation":"676:12:1","nodeType":"EventDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"710:7:1","nodeType":"VariableDeclaration","scope":95,"src":"694:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"694:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":87,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"731:4:1","nodeType":"VariableDeclaration","scope":95,"src":"723:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"723:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"757:10:1","nodeType":"VariableDeclaration","scope":95,"src":"741:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":88,"name":"address","nodeType":"ElementaryTypeName","src":"741:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":91,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"781:6:1","nodeType":"VariableDeclaration","scope":95,"src":"773:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":93,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"808:12:1","nodeType":"VariableDeclaration","scope":95,"src":"793:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":92,"name":"uint16","nodeType":"ElementaryTypeName","src":"793:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"688:136:1"},"src":"670:155:1"},{"anonymous":false,"documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"829:257:1","text":" @dev Emitted on backUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param backer The address paying for the backing\n @param amount The amount added as backing\n @param fee The amount paid in fees"},"eventSelector":"281596e92b2d974beb7d4f124df30a0b39067b096893e95011ce4bdad798b759","id":106,"name":"BackUnbacked","nameLocation":"1095:12:1","nodeType":"EventDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1124:7:1","nodeType":"VariableDeclaration","scope":106,"src":"1108:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"1108:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100,"indexed":true,"mutability":"mutable","name":"backer","nameLocation":"1149:6:1","nodeType":"VariableDeclaration","scope":106,"src":"1133:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1165:6:1","nodeType":"VariableDeclaration","scope":106,"src":"1157:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":104,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"1181:3:1","nodeType":"VariableDeclaration","scope":106,"src":"1173:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1173:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1107:78:1"},"src":"1089:97:1"},{"anonymous":false,"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"1190:324:1","text":" @dev Emitted on supply()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n @param amount The amount supplied\n @param referralCode The referral code used"},"eventSelector":"2b627736bca15cd5381dcf80b0bf11fd197d01a037c52b927a881a10fb73ba61","id":119,"name":"Supply","nameLocation":"1523:6:1","nodeType":"EventDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1551:7:1","nodeType":"VariableDeclaration","scope":119,"src":"1535:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"1535:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":111,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1572:4:1","nodeType":"VariableDeclaration","scope":119,"src":"1564:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"1564:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":113,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"1598:10:1","nodeType":"VariableDeclaration","scope":119,"src":"1582:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":115,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1622:6:1","nodeType":"VariableDeclaration","scope":119,"src":"1614:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":117,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"1649:12:1","nodeType":"VariableDeclaration","scope":119,"src":"1634:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":116,"name":"uint16","nodeType":"ElementaryTypeName","src":"1634:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1529:136:1"},"src":"1517:149:1"},{"anonymous":false,"documentation":{"id":120,"nodeType":"StructuredDocumentation","src":"1670:292:1","text":" @dev Emitted on withdraw()\n @param reserve The address of the underlying asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to The address that will receive the underlying\n @param amount The amount to be withdrawn"},"eventSelector":"3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f7","id":130,"name":"Withdraw","nameLocation":"1971:8:1","nodeType":"EventDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1996:7:1","nodeType":"VariableDeclaration","scope":130,"src":"1980:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"1980:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":124,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2021:4:1","nodeType":"VariableDeclaration","scope":130,"src":"2005:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"2005:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":126,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2043:2:1","nodeType":"VariableDeclaration","scope":130,"src":"2027:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"2027:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2055:6:1","nodeType":"VariableDeclaration","scope":130,"src":"2047:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2047:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1979:83:1"},"src":"1965:98:1"},{"anonymous":false,"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"2067:628:1","text":" @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n @param referralCode The referral code used"},"eventSelector":"b3d084820fb1a9decffb176436bd02558d15fac9b0ddfed8c465bc7359d7dce0","id":148,"name":"Borrow","nameLocation":"2704:6:1","nodeType":"EventDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"2732:7:1","nodeType":"VariableDeclaration","scope":148,"src":"2716:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2716:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":135,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2753:4:1","nodeType":"VariableDeclaration","scope":148,"src":"2745:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"2745:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":137,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"2779:10:1","nodeType":"VariableDeclaration","scope":148,"src":"2763:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"2763:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":139,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2803:6:1","nodeType":"VariableDeclaration","scope":148,"src":"2795:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"2795:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":142,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"2842:16:1","nodeType":"VariableDeclaration","scope":148,"src":"2815:43:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":141,"nodeType":"UserDefinedTypeName","pathNode":{"id":140,"name":"DataTypes.InterestRateMode","nameLocations":["2815:9:1","2825:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":1003,"src":"2815:26:1"},"referencedDeclaration":1003,"src":"2815:26:1","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":144,"indexed":false,"mutability":"mutable","name":"borrowRate","nameLocation":"2872:10:1","nodeType":"VariableDeclaration","scope":148,"src":"2864:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":146,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"2903:12:1","nodeType":"VariableDeclaration","scope":148,"src":"2888:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":145,"name":"uint16","nodeType":"ElementaryTypeName","src":"2888:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"2710:209:1"},"src":"2698:222:1"},{"anonymous":false,"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"2924:425:1","text":" @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid\n @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly"},"eventSelector":"a534c8dbe71f871f9f3530e97a74601fea17b426cae02e1c5aee42c96c784051","id":161,"name":"Repay","nameLocation":"3358:5:1","nodeType":"EventDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"3385:7:1","nodeType":"VariableDeclaration","scope":161,"src":"3369:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"3369:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":153,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3414:4:1","nodeType":"VariableDeclaration","scope":161,"src":"3398:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"3398:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"indexed":true,"mutability":"mutable","name":"repayer","nameLocation":"3440:7:1","nodeType":"VariableDeclaration","scope":161,"src":"3424:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"3424:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3461:6:1","nodeType":"VariableDeclaration","scope":161,"src":"3453:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3453:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":159,"indexed":false,"mutability":"mutable","name":"useATokens","nameLocation":"3478:10:1","nodeType":"VariableDeclaration","scope":161,"src":"3473:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":158,"name":"bool","nodeType":"ElementaryTypeName","src":"3473:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3363:129:1"},"src":"3352:141:1"},{"anonymous":false,"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"3497:306:1","text":" @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"},"eventSelector":"7962b394d85a534033ba2efcf43cd36de57b7ebeb3de0ca4428965d9b3ddc481","id":171,"name":"SwapBorrowRateMode","nameLocation":"3812:18:1","nodeType":"EventDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"3852:7:1","nodeType":"VariableDeclaration","scope":171,"src":"3836:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"3836:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3881:4:1","nodeType":"VariableDeclaration","scope":171,"src":"3865:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":169,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"3918:16:1","nodeType":"VariableDeclaration","scope":171,"src":"3891:43:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":168,"nodeType":"UserDefinedTypeName","pathNode":{"id":167,"name":"DataTypes.InterestRateMode","nameLocations":["3891:9:1","3901:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":1003,"src":"3891:26:1"},"referencedDeclaration":1003,"src":"3891:26:1","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"}],"src":"3830:108:1"},"src":"3806:133:1"},{"anonymous":false,"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"3943:234:1","text":" @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n @param asset The address of the underlying asset of the reserve\n @param totalDebt The total isolation mode debt for the reserve"},"eventSelector":"aef84d3b40895fd58c561f3998000f0583abb992a52fbdc99ace8e8de4d676a5","id":178,"name":"IsolationModeTotalDebtUpdated","nameLocation":"4186:29:1","nodeType":"EventDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"4232:5:1","nodeType":"VariableDeclaration","scope":178,"src":"4216:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"4216:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":176,"indexed":false,"mutability":"mutable","name":"totalDebt","nameLocation":"4247:9:1","nodeType":"VariableDeclaration","scope":178,"src":"4239:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"4239:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4215:42:1"},"src":"4180:78:1"},{"anonymous":false,"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"4262:164:1","text":" @dev Emitted when the user selects a certain asset category for eMode\n @param user The address of the user\n @param categoryId The category id"},"eventSelector":"d728da875fc88944cbf17638bcbe4af0eedaef63becd1d1c57cc097eb4608d84","id":185,"name":"UserEModeSet","nameLocation":"4435:12:1","nodeType":"EventDefinition","parameters":{"id":184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4464:4:1","nodeType":"VariableDeclaration","scope":185,"src":"4448:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":183,"indexed":false,"mutability":"mutable","name":"categoryId","nameLocation":"4476:10:1","nodeType":"VariableDeclaration","scope":185,"src":"4470:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":182,"name":"uint8","nodeType":"ElementaryTypeName","src":"4470:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4447:40:1"},"src":"4429:59:1"},{"anonymous":false,"documentation":{"id":186,"nodeType":"StructuredDocumentation","src":"4492:207:1","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"},"eventSelector":"00058a56ea94653cdf4f152d227ace22d4c00ad99e2a43f58cb7d9e3feb295f2","id":192,"name":"ReserveUsedAsCollateralEnabled","nameLocation":"4708:30:1","nodeType":"EventDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"4755:7:1","nodeType":"VariableDeclaration","scope":192,"src":"4739:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"4739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4780:4:1","nodeType":"VariableDeclaration","scope":192,"src":"4764:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"4764:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4738:47:1"},"src":"4702:84:1"},{"anonymous":false,"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"4790:207:1","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"},"eventSelector":"44c58d81365b66dd4b1a7f36c25aa97b8c71c361ee4937adc1a00000227db5dd","id":199,"name":"ReserveUsedAsCollateralDisabled","nameLocation":"5006:31:1","nodeType":"EventDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"5054:7:1","nodeType":"VariableDeclaration","scope":199,"src":"5038:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5038:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5079:4:1","nodeType":"VariableDeclaration","scope":199,"src":"5063:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"5063:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5037:47:1"},"src":"5000:85:1"},{"anonymous":false,"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"5089:212:1","text":" @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed"},"eventSelector":"9f439ae0c81e41a04d3fdfe07aed54e6a179fb0db15be7702eb66fa8ef6f5300","id":206,"name":"RebalanceStableBorrowRate","nameLocation":"5310:25:1","nodeType":"EventDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"5352:7:1","nodeType":"VariableDeclaration","scope":206,"src":"5336:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"5336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5377:4:1","nodeType":"VariableDeclaration","scope":206,"src":"5361:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"5361:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5335:47:1"},"src":"5304:79:1"},{"anonymous":false,"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"5387:482:1","text":" @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n @param premium The fee flash borrowed\n @param referralCode The referral code used"},"eventSelector":"efefaba5e921573100900a3ad9cf29f222d995fb3b6045797eaea7521bd8d6f0","id":224,"name":"FlashLoan","nameLocation":"5878:9:1","nodeType":"EventDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"5909:6:1","nodeType":"VariableDeclaration","scope":224,"src":"5893:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"5893:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"indexed":false,"mutability":"mutable","name":"initiator","nameLocation":"5929:9:1","nodeType":"VariableDeclaration","scope":224,"src":"5921:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"5921:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":213,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"5960:5:1","nodeType":"VariableDeclaration","scope":224,"src":"5944:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"5944:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":215,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"5979:6:1","nodeType":"VariableDeclaration","scope":224,"src":"5971:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"5971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":218,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"6018:16:1","nodeType":"VariableDeclaration","scope":224,"src":"5991:43:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":217,"nodeType":"UserDefinedTypeName","pathNode":{"id":216,"name":"DataTypes.InterestRateMode","nameLocations":["5991:9:1","6001:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":1003,"src":"5991:26:1"},"referencedDeclaration":1003,"src":"5991:26:1","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":220,"indexed":false,"mutability":"mutable","name":"premium","nameLocation":"6048:7:1","nodeType":"VariableDeclaration","scope":224,"src":"6040:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"6040:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":222,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"6076:12:1","nodeType":"VariableDeclaration","scope":224,"src":"6061:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":221,"name":"uint16","nodeType":"ElementaryTypeName","src":"6061:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5887:205:1"},"src":"5872:221:1"},{"anonymous":false,"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"6097:749:1","text":" @dev Emitted when a borrower is liquidated.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n @param liquidator The address of the liquidator\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"},"eventSelector":"e413a321e8681d831f4dbccbca790d2952b56f977908e45be37335533e005286","id":241,"name":"LiquidationCall","nameLocation":"6855:15:1","nodeType":"EventDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"indexed":true,"mutability":"mutable","name":"collateralAsset","nameLocation":"6892:15:1","nodeType":"VariableDeclaration","scope":241,"src":"6876:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"6876:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":229,"indexed":true,"mutability":"mutable","name":"debtAsset","nameLocation":"6929:9:1","nodeType":"VariableDeclaration","scope":241,"src":"6913:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"6913:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":231,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"6960:4:1","nodeType":"VariableDeclaration","scope":241,"src":"6944:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"6944:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"indexed":false,"mutability":"mutable","name":"debtToCover","nameLocation":"6978:11:1","nodeType":"VariableDeclaration","scope":241,"src":"6970:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"6970:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":235,"indexed":false,"mutability":"mutable","name":"liquidatedCollateralAmount","nameLocation":"7003:26:1","nodeType":"VariableDeclaration","scope":241,"src":"6995:34:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"6995:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":237,"indexed":false,"mutability":"mutable","name":"liquidator","nameLocation":"7043:10:1","nodeType":"VariableDeclaration","scope":241,"src":"7035:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"7035:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":239,"indexed":false,"mutability":"mutable","name":"receiveAToken","nameLocation":"7064:13:1","nodeType":"VariableDeclaration","scope":241,"src":"7059:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":238,"name":"bool","nodeType":"ElementaryTypeName","src":"7059:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6870:211:1"},"src":"6849:233:1"},{"anonymous":false,"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"7086:421:1","text":" @dev Emitted when the state of a reserve is updated.\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The next liquidity rate\n @param stableBorrowRate The next stable borrow rate\n @param variableBorrowRate The next variable borrow rate\n @param liquidityIndex The next liquidity index\n @param variableBorrowIndex The next variable borrow index"},"eventSelector":"804c9b842b2748a22bb64b345453a3de7ca54a6ca45ce00d415894979e22897a","id":256,"name":"ReserveDataUpdated","nameLocation":"7516:18:1","nodeType":"EventDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"7556:7:1","nodeType":"VariableDeclaration","scope":256,"src":"7540:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"7540:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":246,"indexed":false,"mutability":"mutable","name":"liquidityRate","nameLocation":"7577:13:1","nodeType":"VariableDeclaration","scope":256,"src":"7569:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"7569:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":248,"indexed":false,"mutability":"mutable","name":"stableBorrowRate","nameLocation":"7604:16:1","nodeType":"VariableDeclaration","scope":256,"src":"7596:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"7596:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":250,"indexed":false,"mutability":"mutable","name":"variableBorrowRate","nameLocation":"7634:18:1","nodeType":"VariableDeclaration","scope":256,"src":"7626:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"7626:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":252,"indexed":false,"mutability":"mutable","name":"liquidityIndex","nameLocation":"7666:14:1","nodeType":"VariableDeclaration","scope":256,"src":"7658:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"7658:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":254,"indexed":false,"mutability":"mutable","name":"variableBorrowIndex","nameLocation":"7694:19:1","nodeType":"VariableDeclaration","scope":256,"src":"7686:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"7686:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7534:183:1"},"src":"7510:208:1"},{"anonymous":false,"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"7722:211:1","text":" @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n @param reserve The address of the reserve\n @param amountMinted The amount minted to the treasury"},"eventSelector":"bfa21aa5d5f9a1f0120a95e7c0749f389863cbdbfff531aa7339077a5bc919de","id":263,"name":"MintedToTreasury","nameLocation":"7942:16:1","nodeType":"EventDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"7975:7:1","nodeType":"VariableDeclaration","scope":263,"src":"7959:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"7959:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":261,"indexed":false,"mutability":"mutable","name":"amountMinted","nameLocation":"7992:12:1","nodeType":"VariableDeclaration","scope":263,"src":"7984:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"7984:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7958:47:1"},"src":"7936:70:1"},{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"8010:428:1","text":" @notice Mints an `amount` of aTokens to the `onBehalfOf`\n @param asset The address of the underlying asset to mint\n @param amount The amount to mint\n @param onBehalfOf The address that will receive the aTokens\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"69a933a5","id":275,"implemented":false,"kind":"function","modifiers":[],"name":"mintUnbacked","nameLocation":"8450:12:1","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"asset","nameLocation":"8476:5:1","nodeType":"VariableDeclaration","scope":275,"src":"8468:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"8468:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"amount","nameLocation":"8495:6:1","nodeType":"VariableDeclaration","scope":275,"src":"8487:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"8487:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"onBehalfOf","nameLocation":"8515:10:1","nodeType":"VariableDeclaration","scope":275,"src":"8507:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":269,"name":"address","nodeType":"ElementaryTypeName","src":"8507:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"referralCode","nameLocation":"8538:12:1","nodeType":"VariableDeclaration","scope":275,"src":"8531:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":271,"name":"uint16","nodeType":"ElementaryTypeName","src":"8531:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"8462:92:1"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[],"src":"8563:0:1"},"scope":714,"src":"8441:123:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"8568:259:1","text":" @notice Back the current unbacked underlying with `amount` and pay `fee`.\n @param asset The address of the underlying asset to back\n @param amount The amount to back\n @param fee The amount paid in fees\n @return The backed amount"},"functionSelector":"d65dc7a1","id":287,"implemented":false,"kind":"function","modifiers":[],"name":"backUnbacked","nameLocation":"8839:12:1","nodeType":"FunctionDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"asset","nameLocation":"8860:5:1","nodeType":"VariableDeclaration","scope":287,"src":"8852:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"8852:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"amount","nameLocation":"8875:6:1","nodeType":"VariableDeclaration","scope":287,"src":"8867:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"8867:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"fee","nameLocation":"8891:3:1","nodeType":"VariableDeclaration","scope":287,"src":"8883:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"8883:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8851:44:1"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":287,"src":"8914:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"8914:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8913:9:1"},"scope":714,"src":"8830:93:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"8927:712:1","text":" @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"617ba037","id":299,"implemented":false,"kind":"function","modifiers":[],"name":"supply","nameLocation":"9651:6:1","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"asset","nameLocation":"9666:5:1","nodeType":"VariableDeclaration","scope":299,"src":"9658:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"9658:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"amount","nameLocation":"9681:6:1","nodeType":"VariableDeclaration","scope":299,"src":"9673:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"9673:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"onBehalfOf","nameLocation":"9697:10:1","nodeType":"VariableDeclaration","scope":299,"src":"9689:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"9689:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"referralCode","nameLocation":"9716:12:1","nodeType":"VariableDeclaration","scope":299,"src":"9709:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":295,"name":"uint16","nodeType":"ElementaryTypeName","src":"9709:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"9657:72:1"},"returnParameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"9738:0:1"},"scope":714,"src":"9642:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"9743:962:1","text":" @notice Supply with transfer approval of asset to be supplied done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param deadline The deadline timestamp that the permit is valid\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig"},"functionSelector":"02c205f0","id":319,"implemented":false,"kind":"function","modifiers":[],"name":"supplyWithPermit","nameLocation":"10717:16:1","nodeType":"FunctionDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"asset","nameLocation":"10747:5:1","nodeType":"VariableDeclaration","scope":319,"src":"10739:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"10739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"amount","nameLocation":"10766:6:1","nodeType":"VariableDeclaration","scope":319,"src":"10758:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"10758:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"onBehalfOf","nameLocation":"10786:10:1","nodeType":"VariableDeclaration","scope":319,"src":"10778:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"10778:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"referralCode","nameLocation":"10809:12:1","nodeType":"VariableDeclaration","scope":319,"src":"10802:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":307,"name":"uint16","nodeType":"ElementaryTypeName","src":"10802:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"deadline","nameLocation":"10835:8:1","nodeType":"VariableDeclaration","scope":319,"src":"10827:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"permitV","nameLocation":"10855:7:1","nodeType":"VariableDeclaration","scope":319,"src":"10849:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":311,"name":"uint8","nodeType":"ElementaryTypeName","src":"10849:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"permitR","nameLocation":"10876:7:1","nodeType":"VariableDeclaration","scope":319,"src":"10868:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10868:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"permitS","nameLocation":"10897:7:1","nodeType":"VariableDeclaration","scope":319,"src":"10889:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10889:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10733:175:1"},"returnParameters":{"id":318,"nodeType":"ParameterList","parameters":[],"src":"10917:0:1"},"scope":714,"src":"10708:210:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"10922:671:1","text":" @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to The address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn"},"functionSelector":"69328dec","id":331,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"11605:8:1","nodeType":"FunctionDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"asset","nameLocation":"11622:5:1","nodeType":"VariableDeclaration","scope":331,"src":"11614:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"amount","nameLocation":"11637:6:1","nodeType":"VariableDeclaration","scope":331,"src":"11629:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"11629:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":326,"mutability":"mutable","name":"to","nameLocation":"11653:2:1","nodeType":"VariableDeclaration","scope":331,"src":"11645:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"11645:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11613:43:1"},"returnParameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":331,"src":"11675:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"11675:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11674:9:1"},"scope":714,"src":"11596:88:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"11688:1198:1","text":" @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance"},"functionSelector":"a415bcad","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"borrow","nameLocation":"12898:6:1","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"asset","nameLocation":"12918:5:1","nodeType":"VariableDeclaration","scope":345,"src":"12910:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"12910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"amount","nameLocation":"12937:6:1","nodeType":"VariableDeclaration","scope":345,"src":"12929:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"12929:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"interestRateMode","nameLocation":"12957:16:1","nodeType":"VariableDeclaration","scope":345,"src":"12949:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"12949:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"referralCode","nameLocation":"12986:12:1","nodeType":"VariableDeclaration","scope":345,"src":"12979:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":339,"name":"uint16","nodeType":"ElementaryTypeName","src":"12979:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"onBehalfOf","nameLocation":"13012:10:1","nodeType":"VariableDeclaration","scope":345,"src":"13004:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"13004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12904:122:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"13035:0:1"},"scope":714,"src":"12889:147:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"13040:873:1","text":" @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid"},"functionSelector":"573ade81","id":359,"implemented":false,"kind":"function","modifiers":[],"name":"repay","nameLocation":"13925:5:1","nodeType":"FunctionDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"asset","nameLocation":"13944:5:1","nodeType":"VariableDeclaration","scope":359,"src":"13936:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"13936:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"amount","nameLocation":"13963:6:1","nodeType":"VariableDeclaration","scope":359,"src":"13955:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"13955:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"interestRateMode","nameLocation":"13983:16:1","nodeType":"VariableDeclaration","scope":359,"src":"13975:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"13975:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"onBehalfOf","nameLocation":"14013:10:1","nodeType":"VariableDeclaration","scope":359,"src":"14005:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"14005:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13930:97:1"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":359,"src":"14046:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"14046:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14045:9:1"},"scope":714,"src":"13916:139:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"14059:1085:1","text":" @notice Repay with transfer approval of asset to be repaid done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @param deadline The deadline timestamp that the permit is valid\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig\n @return The final amount repaid"},"functionSelector":"ee3e210b","id":381,"implemented":false,"kind":"function","modifiers":[],"name":"repayWithPermit","nameLocation":"15156:15:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"asset","nameLocation":"15185:5:1","nodeType":"VariableDeclaration","scope":381,"src":"15177:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"15177:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"amount","nameLocation":"15204:6:1","nodeType":"VariableDeclaration","scope":381,"src":"15196:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"15196:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"interestRateMode","nameLocation":"15224:16:1","nodeType":"VariableDeclaration","scope":381,"src":"15216:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"15216:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"onBehalfOf","nameLocation":"15254:10:1","nodeType":"VariableDeclaration","scope":381,"src":"15246:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"15246:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"deadline","nameLocation":"15278:8:1","nodeType":"VariableDeclaration","scope":381,"src":"15270:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"15270:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"permitV","nameLocation":"15298:7:1","nodeType":"VariableDeclaration","scope":381,"src":"15292:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":371,"name":"uint8","nodeType":"ElementaryTypeName","src":"15292:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"permitR","nameLocation":"15319:7:1","nodeType":"VariableDeclaration","scope":381,"src":"15311:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15311:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"permitS","nameLocation":"15340:7:1","nodeType":"VariableDeclaration","scope":381,"src":"15332:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15332:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15171:180:1"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":381,"src":"15370:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"15370:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15369:9:1"},"scope":714,"src":"15147:232:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"15383:779:1","text":" @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n equivalent debt tokens\n - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n balance is not enough to cover the whole debt\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @return The final amount repaid"},"functionSelector":"2dad97d4","id":393,"implemented":false,"kind":"function","modifiers":[],"name":"repayWithATokens","nameLocation":"16174:16:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"asset","nameLocation":"16204:5:1","nodeType":"VariableDeclaration","scope":393,"src":"16196:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"16196:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"amount","nameLocation":"16223:6:1","nodeType":"VariableDeclaration","scope":393,"src":"16215:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"16215:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"interestRateMode","nameLocation":"16243:16:1","nodeType":"VariableDeclaration","scope":393,"src":"16235:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16190:73:1"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":393,"src":"16282:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"16282:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16281:9:1"},"scope":714,"src":"16165:126:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"16295:288:1","text":" @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n @param asset The address of the underlying asset borrowed\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"},"functionSelector":"94ba89a2","id":401,"implemented":false,"kind":"function","modifiers":[],"name":"swapBorrowRateMode","nameLocation":"16595:18:1","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"asset","nameLocation":"16622:5:1","nodeType":"VariableDeclaration","scope":401,"src":"16614:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"16614:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"interestRateMode","nameLocation":"16637:16:1","nodeType":"VariableDeclaration","scope":401,"src":"16629:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"16629:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16613:41:1"},"returnParameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"16663:0:1"},"scope":714,"src":"16586:78:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"16668:553:1","text":" @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n        much has been borrowed at a stable rate and suppliers are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced"},"functionSelector":"cd112382","id":409,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceStableBorrowRate","nameLocation":"17233:25:1","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"asset","nameLocation":"17267:5:1","nodeType":"VariableDeclaration","scope":409,"src":"17259:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"17259:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"user","nameLocation":"17282:4:1","nodeType":"VariableDeclaration","scope":409,"src":"17274:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"17274:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17258:29:1"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"17296:0:1"},"scope":714,"src":"17224:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"17301:260:1","text":" @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n @param asset The address of the underlying asset supplied\n @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise"},"functionSelector":"5a3b74b9","id":417,"implemented":false,"kind":"function","modifiers":[],"name":"setUserUseReserveAsCollateral","nameLocation":"17573:29:1","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"asset","nameLocation":"17611:5:1","nodeType":"VariableDeclaration","scope":417,"src":"17603:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"17603:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"useAsCollateral","nameLocation":"17623:15:1","nodeType":"VariableDeclaration","scope":417,"src":"17618:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":413,"name":"bool","nodeType":"ElementaryTypeName","src":"17618:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17602:37:1"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"17648:0:1"},"scope":714,"src":"17564:85:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"17653:860:1","text":" @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"},"functionSelector":"00a718a9","id":431,"implemented":false,"kind":"function","modifiers":[],"name":"liquidationCall","nameLocation":"18525:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"collateralAsset","nameLocation":"18554:15:1","nodeType":"VariableDeclaration","scope":431,"src":"18546:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"18546:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"debtAsset","nameLocation":"18583:9:1","nodeType":"VariableDeclaration","scope":431,"src":"18575:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"18575:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"user","nameLocation":"18606:4:1","nodeType":"VariableDeclaration","scope":431,"src":"18598:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"18598:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":426,"mutability":"mutable","name":"debtToCover","nameLocation":"18624:11:1","nodeType":"VariableDeclaration","scope":431,"src":"18616:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"18616:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":428,"mutability":"mutable","name":"receiveAToken","nameLocation":"18646:13:1","nodeType":"VariableDeclaration","scope":431,"src":"18641:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":427,"name":"bool","nodeType":"ElementaryTypeName","src":"18641:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18540:123:1"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"18672:0:1"},"scope":714,"src":"18516:157:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"18677:1407:1","text":" @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts of the assets being flash-borrowed\n @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"ab9c4b5d","id":452,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"20096:9:1","nodeType":"FunctionDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"receiverAddress","nameLocation":"20119:15:1","nodeType":"VariableDeclaration","scope":452,"src":"20111:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":433,"name":"address","nodeType":"ElementaryTypeName","src":"20111:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":437,"mutability":"mutable","name":"assets","nameLocation":"20159:6:1","nodeType":"VariableDeclaration","scope":452,"src":"20140:25:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"20140:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":436,"nodeType":"ArrayTypeName","src":"20140:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"amounts","nameLocation":"20190:7:1","nodeType":"VariableDeclaration","scope":452,"src":"20171:26:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":438,"name":"uint256","nodeType":"ElementaryTypeName","src":"20171:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ArrayTypeName","src":"20171:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"interestRateModes","nameLocation":"20222:17:1","nodeType":"VariableDeclaration","scope":452,"src":"20203:36:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"20203:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":442,"nodeType":"ArrayTypeName","src":"20203:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"onBehalfOf","nameLocation":"20253:10:1","nodeType":"VariableDeclaration","scope":452,"src":"20245:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"20245:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"params","nameLocation":"20284:6:1","nodeType":"VariableDeclaration","scope":452,"src":"20269:21:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":446,"name":"bytes","nodeType":"ElementaryTypeName","src":"20269:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"referralCode","nameLocation":"20303:12:1","nodeType":"VariableDeclaration","scope":452,"src":"20296:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":448,"name":"uint16","nodeType":"ElementaryTypeName","src":"20296:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"20105:214:1"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[],"src":"20328:0:1"},"scope":714,"src":"20087:242:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"20333:902:1","text":" @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n @param asset The address of the asset being flash-borrowed\n @param amount The amount of the asset being flash-borrowed\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"42b0b77c","id":466,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoanSimple","nameLocation":"21247:15:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"receiverAddress","nameLocation":"21276:15:1","nodeType":"VariableDeclaration","scope":466,"src":"21268:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"21268:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"asset","nameLocation":"21305:5:1","nodeType":"VariableDeclaration","scope":466,"src":"21297:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"21297:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"amount","nameLocation":"21324:6:1","nodeType":"VariableDeclaration","scope":466,"src":"21316:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"21316:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":461,"mutability":"mutable","name":"params","nameLocation":"21351:6:1","nodeType":"VariableDeclaration","scope":466,"src":"21336:21:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":460,"name":"bytes","nodeType":"ElementaryTypeName","src":"21336:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"referralCode","nameLocation":"21370:12:1","nodeType":"VariableDeclaration","scope":466,"src":"21363:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":462,"name":"uint16","nodeType":"ElementaryTypeName","src":"21363:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"21262:124:1"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"21395:0:1"},"scope":714,"src":"21238:158:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"21400:630:1","text":" @notice Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n @return totalDebtBase The total debt of the user in the base currency used by the price feed\n @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n @return currentLiquidationThreshold The liquidation threshold of the user\n @return ltv The loan to value of The user\n @return healthFactor The current health factor of the user"},"functionSelector":"bf92857c","id":484,"implemented":false,"kind":"function","modifiers":[],"name":"getUserAccountData","nameLocation":"22042:18:1","nodeType":"FunctionDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"user","nameLocation":"22074:4:1","nodeType":"VariableDeclaration","scope":484,"src":"22066:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"22066:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22060:22:1"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"totalCollateralBase","nameLocation":"22133:19:1","nodeType":"VariableDeclaration","scope":484,"src":"22125:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"22125:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"totalDebtBase","nameLocation":"22168:13:1","nodeType":"VariableDeclaration","scope":484,"src":"22160:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"22160:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"availableBorrowsBase","nameLocation":"22197:20:1","nodeType":"VariableDeclaration","scope":484,"src":"22189:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"22189:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"currentLiquidationThreshold","nameLocation":"22233:27:1","nodeType":"VariableDeclaration","scope":484,"src":"22225:35:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"22225:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"ltv","nameLocation":"22276:3:1","nodeType":"VariableDeclaration","scope":484,"src":"22268:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"22268:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"healthFactor","nameLocation":"22295:12:1","nodeType":"VariableDeclaration","scope":484,"src":"22287:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"22287:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22117:196:1"},"scope":714,"src":"22033:281:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":485,"nodeType":"StructuredDocumentation","src":"22318:645:1","text":" @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n interest rate strategy\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param aTokenAddress The address of the aToken that will be assigned to the reserve\n @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n @param interestRateStrategyAddress The address of the interest rate strategy contract"},"functionSelector":"7a708e92","id":498,"implemented":false,"kind":"function","modifiers":[],"name":"initReserve","nameLocation":"22975:11:1","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"asset","nameLocation":"23000:5:1","nodeType":"VariableDeclaration","scope":498,"src":"22992:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"22992:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"aTokenAddress","nameLocation":"23019:13:1","nodeType":"VariableDeclaration","scope":498,"src":"23011:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"23011:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"stableDebtAddress","nameLocation":"23046:17:1","nodeType":"VariableDeclaration","scope":498,"src":"23038:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"23038:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"variableDebtAddress","nameLocation":"23077:19:1","nodeType":"VariableDeclaration","scope":498,"src":"23069:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"23069:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"23110:27:1","nodeType":"VariableDeclaration","scope":498,"src":"23102:35:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"23102:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22986:155:1"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"23150:0:1"},"scope":714,"src":"22966:185:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"23155:163:1","text":" @notice Drop a reserve\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve"},"functionSelector":"63c9b860","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"dropReserve","nameLocation":"23330:11:1","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"asset","nameLocation":"23350:5:1","nodeType":"VariableDeclaration","scope":504,"src":"23342:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"23342:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23341:15:1"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"23365:0:1"},"scope":714,"src":"23321:45:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"23370:290:1","text":" @notice Updates the address of the interest rate strategy contract\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param rateStrategyAddress The address of the interest rate strategy contract"},"functionSelector":"1d2118f9","id":512,"implemented":false,"kind":"function","modifiers":[],"name":"setReserveInterestRateStrategyAddress","nameLocation":"23672:37:1","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"asset","nameLocation":"23723:5:1","nodeType":"VariableDeclaration","scope":512,"src":"23715:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"23715:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"rateStrategyAddress","nameLocation":"23742:19:1","nodeType":"VariableDeclaration","scope":512,"src":"23734:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"23734:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23709:56:1"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"23774:0:1"},"scope":714,"src":"23663:112:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"23779:259:1","text":" @notice Sets the configuration bitmap of the reserve as a whole\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param configuration The new configuration bitmap"},"functionSelector":"f51e435b","id":521,"implemented":false,"kind":"function","modifiers":[],"name":"setConfiguration","nameLocation":"24050:16:1","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"mutability":"mutable","name":"asset","nameLocation":"24080:5:1","nodeType":"VariableDeclaration","scope":521,"src":"24072:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"24072:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"configuration","nameLocation":"24134:13:1","nodeType":"VariableDeclaration","scope":521,"src":"24091:56:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$984_calldata_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":517,"nodeType":"UserDefinedTypeName","pathNode":{"id":516,"name":"DataTypes.ReserveConfigurationMap","nameLocations":["24091:9:1","24101:23:1"],"nodeType":"IdentifierPath","referencedDeclaration":984,"src":"24091:33:1"},"referencedDeclaration":984,"src":"24091:33:1","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$984_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"}],"src":"24066:85:1"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"24160:0:1"},"scope":714,"src":"24041:120:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":522,"nodeType":"StructuredDocumentation","src":"24165:178:1","text":" @notice Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve"},"functionSelector":"c44b11f7","id":530,"implemented":false,"kind":"function","modifiers":[],"name":"getConfiguration","nameLocation":"24355:16:1","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"asset","nameLocation":"24385:5:1","nodeType":"VariableDeclaration","scope":530,"src":"24377:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"24377:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24371:23:1"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":530,"src":"24418:40:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$984_memory_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":527,"nodeType":"UserDefinedTypeName","pathNode":{"id":526,"name":"DataTypes.ReserveConfigurationMap","nameLocations":["24418:9:1","24428:23:1"],"nodeType":"IdentifierPath","referencedDeclaration":984,"src":"24418:33:1"},"referencedDeclaration":984,"src":"24418:33:1","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$984_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"}],"src":"24417:42:1"},"scope":714,"src":"24346:114:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"24464:161:1","text":" @notice Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user"},"functionSelector":"4417a583","id":539,"implemented":false,"kind":"function","modifiers":[],"name":"getUserConfiguration","nameLocation":"24637:20:1","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"user","nameLocation":"24671:4:1","nodeType":"VariableDeclaration","scope":539,"src":"24663:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"24663:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24657:22:1"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":539,"src":"24703:37:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$988_memory_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":536,"nodeType":"UserDefinedTypeName","pathNode":{"id":535,"name":"DataTypes.UserConfigurationMap","nameLocations":["24703:9:1","24713:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":988,"src":"24703:30:1"},"referencedDeclaration":988,"src":"24703:30:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$988_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"}],"src":"24702:39:1"},"scope":714,"src":"24628:114:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"24746:181:1","text":" @notice Returns the normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"},"functionSelector":"d15e0053","id":547,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedIncome","nameLocation":"24939:26:1","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"asset","nameLocation":"24974:5:1","nodeType":"VariableDeclaration","scope":547,"src":"24966:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"24966:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24965:15:1"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":547,"src":"25004:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint256","nodeType":"ElementaryTypeName","src":"25004:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25003:9:1"},"scope":714,"src":"24930:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"25017:805:1","text":" @notice Returns the normalized variable debt per unit of asset\n @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\n \"dynamic\" variable index based on time, current stored index and virtual rate at the current\n moment (approx. a borrower would get if opening a position). This means that is always used in\n combination with variable debt supply/balances.\n If using this function externally, consider that is possible to have an increasing normalized\n variable debt that is not equivalent to how the variable debt index would be updated in storage\n (e.g. only updates with non-zero variable debt supply)\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"},"functionSelector":"386497fd","id":555,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedVariableDebt","nameLocation":"25834:32:1","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"asset","nameLocation":"25875:5:1","nodeType":"VariableDeclaration","scope":555,"src":"25867:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"25867:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25866:15:1"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"25905:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"25905:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25904:9:1"},"scope":714,"src":"25825:89:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"25918:203:1","text":" @notice Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state and configuration data of the reserve"},"functionSelector":"35ea6a75","id":564,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveData","nameLocation":"26133:14:1","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"asset","nameLocation":"26156:5:1","nodeType":"VariableDeclaration","scope":564,"src":"26148:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"26148:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26147:15:1"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":564,"src":"26186:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$981_memory_ptr","typeString":"struct DataTypes.ReserveData"},"typeName":{"id":561,"nodeType":"UserDefinedTypeName","pathNode":{"id":560,"name":"DataTypes.ReserveData","nameLocations":["26186:9:1","26196:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":981,"src":"26186:21:1"},"referencedDeclaration":981,"src":"26186:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$981_storage_ptr","typeString":"struct DataTypes.ReserveData"}},"visibility":"internal"}],"src":"26185:30:1"},"scope":714,"src":"26124:92:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"26220:537:1","text":" @notice Validates and finalizes an aToken transfer\n @dev Only callable by the overlying aToken of the `asset`\n @param asset The address of the underlying asset of the aToken\n @param from The user from which the aTokens are transferred\n @param to The user receiving the aTokens\n @param amount The amount being transferred/withdrawn\n @param balanceFromBefore The aToken balance of the `from` user before the transfer\n @param balanceToBefore The aToken balance of the `to` user before the transfer"},"functionSelector":"d5ed3933","id":580,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeTransfer","nameLocation":"26769:16:1","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"asset","nameLocation":"26799:5:1","nodeType":"VariableDeclaration","scope":580,"src":"26791:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"26791:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"from","nameLocation":"26818:4:1","nodeType":"VariableDeclaration","scope":580,"src":"26810:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"26810:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"to","nameLocation":"26836:2:1","nodeType":"VariableDeclaration","scope":580,"src":"26828:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"26828:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"amount","nameLocation":"26852:6:1","nodeType":"VariableDeclaration","scope":580,"src":"26844:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"26844:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"balanceFromBefore","nameLocation":"26872:17:1","nodeType":"VariableDeclaration","scope":580,"src":"26864:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"26864:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"balanceToBefore","nameLocation":"26903:15:1","nodeType":"VariableDeclaration","scope":580,"src":"26895:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"26895:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26785:137:1"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[],"src":"26931:0:1"},"scope":714,"src":"26760:172:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"26936:223:1","text":" @notice Returns the list of the underlying assets of all the initialized reserves\n @dev It does not include dropped reserves\n @return The addresses of the underlying assets of the initialized reserves"},"functionSelector":"d1946dbc","id":587,"implemented":false,"kind":"function","modifiers":[],"name":"getReservesList","nameLocation":"27171:15:1","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[],"src":"27186:2:1"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":587,"src":"27212:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"27212:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":584,"nodeType":"ArrayTypeName","src":"27212:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"27211:18:1"},"scope":714,"src":"27162:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"27234:285:1","text":" @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\n @param id The id of the reserve as stored in the DataTypes.ReserveData struct\n @return The address of the reserve associated with id"},"functionSelector":"52751797","id":595,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveAddressById","nameLocation":"27531:21:1","nodeType":"FunctionDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"id","nameLocation":"27560:2:1","nodeType":"VariableDeclaration","scope":595,"src":"27553:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":589,"name":"uint16","nodeType":"ElementaryTypeName","src":"27553:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"27552:11:1"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"27587:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"27587:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27586:9:1"},"scope":714,"src":"27522:74:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"27600:137:1","text":" @notice Returns the PoolAddressesProvider connected to this contract\n @return The address of the PoolAddressesProvider"},"functionSelector":"0542975c","id":602,"implemented":false,"kind":"function","modifiers":[],"name":"ADDRESSES_PROVIDER","nameLocation":"27749:18:1","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"27767:2:1"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":602,"src":"27793:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolAddressesProvider_$923","typeString":"contract IPoolAddressesProvider"},"typeName":{"id":599,"nodeType":"UserDefinedTypeName","pathNode":{"id":598,"name":"IPoolAddressesProvider","nameLocations":["27793:22:1"],"nodeType":"IdentifierPath","referencedDeclaration":923,"src":"27793:22:1"},"referencedDeclaration":923,"src":"27793:22:1","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolAddressesProvider_$923","typeString":"contract IPoolAddressesProvider"}},"visibility":"internal"}],"src":"27792:24:1"},"scope":714,"src":"27740:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"27821:147:1","text":" @notice Updates the protocol fee on the bridging\n @param bridgeProtocolFee The part of the premium sent to the protocol treasury"},"functionSelector":"3036b439","id":608,"implemented":false,"kind":"function","modifiers":[],"name":"updateBridgeProtocolFee","nameLocation":"27980:23:1","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"bridgeProtocolFee","nameLocation":"28012:17:1","nodeType":"VariableDeclaration","scope":608,"src":"28004:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"28004:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28003:27:1"},"returnParameters":{"id":607,"nodeType":"ParameterList","parameters":[],"src":"28039:0:1"},"scope":714,"src":"27971:69:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"28044:650:1","text":" @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n - A part is sent to aToken holders as extra, one time accumulated interest\n - A part is collected by the protocol treasury\n @dev The total premium is calculated on the total borrowed amount\n @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n @dev Only callable by the PoolConfigurator contract\n @param flashLoanPremiumTotal The total premium, expressed in bps\n @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps"},"functionSelector":"bcb6e522","id":616,"implemented":false,"kind":"function","modifiers":[],"name":"updateFlashloanPremiums","nameLocation":"28706:23:1","nodeType":"FunctionDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"28743:21:1","nodeType":"VariableDeclaration","scope":616,"src":"28735:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":610,"name":"uint128","nodeType":"ElementaryTypeName","src":"28735:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"28778:26:1","nodeType":"VariableDeclaration","scope":616,"src":"28770:34:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":612,"name":"uint128","nodeType":"ElementaryTypeName","src":"28770:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"28729:79:1"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[],"src":"28817:0:1"},"scope":714,"src":"28697:121:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"28822:331:1","text":" @notice Configures a new category for the eMode.\n @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n The category 0 is reserved as it's the default for volatile assets\n @param id The id of the category\n @param config The configuration of the category"},"functionSelector":"d579ea7d","id":625,"implemented":false,"kind":"function","modifiers":[],"name":"configureEModeCategory","nameLocation":"29165:22:1","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"id","nameLocation":"29194:2:1","nodeType":"VariableDeclaration","scope":625,"src":"29188:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":618,"name":"uint8","nodeType":"ElementaryTypeName","src":"29188:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"config","nameLocation":"29229:6:1","nodeType":"VariableDeclaration","scope":625,"src":"29198:37:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$999_memory_ptr","typeString":"struct DataTypes.EModeCategory"},"typeName":{"id":621,"nodeType":"UserDefinedTypeName","pathNode":{"id":620,"name":"DataTypes.EModeCategory","nameLocations":["29198:9:1","29208:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":999,"src":"29198:23:1"},"referencedDeclaration":999,"src":"29198:23:1","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$999_storage_ptr","typeString":"struct DataTypes.EModeCategory"}},"visibility":"internal"}],"src":"29187:49:1"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[],"src":"29245:0:1"},"scope":714,"src":"29156:90:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":626,"nodeType":"StructuredDocumentation","src":"29250:150:1","text":" @notice Returns the data of an eMode category\n @param id The id of the category\n @return The configuration data of the category"},"functionSelector":"6c6f6ae1","id":634,"implemented":false,"kind":"function","modifiers":[],"name":"getEModeCategoryData","nameLocation":"29412:20:1","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"id","nameLocation":"29439:2:1","nodeType":"VariableDeclaration","scope":634,"src":"29433:8:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":627,"name":"uint8","nodeType":"ElementaryTypeName","src":"29433:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"29432:10:1"},"returnParameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":634,"src":"29466:30:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$999_memory_ptr","typeString":"struct DataTypes.EModeCategory"},"typeName":{"id":631,"nodeType":"UserDefinedTypeName","pathNode":{"id":630,"name":"DataTypes.EModeCategory","nameLocations":["29466:9:1","29476:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":999,"src":"29466:23:1"},"referencedDeclaration":999,"src":"29466:23:1","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$999_storage_ptr","typeString":"struct DataTypes.EModeCategory"}},"visibility":"internal"}],"src":"29465:32:1"},"scope":714,"src":"29403:95:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"29502:111:1","text":" @notice Allows a user to use the protocol in eMode\n @param categoryId The id of the category"},"functionSelector":"28530a47","id":640,"implemented":false,"kind":"function","modifiers":[],"name":"setUserEMode","nameLocation":"29625:12:1","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"categoryId","nameLocation":"29644:10:1","nodeType":"VariableDeclaration","scope":640,"src":"29638:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":636,"name":"uint8","nodeType":"ElementaryTypeName","src":"29638:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"29637:18:1"},"returnParameters":{"id":639,"nodeType":"ParameterList","parameters":[],"src":"29664:0:1"},"scope":714,"src":"29616:49:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"29669:125:1","text":" @notice Returns the eMode the user is using\n @param user The address of the user\n @return The eMode id"},"functionSelector":"eddf1b79","id":648,"implemented":false,"kind":"function","modifiers":[],"name":"getUserEMode","nameLocation":"29806:12:1","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"user","nameLocation":"29827:4:1","nodeType":"VariableDeclaration","scope":648,"src":"29819:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"29819:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29818:14:1"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":648,"src":"29856:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"29856:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29855:9:1"},"scope":714,"src":"29797:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"29869:236:1","text":" @notice Resets the isolation mode total debt of the given asset to zero\n @dev It requires the given asset has zero debt ceiling\n @param asset The address of the underlying asset to reset the isolationModeTotalDebt"},"functionSelector":"e43e88a1","id":654,"implemented":false,"kind":"function","modifiers":[],"name":"resetIsolationModeTotalDebt","nameLocation":"30117:27:1","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"asset","nameLocation":"30153:5:1","nodeType":"VariableDeclaration","scope":654,"src":"30145:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"30145:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30144:15:1"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[],"src":"30168:0:1"},"scope":714,"src":"30108:61:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"30173:191:1","text":" @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n @return The percentage of available liquidity to borrow, expressed in bps"},"functionSelector":"e82fec2f","id":660,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_STABLE_RATE_BORROW_SIZE_PERCENT","nameLocation":"30376:35:1","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[],"src":"30411:2:1"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":660,"src":"30437:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"30437:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30436:9:1"},"scope":714,"src":"30367:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"30450:100:1","text":" @notice Returns the total fee on flash loans\n @return The total fee on flashloans"},"functionSelector":"074b2e43","id":666,"implemented":false,"kind":"function","modifiers":[],"name":"FLASHLOAN_PREMIUM_TOTAL","nameLocation":"30562:23:1","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"30585:2:1"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":666,"src":"30611:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":663,"name":"uint128","nodeType":"ElementaryTypeName","src":"30611:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"30610:9:1"},"scope":714,"src":"30553:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"30624:133:1","text":" @notice Returns the part of the bridge fees sent to protocol\n @return The bridge fee sent to the protocol treasury"},"functionSelector":"272d9072","id":672,"implemented":false,"kind":"function","modifiers":[],"name":"BRIDGE_PROTOCOL_FEE","nameLocation":"30769:19:1","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"30788:2:1"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":672,"src":"30814:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"30814:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30813:9:1"},"scope":714,"src":"30760:63:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"30827:139:1","text":" @notice Returns the part of the flashloan fees sent to protocol\n @return The flashloan fee sent to the protocol treasury"},"functionSelector":"6a99c036","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"FLASHLOAN_PREMIUM_TO_PROTOCOL","nameLocation":"30978:29:1","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"31007:2:1"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"31033:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":675,"name":"uint128","nodeType":"ElementaryTypeName","src":"31033:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"31032:9:1"},"scope":714,"src":"30969:73:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"31046:151:1","text":" @notice Returns the maximum number of reserves supported to be listed in this Pool\n @return The maximum number of reserves supported"},"functionSelector":"f8119d51","id":684,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_NUMBER_RESERVES","nameLocation":"31209:19:1","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[],"src":"31228:2:1"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":684,"src":"31254:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":681,"name":"uint16","nodeType":"ElementaryTypeName","src":"31254:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"31253:8:1"},"scope":714,"src":"31200:62:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":685,"nodeType":"StructuredDocumentation","src":"31266:196:1","text":" @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n @param assets The list of reserves for which the minting needs to be executed"},"functionSelector":"9cd19996","id":691,"implemented":false,"kind":"function","modifiers":[],"name":"mintToTreasury","nameLocation":"31474:14:1","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"assets","nameLocation":"31508:6:1","nodeType":"VariableDeclaration","scope":691,"src":"31489:25:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"31489:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":687,"nodeType":"ArrayTypeName","src":"31489:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"31488:27:1"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"31524:0:1"},"scope":714,"src":"31465:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"31529:211:1","text":" @notice Rescue and transfer tokens locked in this contract\n @param token The address of the token\n @param to The address of the recipient\n @param amount The amount of token to transfer"},"functionSelector":"cea9d26f","id":701,"implemented":false,"kind":"function","modifiers":[],"name":"rescueTokens","nameLocation":"31752:12:1","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"token","nameLocation":"31773:5:1","nodeType":"VariableDeclaration","scope":701,"src":"31765:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"31765:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"to","nameLocation":"31788:2:1","nodeType":"VariableDeclaration","scope":701,"src":"31780:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"31780:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":698,"mutability":"mutable","name":"amount","nameLocation":"31800:6:1","nodeType":"VariableDeclaration","scope":701,"src":"31792:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"31792:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31764:43:1"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[],"src":"31816:0:1"},"scope":714,"src":"31743:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"31821:768:1","text":" @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @dev Deprecated: Use the `supply` function instead\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"e8eda9df","id":713,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"32601:7:1","nodeType":"FunctionDefinition","parameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"asset","nameLocation":"32617:5:1","nodeType":"VariableDeclaration","scope":713,"src":"32609:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"32609:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"amount","nameLocation":"32632:6:1","nodeType":"VariableDeclaration","scope":713,"src":"32624:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"32624:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"onBehalfOf","nameLocation":"32648:10:1","nodeType":"VariableDeclaration","scope":713,"src":"32640:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"32640:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"referralCode","nameLocation":"32667:12:1","nodeType":"VariableDeclaration","scope":713,"src":"32660:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":709,"name":"uint16","nodeType":"ElementaryTypeName","src":"32660:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"32608:72:1"},"returnParameters":{"id":712,"nodeType":"ParameterList","parameters":[],"src":"32689:0:1"},"scope":714,"src":"32592:98:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":715,"src":"298:32394:1","usedErrors":[],"usedEvents":[95,106,119,130,148,161,171,178,185,192,199,206,224,241,256,263]}],"src":"37:32656:1"},"id":1},"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol","exportedSymbols":{"IPoolAddressesProvider":[923]},"id":924,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":716,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IPoolAddressesProvider","contractDependencies":[],"contractKind":"interface","documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"62:126:2","text":" @title IPoolAddressesProvider\n @author Aave\n @notice Defines the basic interface for a Pool Addresses Provider."},"fullyImplemented":false,"id":923,"linearizedBaseContracts":[923],"name":"IPoolAddressesProvider","nameLocation":"199:22:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"226:164:2","text":" @dev Emitted when the market identifier is updated.\n @param oldMarketId The old id of the market\n @param newMarketId The new id of the market"},"eventSelector":"e685c8cdecc6030c45030fd54778812cb84ed8e4467c38294403d68ba7860823","id":724,"name":"MarketIdSet","nameLocation":"399:11:2","nodeType":"EventDefinition","parameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"indexed":true,"mutability":"mutable","name":"oldMarketId","nameLocation":"426:11:2","nodeType":"VariableDeclaration","scope":724,"src":"411:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":719,"name":"string","nodeType":"ElementaryTypeName","src":"411:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":722,"indexed":true,"mutability":"mutable","name":"newMarketId","nameLocation":"454:11:2","nodeType":"VariableDeclaration","scope":724,"src":"439:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":721,"name":"string","nodeType":"ElementaryTypeName","src":"439:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"410:56:2"},"src":"393:74:2"},{"anonymous":false,"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"471:155:2","text":" @dev Emitted when the pool is updated.\n @param oldAddress The old address of the Pool\n @param newAddress The new address of the Pool"},"eventSelector":"90affc163f1a2dfedcd36aa02ed992eeeba8100a4014f0b4cdc20ea265a66627","id":731,"name":"PoolUpdated","nameLocation":"635:11:2","nodeType":"EventDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"663:10:2","nodeType":"VariableDeclaration","scope":731,"src":"647:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"691:10:2","nodeType":"VariableDeclaration","scope":731,"src":"675:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"646:56:2"},"src":"629:74:2"},{"anonymous":false,"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"707:192:2","text":" @dev Emitted when the pool configurator is updated.\n @param oldAddress The old address of the PoolConfigurator\n @param newAddress The new address of the PoolConfigurator"},"eventSelector":"8932892569eba59c8382a089d9b732d1f49272878775235761a2a6b0309cd465","id":738,"name":"PoolConfiguratorUpdated","nameLocation":"908:23:2","nodeType":"EventDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"948:10:2","nodeType":"VariableDeclaration","scope":738,"src":"932:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":736,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"976:10:2","nodeType":"VariableDeclaration","scope":738,"src":"960:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"960:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:56:2"},"src":"902:86:2"},{"anonymous":false,"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"992:177:2","text":" @dev Emitted when the price oracle is updated.\n @param oldAddress The old address of the PriceOracle\n @param newAddress The new address of the PriceOracle"},"eventSelector":"56b5f80d8cac1479698aa7d01605fd6111e90b15fc4d2b377417f46034876cbd","id":745,"name":"PriceOracleUpdated","nameLocation":"1178:18:2","nodeType":"EventDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1213:10:2","nodeType":"VariableDeclaration","scope":745,"src":"1197:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"1197:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":743,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1241:10:2","nodeType":"VariableDeclaration","scope":745,"src":"1225:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"1225:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1196:56:2"},"src":"1172:81:2"},{"anonymous":false,"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"1257:174:2","text":" @dev Emitted when the ACL manager is updated.\n @param oldAddress The old address of the ACLManager\n @param newAddress The new address of the ACLManager"},"eventSelector":"b30efa04327bb8a537d61cc1e5c48095345ad18ef7cc04e6bacf7dfb6caaf507","id":752,"name":"ACLManagerUpdated","nameLocation":"1440:17:2","nodeType":"EventDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1474:10:2","nodeType":"VariableDeclaration","scope":752,"src":"1458:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"1458:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":750,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1502:10:2","nodeType":"VariableDeclaration","scope":752,"src":"1486:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1457:56:2"},"src":"1434:80:2"},{"anonymous":false,"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"1518:168:2","text":" @dev Emitted when the ACL admin is updated.\n @param oldAddress The old address of the ACLAdmin\n @param newAddress The new address of the ACLAdmin"},"eventSelector":"e9cf53972264dc95304fd424458745019ddfca0e37ae8f703d74772c41ad115b","id":759,"name":"ACLAdminUpdated","nameLocation":"1695:15:2","nodeType":"EventDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1727:10:2","nodeType":"VariableDeclaration","scope":759,"src":"1711:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1755:10:2","nodeType":"VariableDeclaration","scope":759,"src":"1739:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"1739:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1710:56:2"},"src":"1689:78:2"},{"anonymous":false,"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"1771:202:2","text":" @dev Emitted when the price oracle sentinel is updated.\n @param oldAddress The old address of the PriceOracleSentinel\n @param newAddress The new address of the PriceOracleSentinel"},"eventSelector":"5326514eeca90494a14bedabcff812a0e683029ee85d1e23824d44fd14cd6ae7","id":766,"name":"PriceOracleSentinelUpdated","nameLocation":"1982:26:2","nodeType":"EventDefinition","parameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"2025:10:2","nodeType":"VariableDeclaration","scope":766,"src":"2009:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"2053:10:2","nodeType":"VariableDeclaration","scope":766,"src":"2037:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:56:2"},"src":"1976:89:2"},{"anonymous":false,"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"2069:193:2","text":" @dev Emitted when the pool data provider is updated.\n @param oldAddress The old address of the PoolDataProvider\n @param newAddress The new address of the PoolDataProvider"},"eventSelector":"c853974cfbf81487a14a23565917bee63f527853bcb5fa54f2ae1cdf8a38356d","id":773,"name":"PoolDataProviderUpdated","nameLocation":"2271:23:2","nodeType":"EventDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"2311:10:2","nodeType":"VariableDeclaration","scope":773,"src":"2295:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"2295:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"2339:10:2","nodeType":"VariableDeclaration","scope":773,"src":"2323:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2294:56:2"},"src":"2265:86:2"},{"anonymous":false,"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"2355:243:2","text":" @dev Emitted when a new proxy is created.\n @param id The identifier of the proxy\n @param proxyAddress The address of the created proxy contract\n @param implementationAddress The address of the implementation contract"},"eventSelector":"4a465a9bd819d9662563c1e11ae958f8109e437e7f4bf1c6ef0b9a7b3f35d478","id":782,"name":"ProxyCreated","nameLocation":"2607:12:2","nodeType":"EventDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"2641:2:2","nodeType":"VariableDeclaration","scope":782,"src":"2625:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2625:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":778,"indexed":true,"mutability":"mutable","name":"proxyAddress","nameLocation":"2665:12:2","nodeType":"VariableDeclaration","scope":782,"src":"2649:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"indexed":true,"mutability":"mutable","name":"implementationAddress","nameLocation":"2699:21:2","nodeType":"VariableDeclaration","scope":782,"src":"2683:37:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"2683:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2619:105:2"},"src":"2601:124:2"},{"anonymous":false,"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"2729:238:2","text":" @dev Emitted when a new non-proxied contract address is registered.\n @param id The identifier of the contract\n @param oldAddress The address of the old contract\n @param newAddress The address of the new contract"},"eventSelector":"9ef0e8c8e52743bb38b83b17d9429141d494b8041ca6d616a6c77cebae9cd8b7","id":791,"name":"AddressSet","nameLocation":"2976:10:2","nodeType":"EventDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"3003:2:2","nodeType":"VariableDeclaration","scope":791,"src":"2987:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2987:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":787,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"3023:10:2","nodeType":"VariableDeclaration","scope":791,"src":"3007:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"3007:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"3051:10:2","nodeType":"VariableDeclaration","scope":791,"src":"3035:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"3035:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2986:76:2"},"src":"2970:93:2"},{"anonymous":false,"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"3067:367:2","text":" @dev Emitted when the implementation of the proxy registered with id is updated\n @param id The identifier of the contract\n @param proxyAddress The address of the proxy contract\n @param oldImplementationAddress The address of the old implementation contract\n @param newImplementationAddress The address of the new implementation contract"},"eventSelector":"3bbd45b5429b385e3fb37ad5cd1cd1435a3c8ec32196c7937597365a3fd3e99c","id":802,"name":"AddressSetAsProxy","nameLocation":"3443:17:2","nodeType":"EventDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"3482:2:2","nodeType":"VariableDeclaration","scope":802,"src":"3466:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3466:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":796,"indexed":true,"mutability":"mutable","name":"proxyAddress","nameLocation":"3506:12:2","nodeType":"VariableDeclaration","scope":802,"src":"3490:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"3490:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":798,"indexed":false,"mutability":"mutable","name":"oldImplementationAddress","nameLocation":"3532:24:2","nodeType":"VariableDeclaration","scope":802,"src":"3524:32:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"3524:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":800,"indexed":true,"mutability":"mutable","name":"newImplementationAddress","nameLocation":"3578:24:2","nodeType":"VariableDeclaration","scope":802,"src":"3562:40:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"3562:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3460:146:2"},"src":"3437:170:2"},{"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"3611:117:2","text":" @notice Returns the id of the Aave market to which this contract points to.\n @return The market id"},"functionSelector":"568ef470","id":808,"implemented":false,"kind":"function","modifiers":[],"name":"getMarketId","nameLocation":"3740:11:2","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"3751:2:2"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"3777:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":805,"name":"string","nodeType":"ElementaryTypeName","src":"3777:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3776:15:2"},"scope":923,"src":"3731:61:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"3796:252:2","text":" @notice Associates an id with a specific PoolAddressesProvider.\n @dev This can be used to create an onchain registry of PoolAddressesProviders to\n identify and validate multiple Aave markets.\n @param newMarketId The market id"},"functionSelector":"f67b1847","id":814,"implemented":false,"kind":"function","modifiers":[],"name":"setMarketId","nameLocation":"4060:11:2","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"newMarketId","nameLocation":"4088:11:2","nodeType":"VariableDeclaration","scope":814,"src":"4072:27:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":810,"name":"string","nodeType":"ElementaryTypeName","src":"4072:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4071:29:2"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[],"src":"4109:0:2"},"scope":923,"src":"4051:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"4114:306:2","text":" @notice Returns an address by its identifier.\n @dev The returned address might be an EOA or a contract, potentially proxied\n @dev It returns ZERO if there is no registered address with the given id\n @param id The id\n @return The address of the registered for the specified id"},"functionSelector":"21f8a721","id":822,"implemented":false,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"4432:10:2","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"id","nameLocation":"4451:2:2","nodeType":"VariableDeclaration","scope":822,"src":"4443:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4443:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4442:12:2"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":822,"src":"4478:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"4478:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4477:9:2"},"scope":923,"src":"4423:64:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"4491:485:2","text":" @notice General function to update the implementation of a proxy registered with\n certain `id`. If there is no proxy registered, it will instantiate one and\n set as implementation the `newImplementationAddress`.\n @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n setter function, in order to avoid unexpected consequences\n @param id The id\n @param newImplementationAddress The address of the new implementation"},"functionSelector":"5dcc528c","id":830,"implemented":false,"kind":"function","modifiers":[],"name":"setAddressAsProxy","nameLocation":"4988:17:2","nodeType":"FunctionDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"id","nameLocation":"5014:2:2","nodeType":"VariableDeclaration","scope":830,"src":"5006:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5006:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"newImplementationAddress","nameLocation":"5026:24:2","nodeType":"VariableDeclaration","scope":830,"src":"5018:32:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"5018:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5005:46:2"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[],"src":"5060:0:2"},"scope":923,"src":"4979:82:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"5065:244:2","text":" @notice Sets an address for an id replacing the address saved in the addresses map.\n @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n @param id The id\n @param newAddress The address to set"},"functionSelector":"ca446dd9","id":838,"implemented":false,"kind":"function","modifiers":[],"name":"setAddress","nameLocation":"5321:10:2","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"id","nameLocation":"5340:2:2","nodeType":"VariableDeclaration","scope":838,"src":"5332:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5332:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"newAddress","nameLocation":"5352:10:2","nodeType":"VariableDeclaration","scope":838,"src":"5344:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5331:32:2"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"5372:0:2"},"scope":923,"src":"5312:61:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"5377:97:2","text":" @notice Returns the address of the Pool proxy.\n @return The Pool proxy address"},"functionSelector":"026b1d5f","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"5486:7:2","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[],"src":"5493:2:2"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"5519:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"5519:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5518:9:2"},"scope":923,"src":"5477:51:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"5532:224:2","text":" @notice Updates the implementation of the Pool, or creates a proxy\n setting the new `pool` implementation when the function is called for the first time.\n @param newPoolImpl The new Pool implementation"},"functionSelector":"a1564406","id":850,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolImpl","nameLocation":"5768:11:2","nodeType":"FunctionDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"newPoolImpl","nameLocation":"5788:11:2","nodeType":"VariableDeclaration","scope":850,"src":"5780:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"5780:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5779:21:2"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"5809:0:2"},"scope":923,"src":"5759:51:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"5814:121:2","text":" @notice Returns the address of the PoolConfigurator proxy.\n @return The PoolConfigurator proxy address"},"functionSelector":"631adfca","id":856,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolConfigurator","nameLocation":"5947:19:2","nodeType":"FunctionDefinition","parameters":{"id":852,"nodeType":"ParameterList","parameters":[],"src":"5966:2:2"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":856,"src":"5992:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"5992:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5991:9:2"},"scope":923,"src":"5938:63:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"6005:272:2","text":" @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n setting the new `PoolConfigurator` implementation when the function is called for the first time.\n @param newPoolConfiguratorImpl The new PoolConfigurator implementation"},"functionSelector":"e4ca28b7","id":862,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolConfiguratorImpl","nameLocation":"6289:23:2","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"newPoolConfiguratorImpl","nameLocation":"6321:23:2","nodeType":"VariableDeclaration","scope":862,"src":"6313:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"6313:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6312:33:2"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"6354:0:2"},"scope":923,"src":"6280:75:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"6359:107:2","text":" @notice Returns the address of the price oracle.\n @return The address of the PriceOracle"},"functionSelector":"fca513a8","id":868,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracle","nameLocation":"6478:14:2","nodeType":"FunctionDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[],"src":"6492:2:2"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":868,"src":"6518:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"6518:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6517:9:2"},"scope":923,"src":"6469:58:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"6531:125:2","text":" @notice Updates the address of the price oracle.\n @param newPriceOracle The address of the new PriceOracle"},"functionSelector":"530e784f","id":874,"implemented":false,"kind":"function","modifiers":[],"name":"setPriceOracle","nameLocation":"6668:14:2","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"newPriceOracle","nameLocation":"6691:14:2","nodeType":"VariableDeclaration","scope":874,"src":"6683:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:24:2"},"returnParameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"6715:0:2"},"scope":923,"src":"6659:57:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"6720:105:2","text":" @notice Returns the address of the ACL manager.\n @return The address of the ACLManager"},"functionSelector":"707cd716","id":880,"implemented":false,"kind":"function","modifiers":[],"name":"getACLManager","nameLocation":"6837:13:2","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"6850:2:2"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":880,"src":"6876:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"6876:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6875:9:2"},"scope":923,"src":"6828:57:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"6889:122:2","text":" @notice Updates the address of the ACL manager.\n @param newAclManager The address of the new ACLManager"},"functionSelector":"ed301ca9","id":886,"implemented":false,"kind":"function","modifiers":[],"name":"setACLManager","nameLocation":"7023:13:2","nodeType":"FunctionDefinition","parameters":{"id":884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"newAclManager","nameLocation":"7045:13:2","nodeType":"VariableDeclaration","scope":886,"src":"7037:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"7037:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7036:23:2"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"7068:0:2"},"scope":923,"src":"7014:55:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"7073:102:2","text":" @notice Returns the address of the ACL admin.\n @return The address of the ACL admin"},"functionSelector":"0e67178c","id":892,"implemented":false,"kind":"function","modifiers":[],"name":"getACLAdmin","nameLocation":"7187:11:2","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"7198:2:2"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":892,"src":"7224:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"7224:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7223:9:2"},"scope":923,"src":"7178:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"7237:117:2","text":" @notice Updates the address of the ACL admin.\n @param newAclAdmin The address of the new ACL admin"},"functionSelector":"76d84ffc","id":898,"implemented":false,"kind":"function","modifiers":[],"name":"setACLAdmin","nameLocation":"7366:11:2","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"newAclAdmin","nameLocation":"7386:11:2","nodeType":"VariableDeclaration","scope":898,"src":"7378:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"7378:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7377:21:2"},"returnParameters":{"id":897,"nodeType":"ParameterList","parameters":[],"src":"7407:0:2"},"scope":923,"src":"7357:51:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"7412:124:2","text":" @notice Returns the address of the price oracle sentinel.\n @return The address of the PriceOracleSentinel"},"functionSelector":"5eb88d3d","id":904,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracleSentinel","nameLocation":"7548:22:2","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"7570:2:2"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":904,"src":"7596:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"7596:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7595:9:2"},"scope":923,"src":"7539:66:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"7609:150:2","text":" @notice Updates the address of the price oracle sentinel.\n @param newPriceOracleSentinel The address of the new PriceOracleSentinel"},"functionSelector":"74944cec","id":910,"implemented":false,"kind":"function","modifiers":[],"name":"setPriceOracleSentinel","nameLocation":"7771:22:2","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"newPriceOracleSentinel","nameLocation":"7802:22:2","nodeType":"VariableDeclaration","scope":910,"src":"7794:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"7794:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7793:32:2"},"returnParameters":{"id":909,"nodeType":"ParameterList","parameters":[],"src":"7834:0:2"},"scope":923,"src":"7762:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"7839:109:2","text":" @notice Returns the address of the data provider.\n @return The address of the DataProvider"},"functionSelector":"e860accb","id":916,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolDataProvider","nameLocation":"7960:19:2","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"7979:2:2"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":916,"src":"8005:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"8005:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8004:9:2"},"scope":923,"src":"7951:63:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"8018:128:2","text":" @notice Updates the address of the data provider.\n @param newDataProvider The address of the new DataProvider"},"functionSelector":"e44e9ed1","id":922,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolDataProvider","nameLocation":"8158:19:2","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"newDataProvider","nameLocation":"8186:15:2","nodeType":"VariableDeclaration","scope":922,"src":"8178:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"8178:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8177:25:2"},"returnParameters":{"id":921,"nodeType":"ParameterList","parameters":[],"src":"8211:0:2"},"scope":923,"src":"8149:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":924,"src":"189:8025:2","usedErrors":[],"usedEvents":[724,731,738,745,752,759,766,773,782,791,802]}],"src":"37:8178:2"},"id":2},"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol","exportedSymbols":{"IPriceOracleGetter":[947]},"id":948,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":925,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IPriceOracleGetter","contractDependencies":[],"contractKind":"interface","documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"62:100:3","text":" @title IPriceOracleGetter\n @author Aave\n @notice Interface for the Aave price oracle."},"fullyImplemented":false,"id":947,"linearizedBaseContracts":[947],"name":"IPriceOracleGetter","nameLocation":"173:18:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"196:164:3","text":" @notice Returns the base currency address\n @dev Address 0x0 is reserved for USD as base currency.\n @return Returns the base currency address."},"functionSelector":"e19f4700","id":932,"implemented":false,"kind":"function","modifiers":[],"name":"BASE_CURRENCY","nameLocation":"372:13:3","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"385:2:3"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"411:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"411:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"410:9:3"},"scope":947,"src":"363:57:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"424:138:3","text":" @notice Returns the base currency unit\n @dev 1 ether for ETH, 1e8 for USD.\n @return Returns the base currency unit."},"functionSelector":"8c89b64f","id":938,"implemented":false,"kind":"function","modifiers":[],"name":"BASE_CURRENCY_UNIT","nameLocation":"574:18:3","nodeType":"FunctionDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[],"src":"592:2:3"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":938,"src":"618:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"618:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"617:9:3"},"scope":947,"src":"565:62:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":939,"nodeType":"StructuredDocumentation","src":"631:146:3","text":" @notice Returns the asset price in the base currency\n @param asset The address of the asset\n @return The price of the asset"},"functionSelector":"b3596f07","id":946,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetPrice","nameLocation":"789:13:3","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"asset","nameLocation":"811:5:3","nodeType":"VariableDeclaration","scope":946,"src":"803:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"802:15:3"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"841:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"841:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"840:9:3"},"scope":947,"src":"780:70:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":948,"src":"163:689:3","usedErrors":[],"usedEvents":[]}],"src":"37:816:3"},"id":3},"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","exportedSymbols":{"DataTypes":[1299]},"id":1300,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":949,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"DataTypes","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1299,"linearizedBaseContracts":[1299],"name":"DataTypes","nameLocation":"70:9:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DataTypes.ReserveData","id":981,"members":[{"constant":false,"id":952,"mutability":"mutable","name":"configuration","nameLocation":"172:13:4","nodeType":"VariableDeclaration","scope":981,"src":"148:37:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$984_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":951,"nodeType":"UserDefinedTypeName","pathNode":{"id":950,"name":"ReserveConfigurationMap","nameLocations":["148:23:4"],"nodeType":"IdentifierPath","referencedDeclaration":984,"src":"148:23:4"},"referencedDeclaration":984,"src":"148:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$984_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"liquidityIndex","nameLocation":"243:14:4","nodeType":"VariableDeclaration","scope":981,"src":"235:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":953,"name":"uint128","nodeType":"ElementaryTypeName","src":"235:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"currentLiquidityRate","nameLocation":"319:20:4","nodeType":"VariableDeclaration","scope":981,"src":"311:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":955,"name":"uint128","nodeType":"ElementaryTypeName","src":"311:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"variableBorrowIndex","nameLocation":"399:19:4","nodeType":"VariableDeclaration","scope":981,"src":"391:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":957,"name":"uint128","nodeType":"ElementaryTypeName","src":"391:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"currentVariableBorrowRate","nameLocation":"489:25:4","nodeType":"VariableDeclaration","scope":981,"src":"481:33:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":959,"name":"uint128","nodeType":"ElementaryTypeName","src":"481:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"currentStableBorrowRate","nameLocation":"583:23:4","nodeType":"VariableDeclaration","scope":981,"src":"575:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":961,"name":"uint128","nodeType":"ElementaryTypeName","src":"575:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"lastUpdateTimestamp","nameLocation":"650:19:4","nodeType":"VariableDeclaration","scope":981,"src":"643:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":963,"name":"uint40","nodeType":"ElementaryTypeName","src":"643:6:4","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"id","nameLocation":"770:2:4","nodeType":"VariableDeclaration","scope":981,"src":"763:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":965,"name":"uint16","nodeType":"ElementaryTypeName","src":"763:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"aTokenAddress","nameLocation":"807:13:4","nodeType":"VariableDeclaration","scope":981,"src":"799:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"stableDebtTokenAddress","nameLocation":"864:22:4","nodeType":"VariableDeclaration","scope":981,"src":"856:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"856:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"variableDebtTokenAddress","nameLocation":"932:24:4","nodeType":"VariableDeclaration","scope":981,"src":"924:32:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"924:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"1014:27:4","nodeType":"VariableDeclaration","scope":981,"src":"1006:35:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"accruedToTreasury","nameLocation":"1098:17:4","nodeType":"VariableDeclaration","scope":981,"src":"1090:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":975,"name":"uint128","nodeType":"ElementaryTypeName","src":"1090:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"unbacked","nameLocation":"1204:8:4","nodeType":"VariableDeclaration","scope":981,"src":"1196:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":977,"name":"uint128","nodeType":"ElementaryTypeName","src":"1196:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"isolationModeTotalDebt","nameLocation":"1299:22:4","nodeType":"VariableDeclaration","scope":981,"src":"1291:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":979,"name":"uint128","nodeType":"ElementaryTypeName","src":"1291:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"ReserveData","nameLocation":"91:11:4","nodeType":"StructDefinition","scope":1299,"src":"84:1242:4","visibility":"public"},{"canonicalName":"DataTypes.ReserveConfigurationMap","id":984,"members":[{"constant":false,"id":983,"mutability":"mutable","name":"data","nameLocation":"2212:4:4","nodeType":"VariableDeclaration","scope":984,"src":"2204:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReserveConfigurationMap","nameLocation":"1337:23:4","nodeType":"StructDefinition","scope":1299,"src":"1330:891:4","visibility":"public"},{"canonicalName":"DataTypes.UserConfigurationMap","id":988,"members":[{"constant":false,"id":987,"mutability":"mutable","name":"data","nameLocation":"2530:4:4","nodeType":"VariableDeclaration","scope":988,"src":"2522:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"2522:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserConfigurationMap","nameLocation":"2232:20:4","nodeType":"StructDefinition","scope":1299,"src":"2225:314:4","visibility":"public"},{"canonicalName":"DataTypes.EModeCategory","id":999,"members":[{"constant":false,"id":990,"mutability":"mutable","name":"ltv","nameLocation":"2647:3:4","nodeType":"VariableDeclaration","scope":999,"src":"2640:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":989,"name":"uint16","nodeType":"ElementaryTypeName","src":"2640:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"liquidationThreshold","nameLocation":"2663:20:4","nodeType":"VariableDeclaration","scope":999,"src":"2656:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":991,"name":"uint16","nodeType":"ElementaryTypeName","src":"2656:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"liquidationBonus","nameLocation":"2696:16:4","nodeType":"VariableDeclaration","scope":999,"src":"2689:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":993,"name":"uint16","nodeType":"ElementaryTypeName","src":"2689:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"priceSource","nameLocation":"2837:11:4","nodeType":"VariableDeclaration","scope":999,"src":"2829:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"2829:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"label","nameLocation":"2861:5:4","nodeType":"VariableDeclaration","scope":999,"src":"2854:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":997,"name":"string","nodeType":"ElementaryTypeName","src":"2854:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"EModeCategory","nameLocation":"2550:13:4","nodeType":"StructDefinition","scope":1299,"src":"2543:328:4","visibility":"public"},{"canonicalName":"DataTypes.InterestRateMode","id":1003,"members":[{"id":1000,"name":"NONE","nameLocation":"2898:4:4","nodeType":"EnumValue","src":"2898:4:4"},{"id":1001,"name":"STABLE","nameLocation":"2904:6:4","nodeType":"EnumValue","src":"2904:6:4"},{"id":1002,"name":"VARIABLE","nameLocation":"2912:8:4","nodeType":"EnumValue","src":"2912:8:4"}],"name":"InterestRateMode","nameLocation":"2880:16:4","nodeType":"EnumDefinition","src":"2875:46:4"},{"canonicalName":"DataTypes.ReserveCache","id":1045,"members":[{"constant":false,"id":1005,"mutability":"mutable","name":"currScaledVariableDebt","nameLocation":"2959:22:4","nodeType":"VariableDeclaration","scope":1045,"src":"2951:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"2951:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"nextScaledVariableDebt","nameLocation":"2995:22:4","nodeType":"VariableDeclaration","scope":1045,"src":"2987:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1006,"name":"uint256","nodeType":"ElementaryTypeName","src":"2987:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"currPrincipalStableDebt","nameLocation":"3031:23:4","nodeType":"VariableDeclaration","scope":1045,"src":"3023:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"3023:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"currAvgStableBorrowRate","nameLocation":"3068:23:4","nodeType":"VariableDeclaration","scope":1045,"src":"3060:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"3060:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"currTotalStableDebt","nameLocation":"3105:19:4","nodeType":"VariableDeclaration","scope":1045,"src":"3097:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"3097:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"nextAvgStableBorrowRate","nameLocation":"3138:23:4","nodeType":"VariableDeclaration","scope":1045,"src":"3130:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"3130:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"nextTotalStableDebt","nameLocation":"3175:19:4","nodeType":"VariableDeclaration","scope":1045,"src":"3167:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"3167:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"currLiquidityIndex","nameLocation":"3208:18:4","nodeType":"VariableDeclaration","scope":1045,"src":"3200:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"3200:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"nextLiquidityIndex","nameLocation":"3240:18:4","nodeType":"VariableDeclaration","scope":1045,"src":"3232:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"currVariableBorrowIndex","nameLocation":"3272:23:4","nodeType":"VariableDeclaration","scope":1045,"src":"3264:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"3264:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"nextVariableBorrowIndex","nameLocation":"3309:23:4","nodeType":"VariableDeclaration","scope":1045,"src":"3301:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"3301:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"currLiquidityRate","nameLocation":"3346:17:4","nodeType":"VariableDeclaration","scope":1045,"src":"3338:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"3338:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"currVariableBorrowRate","nameLocation":"3377:22:4","nodeType":"VariableDeclaration","scope":1045,"src":"3369:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"3369:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1031,"mutability":"mutable","name":"reserveFactor","nameLocation":"3413:13:4","nodeType":"VariableDeclaration","scope":1045,"src":"3405:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"3405:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"reserveConfiguration","nameLocation":"3456:20:4","nodeType":"VariableDeclaration","scope":1045,"src":"3432:44:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$984_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":1033,"nodeType":"UserDefinedTypeName","pathNode":{"id":1032,"name":"ReserveConfigurationMap","nameLocations":["3432:23:4"],"nodeType":"IdentifierPath","referencedDeclaration":984,"src":"3432:23:4"},"referencedDeclaration":984,"src":"3432:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$984_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"aTokenAddress","nameLocation":"3490:13:4","nodeType":"VariableDeclaration","scope":1045,"src":"3482:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"3482:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"stableDebtTokenAddress","nameLocation":"3517:22:4","nodeType":"VariableDeclaration","scope":1045,"src":"3509:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"variableDebtTokenAddress","nameLocation":"3553:24:4","nodeType":"VariableDeclaration","scope":1045,"src":"3545:32:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"3545:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"reserveLastUpdateTimestamp","nameLocation":"3590:26:4","nodeType":"VariableDeclaration","scope":1045,"src":"3583:33:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1041,"name":"uint40","nodeType":"ElementaryTypeName","src":"3583:6:4","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"stableDebtLastUpdateTimestamp","nameLocation":"3629:29:4","nodeType":"VariableDeclaration","scope":1045,"src":"3622:36:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1043,"name":"uint40","nodeType":"ElementaryTypeName","src":"3622:6:4","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"name":"ReserveCache","nameLocation":"2932:12:4","nodeType":"StructDefinition","scope":1299,"src":"2925:738:4","visibility":"public"},{"canonicalName":"DataTypes.ExecuteLiquidationCallParams","id":1064,"members":[{"constant":false,"id":1047,"mutability":"mutable","name":"reservesCount","nameLocation":"3717:13:4","nodeType":"VariableDeclaration","scope":1064,"src":"3709:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"debtToCover","nameLocation":"3744:11:4","nodeType":"VariableDeclaration","scope":1064,"src":"3736:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"3736:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"collateralAsset","nameLocation":"3769:15:4","nodeType":"VariableDeclaration","scope":1064,"src":"3761:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"3761:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"debtAsset","nameLocation":"3798:9:4","nodeType":"VariableDeclaration","scope":1064,"src":"3790:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"3790:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"user","nameLocation":"3821:4:4","nodeType":"VariableDeclaration","scope":1064,"src":"3813:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"3813:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"receiveAToken","nameLocation":"3836:13:4","nodeType":"VariableDeclaration","scope":1064,"src":"3831:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1056,"name":"bool","nodeType":"ElementaryTypeName","src":"3831:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"priceOracle","nameLocation":"3863:11:4","nodeType":"VariableDeclaration","scope":1064,"src":"3855:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"3855:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"userEModeCategory","nameLocation":"3886:17:4","nodeType":"VariableDeclaration","scope":1064,"src":"3880:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1060,"name":"uint8","nodeType":"ElementaryTypeName","src":"3880:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"3917:19:4","nodeType":"VariableDeclaration","scope":1064,"src":"3909:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"3909:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ExecuteLiquidationCallParams","nameLocation":"3674:28:4","nodeType":"StructDefinition","scope":1299,"src":"3667:274:4","visibility":"public"},{"canonicalName":"DataTypes.ExecuteSupplyParams","id":1073,"members":[{"constant":false,"id":1066,"mutability":"mutable","name":"asset","nameLocation":"3986:5:4","nodeType":"VariableDeclaration","scope":1073,"src":"3978:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"3978:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"amount","nameLocation":"4005:6:4","nodeType":"VariableDeclaration","scope":1073,"src":"3997:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4025:10:4","nodeType":"VariableDeclaration","scope":1073,"src":"4017:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"4017:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"referralCode","nameLocation":"4048:12:4","nodeType":"VariableDeclaration","scope":1073,"src":"4041:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1071,"name":"uint16","nodeType":"ElementaryTypeName","src":"4041:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"ExecuteSupplyParams","nameLocation":"3952:19:4","nodeType":"StructDefinition","scope":1299,"src":"3945:120:4","visibility":"public"},{"canonicalName":"DataTypes.ExecuteBorrowParams","id":1099,"members":[{"constant":false,"id":1075,"mutability":"mutable","name":"asset","nameLocation":"4110:5:4","nodeType":"VariableDeclaration","scope":1099,"src":"4102:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"4102:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"user","nameLocation":"4129:4:4","nodeType":"VariableDeclaration","scope":1099,"src":"4121:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4147:10:4","nodeType":"VariableDeclaration","scope":1099,"src":"4139:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"amount","nameLocation":"4171:6:4","nodeType":"VariableDeclaration","scope":1099,"src":"4163:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"4163:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"interestRateMode","nameLocation":"4200:16:4","nodeType":"VariableDeclaration","scope":1099,"src":"4183:33:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":1083,"nodeType":"UserDefinedTypeName","pathNode":{"id":1082,"name":"InterestRateMode","nameLocations":["4183:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":1003,"src":"4183:16:4"},"referencedDeclaration":1003,"src":"4183:16:4","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"referralCode","nameLocation":"4229:12:4","nodeType":"VariableDeclaration","scope":1099,"src":"4222:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1085,"name":"uint16","nodeType":"ElementaryTypeName","src":"4222:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"releaseUnderlying","nameLocation":"4252:17:4","nodeType":"VariableDeclaration","scope":1099,"src":"4247:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1087,"name":"bool","nodeType":"ElementaryTypeName","src":"4247:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"maxStableRateBorrowSizePercent","nameLocation":"4283:30:4","nodeType":"VariableDeclaration","scope":1099,"src":"4275:38:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"4275:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"reservesCount","nameLocation":"4327:13:4","nodeType":"VariableDeclaration","scope":1099,"src":"4319:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"4319:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"oracle","nameLocation":"4354:6:4","nodeType":"VariableDeclaration","scope":1099,"src":"4346:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"4346:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"userEModeCategory","nameLocation":"4372:17:4","nodeType":"VariableDeclaration","scope":1099,"src":"4366:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1095,"name":"uint8","nodeType":"ElementaryTypeName","src":"4366:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"4403:19:4","nodeType":"VariableDeclaration","scope":1099,"src":"4395:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"4395:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ExecuteBorrowParams","nameLocation":"4076:19:4","nodeType":"StructDefinition","scope":1299,"src":"4069:358:4","visibility":"public"},{"canonicalName":"DataTypes.ExecuteRepayParams","id":1111,"members":[{"constant":false,"id":1101,"mutability":"mutable","name":"asset","nameLocation":"4471:5:4","nodeType":"VariableDeclaration","scope":1111,"src":"4463:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"4463:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"amount","nameLocation":"4490:6:4","nodeType":"VariableDeclaration","scope":1111,"src":"4482:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"4482:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"interestRateMode","nameLocation":"4519:16:4","nodeType":"VariableDeclaration","scope":1111,"src":"4502:33:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":1105,"nodeType":"UserDefinedTypeName","pathNode":{"id":1104,"name":"InterestRateMode","nameLocations":["4502:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":1003,"src":"4502:16:4"},"referencedDeclaration":1003,"src":"4502:16:4","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4549:10:4","nodeType":"VariableDeclaration","scope":1111,"src":"4541:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"4541:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"useATokens","nameLocation":"4570:10:4","nodeType":"VariableDeclaration","scope":1111,"src":"4565:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1109,"name":"bool","nodeType":"ElementaryTypeName","src":"4565:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExecuteRepayParams","nameLocation":"4438:18:4","nodeType":"StructDefinition","scope":1299,"src":"4431:154:4","visibility":"public"},{"canonicalName":"DataTypes.ExecuteWithdrawParams","id":1124,"members":[{"constant":false,"id":1113,"mutability":"mutable","name":"asset","nameLocation":"4632:5:4","nodeType":"VariableDeclaration","scope":1124,"src":"4624:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"4624:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"amount","nameLocation":"4651:6:4","nodeType":"VariableDeclaration","scope":1124,"src":"4643:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"to","nameLocation":"4671:2:4","nodeType":"VariableDeclaration","scope":1124,"src":"4663:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"4663:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"reservesCount","nameLocation":"4687:13:4","nodeType":"VariableDeclaration","scope":1124,"src":"4679:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4679:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"oracle","nameLocation":"4714:6:4","nodeType":"VariableDeclaration","scope":1124,"src":"4706:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"4706:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"userEModeCategory","nameLocation":"4732:17:4","nodeType":"VariableDeclaration","scope":1124,"src":"4726:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1122,"name":"uint8","nodeType":"ElementaryTypeName","src":"4726:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ExecuteWithdrawParams","nameLocation":"4596:21:4","nodeType":"StructDefinition","scope":1299,"src":"4589:165:4","visibility":"public"},{"canonicalName":"DataTypes.ExecuteSetUserEModeParams","id":1131,"members":[{"constant":false,"id":1126,"mutability":"mutable","name":"reservesCount","nameLocation":"4805:13:4","nodeType":"VariableDeclaration","scope":1131,"src":"4797:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"4797:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"oracle","nameLocation":"4832:6:4","nodeType":"VariableDeclaration","scope":1131,"src":"4824:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"4824:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"categoryId","nameLocation":"4850:10:4","nodeType":"VariableDeclaration","scope":1131,"src":"4844:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1129,"name":"uint8","nodeType":"ElementaryTypeName","src":"4844:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ExecuteSetUserEModeParams","nameLocation":"4765:25:4","nodeType":"StructDefinition","scope":1299,"src":"4758:107:4","visibility":"public"},{"canonicalName":"DataTypes.FinalizeTransferParams","id":1150,"members":[{"constant":false,"id":1133,"mutability":"mutable","name":"asset","nameLocation":"4913:5:4","nodeType":"VariableDeclaration","scope":1150,"src":"4905:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"4905:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"from","nameLocation":"4932:4:4","nodeType":"VariableDeclaration","scope":1150,"src":"4924:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"4924:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"to","nameLocation":"4950:2:4","nodeType":"VariableDeclaration","scope":1150,"src":"4942:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1136,"name":"address","nodeType":"ElementaryTypeName","src":"4942:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"amount","nameLocation":"4966:6:4","nodeType":"VariableDeclaration","scope":1150,"src":"4958:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"4958:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"balanceFromBefore","nameLocation":"4986:17:4","nodeType":"VariableDeclaration","scope":1150,"src":"4978:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"balanceToBefore","nameLocation":"5017:15:4","nodeType":"VariableDeclaration","scope":1150,"src":"5009:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"5009:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"reservesCount","nameLocation":"5046:13:4","nodeType":"VariableDeclaration","scope":1150,"src":"5038:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5038:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"oracle","nameLocation":"5073:6:4","nodeType":"VariableDeclaration","scope":1150,"src":"5065:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"5065:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"fromEModeCategory","nameLocation":"5091:17:4","nodeType":"VariableDeclaration","scope":1150,"src":"5085:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1148,"name":"uint8","nodeType":"ElementaryTypeName","src":"5085:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"FinalizeTransferParams","nameLocation":"4876:22:4","nodeType":"StructDefinition","scope":1299,"src":"4869:244:4","visibility":"public"},{"canonicalName":"DataTypes.FlashloanParams","id":1182,"members":[{"constant":false,"id":1152,"mutability":"mutable","name":"receiverAddress","nameLocation":"5154:15:4","nodeType":"VariableDeclaration","scope":1182,"src":"5146:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"5146:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1155,"mutability":"mutable","name":"assets","nameLocation":"5185:6:4","nodeType":"VariableDeclaration","scope":1182,"src":"5175:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"5175:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1154,"nodeType":"ArrayTypeName","src":"5175:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"amounts","nameLocation":"5207:7:4","nodeType":"VariableDeclaration","scope":1182,"src":"5197:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"5197:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1157,"nodeType":"ArrayTypeName","src":"5197:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"interestRateModes","nameLocation":"5230:17:4","nodeType":"VariableDeclaration","scope":1182,"src":"5220:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"5220:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1160,"nodeType":"ArrayTypeName","src":"5220:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"onBehalfOf","nameLocation":"5261:10:4","nodeType":"VariableDeclaration","scope":1182,"src":"5253:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"5253:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"params","nameLocation":"5283:6:4","nodeType":"VariableDeclaration","scope":1182,"src":"5277:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1164,"name":"bytes","nodeType":"ElementaryTypeName","src":"5277:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"referralCode","nameLocation":"5302:12:4","nodeType":"VariableDeclaration","scope":1182,"src":"5295:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1166,"name":"uint16","nodeType":"ElementaryTypeName","src":"5295:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5328:26:4","nodeType":"VariableDeclaration","scope":1182,"src":"5320:34:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5320:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"5368:21:4","nodeType":"VariableDeclaration","scope":1182,"src":"5360:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"5360:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"maxStableRateBorrowSizePercent","nameLocation":"5403:30:4","nodeType":"VariableDeclaration","scope":1182,"src":"5395:38:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"5395:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"reservesCount","nameLocation":"5447:13:4","nodeType":"VariableDeclaration","scope":1182,"src":"5439:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"5439:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"addressesProvider","nameLocation":"5474:17:4","nodeType":"VariableDeclaration","scope":1182,"src":"5466:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"5466:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"userEModeCategory","nameLocation":"5503:17:4","nodeType":"VariableDeclaration","scope":1182,"src":"5497:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1178,"name":"uint8","nodeType":"ElementaryTypeName","src":"5497:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"isAuthorizedFlashBorrower","nameLocation":"5531:25:4","nodeType":"VariableDeclaration","scope":1182,"src":"5526:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1180,"name":"bool","nodeType":"ElementaryTypeName","src":"5526:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FlashloanParams","nameLocation":"5124:15:4","nodeType":"StructDefinition","scope":1299,"src":"5117:444:4","visibility":"public"},{"canonicalName":"DataTypes.FlashloanSimpleParams","id":1197,"members":[{"constant":false,"id":1184,"mutability":"mutable","name":"receiverAddress","nameLocation":"5608:15:4","nodeType":"VariableDeclaration","scope":1197,"src":"5600:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"5600:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"asset","nameLocation":"5637:5:4","nodeType":"VariableDeclaration","scope":1197,"src":"5629:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"5629:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"amount","nameLocation":"5656:6:4","nodeType":"VariableDeclaration","scope":1197,"src":"5648:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"5648:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"params","nameLocation":"5674:6:4","nodeType":"VariableDeclaration","scope":1197,"src":"5668:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1189,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"referralCode","nameLocation":"5693:12:4","nodeType":"VariableDeclaration","scope":1197,"src":"5686:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1191,"name":"uint16","nodeType":"ElementaryTypeName","src":"5686:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5719:26:4","nodeType":"VariableDeclaration","scope":1197,"src":"5711:34:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"5711:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"5759:21:4","nodeType":"VariableDeclaration","scope":1197,"src":"5751:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1195,"name":"uint256","nodeType":"ElementaryTypeName","src":"5751:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FlashloanSimpleParams","nameLocation":"5572:21:4","nodeType":"StructDefinition","scope":1299,"src":"5565:220:4","visibility":"public"},{"canonicalName":"DataTypes.FlashLoanRepaymentParams","id":1210,"members":[{"constant":false,"id":1199,"mutability":"mutable","name":"amount","nameLocation":"5835:6:4","nodeType":"VariableDeclaration","scope":1210,"src":"5827:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"totalPremium","nameLocation":"5855:12:4","nodeType":"VariableDeclaration","scope":1210,"src":"5847:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"5847:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5881:26:4","nodeType":"VariableDeclaration","scope":1210,"src":"5873:34:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"5873:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"asset","nameLocation":"5921:5:4","nodeType":"VariableDeclaration","scope":1210,"src":"5913:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"5913:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"receiverAddress","nameLocation":"5940:15:4","nodeType":"VariableDeclaration","scope":1210,"src":"5932:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"5932:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"referralCode","nameLocation":"5968:12:4","nodeType":"VariableDeclaration","scope":1210,"src":"5961:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1208,"name":"uint16","nodeType":"ElementaryTypeName","src":"5961:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"FlashLoanRepaymentParams","nameLocation":"5796:24:4","nodeType":"StructDefinition","scope":1299,"src":"5789:196:4","visibility":"public"},{"canonicalName":"DataTypes.CalculateUserAccountDataParams","id":1222,"members":[{"constant":false,"id":1213,"mutability":"mutable","name":"userConfig","nameLocation":"6054:10:4","nodeType":"VariableDeclaration","scope":1222,"src":"6033:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$988_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":1212,"nodeType":"UserDefinedTypeName","pathNode":{"id":1211,"name":"UserConfigurationMap","nameLocations":["6033:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":988,"src":"6033:20:4"},"referencedDeclaration":988,"src":"6033:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$988_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"reservesCount","nameLocation":"6078:13:4","nodeType":"VariableDeclaration","scope":1222,"src":"6070:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"6070:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"user","nameLocation":"6105:4:4","nodeType":"VariableDeclaration","scope":1222,"src":"6097:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"6097:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"oracle","nameLocation":"6123:6:4","nodeType":"VariableDeclaration","scope":1222,"src":"6115:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"6115:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"userEModeCategory","nameLocation":"6141:17:4","nodeType":"VariableDeclaration","scope":1222,"src":"6135:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1220,"name":"uint8","nodeType":"ElementaryTypeName","src":"6135:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"CalculateUserAccountDataParams","nameLocation":"5996:30:4","nodeType":"StructDefinition","scope":1299,"src":"5989:174:4","visibility":"public"},{"canonicalName":"DataTypes.ValidateBorrowParams","id":1254,"members":[{"constant":false,"id":1225,"mutability":"mutable","name":"reserveCache","nameLocation":"6214:12:4","nodeType":"VariableDeclaration","scope":1254,"src":"6201:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$1045_storage_ptr","typeString":"struct DataTypes.ReserveCache"},"typeName":{"id":1224,"nodeType":"UserDefinedTypeName","pathNode":{"id":1223,"name":"ReserveCache","nameLocations":["6201:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1045,"src":"6201:12:4"},"referencedDeclaration":1045,"src":"6201:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$1045_storage_ptr","typeString":"struct DataTypes.ReserveCache"}},"visibility":"internal"},{"constant":false,"id":1228,"mutability":"mutable","name":"userConfig","nameLocation":"6253:10:4","nodeType":"VariableDeclaration","scope":1254,"src":"6232:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$988_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":1227,"nodeType":"UserDefinedTypeName","pathNode":{"id":1226,"name":"UserConfigurationMap","nameLocations":["6232:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":988,"src":"6232:20:4"},"referencedDeclaration":988,"src":"6232:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$988_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"asset","nameLocation":"6277:5:4","nodeType":"VariableDeclaration","scope":1254,"src":"6269:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"6269:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1232,"mutability":"mutable","name":"userAddress","nameLocation":"6296:11:4","nodeType":"VariableDeclaration","scope":1254,"src":"6288:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"amount","nameLocation":"6321:6:4","nodeType":"VariableDeclaration","scope":1254,"src":"6313:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"6313:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"interestRateMode","nameLocation":"6350:16:4","nodeType":"VariableDeclaration","scope":1254,"src":"6333:33:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":1236,"nodeType":"UserDefinedTypeName","pathNode":{"id":1235,"name":"InterestRateMode","nameLocations":["6333:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":1003,"src":"6333:16:4"},"referencedDeclaration":1003,"src":"6333:16:4","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"maxStableLoanPercent","nameLocation":"6380:20:4","nodeType":"VariableDeclaration","scope":1254,"src":"6372:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"6372:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"reservesCount","nameLocation":"6414:13:4","nodeType":"VariableDeclaration","scope":1254,"src":"6406:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"6406:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"oracle","nameLocation":"6441:6:4","nodeType":"VariableDeclaration","scope":1254,"src":"6433:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"6433:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"userEModeCategory","nameLocation":"6459:17:4","nodeType":"VariableDeclaration","scope":1254,"src":"6453:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1244,"name":"uint8","nodeType":"ElementaryTypeName","src":"6453:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"6490:19:4","nodeType":"VariableDeclaration","scope":1254,"src":"6482:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"6482:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"isolationModeActive","nameLocation":"6520:19:4","nodeType":"VariableDeclaration","scope":1254,"src":"6515:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1248,"name":"bool","nodeType":"ElementaryTypeName","src":"6515:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"isolationModeCollateralAddress","nameLocation":"6553:30:4","nodeType":"VariableDeclaration","scope":1254,"src":"6545:38:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"6545:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"isolationModeDebtCeiling","nameLocation":"6597:24:4","nodeType":"VariableDeclaration","scope":1254,"src":"6589:32:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ValidateBorrowParams","nameLocation":"6174:20:4","nodeType":"StructDefinition","scope":1299,"src":"6167:459:4","visibility":"public"},{"canonicalName":"DataTypes.ValidateLiquidationCallParams","id":1264,"members":[{"constant":false,"id":1257,"mutability":"mutable","name":"debtReserveCache","nameLocation":"6686:16:4","nodeType":"VariableDeclaration","scope":1264,"src":"6673:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$1045_storage_ptr","typeString":"struct DataTypes.ReserveCache"},"typeName":{"id":1256,"nodeType":"UserDefinedTypeName","pathNode":{"id":1255,"name":"ReserveCache","nameLocations":["6673:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1045,"src":"6673:12:4"},"referencedDeclaration":1045,"src":"6673:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$1045_storage_ptr","typeString":"struct DataTypes.ReserveCache"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"totalDebt","nameLocation":"6716:9:4","nodeType":"VariableDeclaration","scope":1264,"src":"6708:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"6708:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"healthFactor","nameLocation":"6739:12:4","nodeType":"VariableDeclaration","scope":1264,"src":"6731:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"6731:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"6765:19:4","nodeType":"VariableDeclaration","scope":1264,"src":"6757:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1262,"name":"address","nodeType":"ElementaryTypeName","src":"6757:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ValidateLiquidationCallParams","nameLocation":"6637:29:4","nodeType":"StructDefinition","scope":1299,"src":"6630:159:4","visibility":"public"},{"canonicalName":"DataTypes.CalculateInterestRatesParams","id":1283,"members":[{"constant":false,"id":1266,"mutability":"mutable","name":"unbacked","nameLocation":"6843:8:4","nodeType":"VariableDeclaration","scope":1283,"src":"6835:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"6835:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"liquidityAdded","nameLocation":"6865:14:4","nodeType":"VariableDeclaration","scope":1283,"src":"6857:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"liquidityTaken","nameLocation":"6893:14:4","nodeType":"VariableDeclaration","scope":1283,"src":"6885:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"6885:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"totalStableDebt","nameLocation":"6921:15:4","nodeType":"VariableDeclaration","scope":1283,"src":"6913:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"6913:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"totalVariableDebt","nameLocation":"6950:17:4","nodeType":"VariableDeclaration","scope":1283,"src":"6942:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"6942:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"averageStableBorrowRate","nameLocation":"6981:23:4","nodeType":"VariableDeclaration","scope":1283,"src":"6973:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"6973:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"reserveFactor","nameLocation":"7018:13:4","nodeType":"VariableDeclaration","scope":1283,"src":"7010:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"7010:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"reserve","nameLocation":"7045:7:4","nodeType":"VariableDeclaration","scope":1283,"src":"7037:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"7037:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1282,"mutability":"mutable","name":"aToken","nameLocation":"7066:6:4","nodeType":"VariableDeclaration","scope":1283,"src":"7058:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"7058:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CalculateInterestRatesParams","nameLocation":"6800:28:4","nodeType":"StructDefinition","scope":1299,"src":"6793:284:4","visibility":"public"},{"canonicalName":"DataTypes.InitReserveParams","id":1298,"members":[{"constant":false,"id":1285,"mutability":"mutable","name":"asset","nameLocation":"7120:5:4","nodeType":"VariableDeclaration","scope":1298,"src":"7112:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"7112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"aTokenAddress","nameLocation":"7139:13:4","nodeType":"VariableDeclaration","scope":1298,"src":"7131:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"stableDebtAddress","nameLocation":"7166:17:4","nodeType":"VariableDeclaration","scope":1298,"src":"7158:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"7158:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"variableDebtAddress","nameLocation":"7197:19:4","nodeType":"VariableDeclaration","scope":1298,"src":"7189:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1290,"name":"address","nodeType":"ElementaryTypeName","src":"7189:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"7230:27:4","nodeType":"VariableDeclaration","scope":1298,"src":"7222:35:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"7222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"reservesCount","nameLocation":"7270:13:4","nodeType":"VariableDeclaration","scope":1298,"src":"7263:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1294,"name":"uint16","nodeType":"ElementaryTypeName","src":"7263:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"maxNumberReserves","nameLocation":"7296:17:4","nodeType":"VariableDeclaration","scope":1298,"src":"7289:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1296,"name":"uint16","nodeType":"ElementaryTypeName","src":"7289:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"InitReserveParams","nameLocation":"7088:17:4","nodeType":"StructDefinition","scope":1299,"src":"7081:237:4","visibility":"public"}],"scope":1300,"src":"62:7258:4","usedErrors":[],"usedEvents":[]}],"src":"37:7284:4"},"id":4},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","exportedSymbols":{"IAuthentication":[1310]},"id":1311,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1301,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IAuthentication","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1310,"linearizedBaseContracts":[1310],"name":"IAuthentication","nameLocation":"731:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1302,"nodeType":"StructuredDocumentation","src":"753:116:5","text":" @dev Returns the action identifier associated with the external function described by `selector`."},"functionSelector":"851c1bb3","id":1309,"implemented":false,"kind":"function","modifiers":[],"name":"getActionId","nameLocation":"883:11:5","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"selector","nameLocation":"902:8:5","nodeType":"VariableDeclaration","scope":1309,"src":"895:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1303,"name":"bytes4","nodeType":"ElementaryTypeName","src":"895:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"894:17:5"},"returnParameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1309,"src":"935:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"934:9:5"},"scope":1310,"src":"874:70:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1311,"src":"721:225:5","usedErrors":[],"usedEvents":[]}],"src":"688:259:5"},"id":5},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol","exportedSymbols":{"ISignaturesValidator":[1328]},"id":1329,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1312,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:6"},{"abstract":false,"baseContracts":[],"canonicalName":"ISignaturesValidator","contractDependencies":[],"contractKind":"interface","documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"721:95:6","text":" @dev Interface for the SignatureValidator helper, used to support meta-transactions."},"fullyImplemented":false,"id":1328,"linearizedBaseContracts":[1328],"name":"ISignaturesValidator","nameLocation":"827:20:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"854:60:6","text":" @dev Returns the EIP712 domain separator."},"functionSelector":"ed24911d","id":1319,"implemented":false,"kind":"function","modifiers":[],"name":"getDomainSeparator","nameLocation":"928:18:6","nodeType":"FunctionDefinition","parameters":{"id":1315,"nodeType":"ParameterList","parameters":[],"src":"946:2:6"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1319,"src":"972:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"972:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"971:9:6"},"scope":1328,"src":"919:62:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"987:83:6","text":" @dev Returns the next nonce used by an address to sign messages."},"functionSelector":"90193b7c","id":1327,"implemented":false,"kind":"function","modifiers":[],"name":"getNextNonce","nameLocation":"1084:12:6","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"user","nameLocation":"1105:4:6","nodeType":"VariableDeclaration","scope":1327,"src":"1097:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"1097:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1096:14:6"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1327,"src":"1134:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"1134:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1133:9:6"},"scope":1328,"src":"1075:68:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1329,"src":"817:328:6","usedErrors":[],"usedEvents":[]}],"src":"688:458:6"},"id":6},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol","exportedSymbols":{"ITemporarilyPausable":[1347]},"id":1348,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1330,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:7"},{"abstract":false,"baseContracts":[],"canonicalName":"ITemporarilyPausable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"721:61:7","text":" @dev Interface for the TemporarilyPausable helper."},"fullyImplemented":false,"id":1347,"linearizedBaseContracts":[1347],"name":"ITemporarilyPausable","nameLocation":"793:20:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"820:83:7","text":" @dev Emitted every time the pause state changes by `_setPaused`."},"eventSelector":"9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be64","id":1336,"name":"PausedStateChanged","nameLocation":"914:18:7","nodeType":"EventDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"938:6:7","nodeType":"VariableDeclaration","scope":1336,"src":"933:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1333,"name":"bool","nodeType":"ElementaryTypeName","src":"933:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"932:13:7"},"src":"908:38:7"},{"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"952:57:7","text":" @dev Returns the current paused state."},"functionSelector":"1c0de051","id":1346,"implemented":false,"kind":"function","modifiers":[],"name":"getPausedState","nameLocation":"1023:14:7","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[],"src":"1037:2:7"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"paused","nameLocation":"1105:6:7","nodeType":"VariableDeclaration","scope":1346,"src":"1100:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1339,"name":"bool","nodeType":"ElementaryTypeName","src":"1100:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"pauseWindowEndTime","nameLocation":"1133:18:7","nodeType":"VariableDeclaration","scope":1346,"src":"1125:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"bufferPeriodEndTime","nameLocation":"1173:19:7","nodeType":"VariableDeclaration","scope":1346,"src":"1165:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1165:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1086:116:7"},"scope":1347,"src":"1014:189:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1348,"src":"783:422:7","usedErrors":[],"usedEvents":[1336]}],"src":"688:518:7"},"id":7},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol","exportedSymbols":{"IERC20":[1440],"IWETH":[1362]},"id":1363,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1349,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:8"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../openzeppelin/IERC20.sol","id":1350,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1363,"sourceUnit":1441,"src":"721:36:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1352,"name":"IERC20","nameLocations":["929:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"929:6:8"},"id":1353,"nodeType":"InheritanceSpecifier","src":"929:6:8"}],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"759:150:8","text":" @dev Interface for WETH9.\n See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol"},"fullyImplemented":false,"id":1362,"linearizedBaseContracts":[1362,1440],"name":"IWETH","nameLocation":"920:5:8","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":1356,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"951:7:8","nodeType":"FunctionDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"958:2:8"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[],"src":"977:0:8"},"scope":1362,"src":"942:36:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":1361,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"993:8:8","nodeType":"FunctionDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"amount","nameLocation":"1010:6:8","nodeType":"VariableDeclaration","scope":1361,"src":"1002:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1001:16:8"},"returnParameters":{"id":1360,"nodeType":"ParameterList","parameters":[],"src":"1026:0:8"},"scope":1362,"src":"984:43:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1363,"src":"910:119:8","usedErrors":[],"usedEvents":[1430,1439]}],"src":"688:342:8"},"id":8},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","exportedSymbols":{"IERC20":[1440]},"id":1441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1364,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"33:31:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"66:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1440,"linearizedBaseContracts":[1440],"name":"IERC20","nameLocation":"147:6:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"160:66:9","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1371,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"240:11:9","nodeType":"FunctionDefinition","parameters":{"id":1367,"nodeType":"ParameterList","parameters":[],"src":"251:2:9"},"returnParameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1371,"src":"277:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"276:9:9"},"scope":1440,"src":"231:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"292:72:9","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1379,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"378:9:9","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"account","nameLocation":"396:7:9","nodeType":"VariableDeclaration","scope":1379,"src":"388:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"387:17:9"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1379,"src":"428:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"427:9:9"},"scope":1440,"src":"369:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"443:209:9","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1389,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"666:8:9","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"recipient","nameLocation":"683:9:9","nodeType":"VariableDeclaration","scope":1389,"src":"675:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"amount","nameLocation":"702:6:9","nodeType":"VariableDeclaration","scope":1389,"src":"694:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"674:35:9"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"728:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1386,"name":"bool","nodeType":"ElementaryTypeName","src":"728:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"727:6:9"},"scope":1440,"src":"657:77:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"740:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1399,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1018:9:9","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"owner","nameLocation":"1036:5:9","nodeType":"VariableDeclaration","scope":1399,"src":"1028:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"spender","nameLocation":"1051:7:9","nodeType":"VariableDeclaration","scope":1399,"src":"1043:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1027:32:9"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1399,"src":"1083:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:9:9"},"scope":1440,"src":"1009:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"1098:642:9","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1409,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1754:7:9","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"spender","nameLocation":"1770:7:9","nodeType":"VariableDeclaration","scope":1409,"src":"1762:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"1762:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"amount","nameLocation":"1787:6:9","nodeType":"VariableDeclaration","scope":1409,"src":"1779:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1761:33:9"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1409,"src":"1813:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1406,"name":"bool","nodeType":"ElementaryTypeName","src":"1813:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1812:6:9"},"scope":1440,"src":"1745:74:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1410,"nodeType":"StructuredDocumentation","src":"1825:296:9","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1421,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2135:12:9","nodeType":"FunctionDefinition","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"sender","nameLocation":"2165:6:9","nodeType":"VariableDeclaration","scope":1421,"src":"2157:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"2157:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"recipient","nameLocation":"2189:9:9","nodeType":"VariableDeclaration","scope":1421,"src":"2181:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"amount","nameLocation":"2216:6:9","nodeType":"VariableDeclaration","scope":1421,"src":"2208:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2208:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2147:81:9"},"returnParameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"2247:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1418,"name":"bool","nodeType":"ElementaryTypeName","src":"2247:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2246:6:9"},"scope":1440,"src":"2126:127:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"2259:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1430,"name":"Transfer","nameLocation":"2428:8:9","nodeType":"EventDefinition","parameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2453:4:9","nodeType":"VariableDeclaration","scope":1430,"src":"2437:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"2437:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2475:2:9","nodeType":"VariableDeclaration","scope":1430,"src":"2459:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"2459:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1428,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2487:5:9","nodeType":"VariableDeclaration","scope":1430,"src":"2479:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2436:57:9"},"src":"2422:72:9"},{"anonymous":false,"documentation":{"id":1431,"nodeType":"StructuredDocumentation","src":"2500:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1439,"name":"Approval","nameLocation":"2659:8:9","nodeType":"EventDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2684:5:9","nodeType":"VariableDeclaration","scope":1439,"src":"2668:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1435,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2707:7:9","nodeType":"VariableDeclaration","scope":1439,"src":"2691:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1437,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2724:5:9","nodeType":"VariableDeclaration","scope":1439,"src":"2716:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2716:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:63:9"},"src":"2653:78:9"}],"scope":1441,"src":"137:2596:9","usedErrors":[],"usedEvents":[1430,1439]}],"src":"33:2701:9"},"id":9},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","exportedSymbols":{"IAsset":[1444]},"id":1445,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1442,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IAsset","contractDependencies":[],"contractKind":"interface","documentation":{"id":1443,"nodeType":"StructuredDocumentation","src":"721:309:10","text":" @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n types.\n This concept is unrelated to a Pool's Asset Managers."},"fullyImplemented":true,"id":1444,"linearizedBaseContracts":[1444],"name":"IAsset","nameLocation":"1041:6:10","nodeType":"ContractDefinition","nodes":[],"scope":1445,"src":"1031:73:10","usedErrors":[],"usedEvents":[]}],"src":"688:417:10"},"id":10},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","exportedSymbols":{"IAuthorizer":[1459]},"id":1460,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1446,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IAuthorizer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1459,"linearizedBaseContracts":[1459],"name":"IAuthorizer","nameLocation":"731:11:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"749:121:11","text":" @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`."},"functionSelector":"9be2a884","id":1458,"implemented":false,"kind":"function","modifiers":[],"name":"canPerform","nameLocation":"884:10:11","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"actionId","nameLocation":"912:8:11","nodeType":"VariableDeclaration","scope":1458,"src":"904:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"904:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"account","nameLocation":"938:7:11","nodeType":"VariableDeclaration","scope":1458,"src":"930:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1450,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"where","nameLocation":"963:5:11","nodeType":"VariableDeclaration","scope":1458,"src":"955:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1452,"name":"address","nodeType":"ElementaryTypeName","src":"955:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"894:80:11"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1458,"src":"998:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1455,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"997:6:11"},"scope":1459,"src":"875:129:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1460,"src":"721:285:11","usedErrors":[],"usedEvents":[]}],"src":"688:319:11"},"id":11},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","exportedSymbols":{"IERC20":[1440],"IFlashLoanRecipient":[1479]},"id":1480,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1461,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:12"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":1462,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1480,"sourceUnit":1441,"src":"773:51:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IFlashLoanRecipient","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1479,"linearizedBaseContracts":[1479],"name":"IFlashLoanRecipient","nameLocation":"836:19:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"862:496:12","text":" @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."},"functionSelector":"f04f2707","id":1478,"implemented":false,"kind":"function","modifiers":[],"name":"receiveFlashLoan","nameLocation":"1372:16:12","nodeType":"FunctionDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"tokens","nameLocation":"1414:6:12","nodeType":"VariableDeclaration","scope":1478,"src":"1398:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1465,"nodeType":"UserDefinedTypeName","pathNode":{"id":1464,"name":"IERC20","nameLocations":["1398:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"1398:6:12"},"referencedDeclaration":1440,"src":"1398:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":1466,"nodeType":"ArrayTypeName","src":"1398:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"amounts","nameLocation":"1447:7:12","nodeType":"VariableDeclaration","scope":1478,"src":"1430:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1430:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1469,"nodeType":"ArrayTypeName","src":"1430:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1473,"mutability":"mutable","name":"feeAmounts","nameLocation":"1481:10:12","nodeType":"VariableDeclaration","scope":1478,"src":"1464:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1472,"nodeType":"ArrayTypeName","src":"1464:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1475,"mutability":"mutable","name":"userData","nameLocation":"1514:8:12","nodeType":"VariableDeclaration","scope":1478,"src":"1501:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1474,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1388:140:12"},"returnParameters":{"id":1477,"nodeType":"ParameterList","parameters":[],"src":"1537:0:12"},"scope":1479,"src":"1363:175:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1480,"src":"826:714:12","usedErrors":[],"usedEvents":[]}],"src":"688:853:12"},"id":12},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol","exportedSymbols":{"IAsset":[1444],"IAuthentication":[1310],"IAuthorizer":[1459],"IERC20":[1440],"IFlashLoanRecipient":[1479],"IProtocolFeesCollector":[1548],"ISignaturesValidator":[1328],"ITemporarilyPausable":[1347],"IVault":[2066],"IWETH":[1362]},"id":1549,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1481,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:13"},{"id":1482,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"720:33:13"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":1483,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1549,"sourceUnit":1441,"src":"755:51:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","file":"./IVault.sol","id":1484,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1549,"sourceUnit":2067,"src":"808:22:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","file":"./IAuthorizer.sol","id":1485,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1549,"sourceUnit":1460,"src":"831:27:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IProtocolFeesCollector","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1548,"linearizedBaseContracts":[1548],"name":"IProtocolFeesCollector","nameLocation":"870:22:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"a9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc","id":1489,"name":"SwapFeePercentageChanged","nameLocation":"905:24:13","nodeType":"EventDefinition","parameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"indexed":false,"mutability":"mutable","name":"newSwapFeePercentage","nameLocation":"938:20:13","nodeType":"VariableDeclaration","scope":1489,"src":"930:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1486,"name":"uint256","nodeType":"ElementaryTypeName","src":"930:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"929:30:13"},"src":"899:61:13"},{"anonymous":false,"eventSelector":"5a0b7386237e7f07fa741efc64e59c9387d2cccafec760efed4d53387f20e19a","id":1493,"name":"FlashLoanFeePercentageChanged","nameLocation":"971:29:13","nodeType":"EventDefinition","parameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"indexed":false,"mutability":"mutable","name":"newFlashLoanFeePercentage","nameLocation":"1009:25:13","nodeType":"VariableDeclaration","scope":1493,"src":"1001:33:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1000:35:13"},"src":"965:71:13"},{"functionSelector":"6daefab6","id":1505,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawCollectedFees","nameLocation":"1051:21:13","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"tokens","nameLocation":"1100:6:13","nodeType":"VariableDeclaration","scope":1505,"src":"1082:24:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1495,"nodeType":"UserDefinedTypeName","pathNode":{"id":1494,"name":"IERC20","nameLocations":["1082:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"1082:6:13"},"referencedDeclaration":1440,"src":"1082:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":1496,"nodeType":"ArrayTypeName","src":"1082:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"amounts","nameLocation":"1135:7:13","nodeType":"VariableDeclaration","scope":1505,"src":"1116:26:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1499,"nodeType":"ArrayTypeName","src":"1116:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1502,"mutability":"mutable","name":"recipient","nameLocation":"1160:9:13","nodeType":"VariableDeclaration","scope":1505,"src":"1152:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"1152:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1072:103:13"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[],"src":"1184:0:13"},"scope":1548,"src":"1042:143:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"38e9922e","id":1510,"implemented":false,"kind":"function","modifiers":[],"name":"setSwapFeePercentage","nameLocation":"1200:20:13","nodeType":"FunctionDefinition","parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"newSwapFeePercentage","nameLocation":"1229:20:13","nodeType":"VariableDeclaration","scope":1510,"src":"1221:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:30:13"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[],"src":"1259:0:13"},"scope":1548,"src":"1191:69:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6b6b9f69","id":1515,"implemented":false,"kind":"function","modifiers":[],"name":"setFlashLoanFeePercentage","nameLocation":"1275:25:13","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"newFlashLoanFeePercentage","nameLocation":"1309:25:13","nodeType":"VariableDeclaration","scope":1515,"src":"1301:33:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:35:13"},"returnParameters":{"id":1514,"nodeType":"ParameterList","parameters":[],"src":"1344:0:13"},"scope":1548,"src":"1266:79:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"55c67628","id":1520,"implemented":false,"kind":"function","modifiers":[],"name":"getSwapFeePercentage","nameLocation":"1360:20:13","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[],"src":"1380:2:13"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1520,"src":"1406:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1405:9:13"},"scope":1548,"src":"1351:64:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d877845c","id":1525,"implemented":false,"kind":"function","modifiers":[],"name":"getFlashLoanFeePercentage","nameLocation":"1430:25:13","nodeType":"FunctionDefinition","parameters":{"id":1521,"nodeType":"ParameterList","parameters":[],"src":"1455:2:13"},"returnParameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1525,"src":"1481:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1481:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1480:9:13"},"scope":1548,"src":"1421:69:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e42abf35","id":1535,"implemented":false,"kind":"function","modifiers":[],"name":"getCollectedFeeAmounts","nameLocation":"1505:22:13","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"tokens","nameLocation":"1544:6:13","nodeType":"VariableDeclaration","scope":1535,"src":"1528:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1527,"nodeType":"UserDefinedTypeName","pathNode":{"id":1526,"name":"IERC20","nameLocations":["1528:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"1528:6:13"},"referencedDeclaration":1440,"src":"1528:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":1528,"nodeType":"ArrayTypeName","src":"1528:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"1527:24:13"},"returnParameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"feeAmounts","nameLocation":"1592:10:13","nodeType":"VariableDeclaration","scope":1535,"src":"1575:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1575:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1532,"nodeType":"ArrayTypeName","src":"1575:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1574:29:13"},"scope":1548,"src":"1496:108:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aaabadc5","id":1541,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizer","nameLocation":"1619:13:13","nodeType":"FunctionDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[],"src":"1632:2:13"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"1658:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$1459","typeString":"contract IAuthorizer"},"typeName":{"id":1538,"nodeType":"UserDefinedTypeName","pathNode":{"id":1537,"name":"IAuthorizer","nameLocations":["1658:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1459,"src":"1658:11:13"},"referencedDeclaration":1459,"src":"1658:11:13","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$1459","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"1657:13:13"},"scope":1548,"src":"1610:61:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fbfa77cf","id":1547,"implemented":false,"kind":"function","modifiers":[],"name":"vault","nameLocation":"1686:5:13","nodeType":"FunctionDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[],"src":"1691:2:13"},"returnParameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1547,"src":"1717:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$2066","typeString":"contract IVault"},"typeName":{"id":1544,"nodeType":"UserDefinedTypeName","pathNode":{"id":1543,"name":"IVault","nameLocations":["1717:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2066,"src":"1717:6:13"},"referencedDeclaration":2066,"src":"1717:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$2066","typeString":"contract IVault"}},"visibility":"internal"}],"src":"1716:8:13"},"scope":1548,"src":"1677:48:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1549,"src":"860:867:13","usedErrors":[],"usedEvents":[1489,1493]}],"src":"688:1040:13"},"id":13},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","exportedSymbols":{"IAsset":[1444],"IAuthentication":[1310],"IAuthorizer":[1459],"IERC20":[1440],"IFlashLoanRecipient":[1479],"IProtocolFeesCollector":[1548],"ISignaturesValidator":[1328],"ITemporarilyPausable":[1347],"IVault":[2066],"IWETH":[1362]},"id":2067,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1550,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"688:33:14"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":1551,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2067,"sourceUnit":1441,"src":"723:51:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","file":"../solidity-utils/helpers/IAuthentication.sol","id":1552,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2067,"sourceUnit":1311,"src":"775:55:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol","file":"../solidity-utils/helpers/ISignaturesValidator.sol","id":1553,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2067,"sourceUnit":1329,"src":"831:60:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol","file":"../solidity-utils/helpers/ITemporarilyPausable.sol","id":1554,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2067,"sourceUnit":1348,"src":"892:60:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol","file":"../solidity-utils/misc/IWETH.sol","id":1555,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2067,"sourceUnit":1363,"src":"953:42:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","file":"./IAsset.sol","id":1556,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2067,"sourceUnit":1445,"src":"997:22:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","file":"./IAuthorizer.sol","id":1557,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2067,"sourceUnit":1460,"src":"1020:27:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","file":"./IFlashLoanRecipient.sol","id":1558,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2067,"sourceUnit":1480,"src":"1048:35:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol","file":"./IProtocolFeesCollector.sol","id":1559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2067,"sourceUnit":1549,"src":"1084:38:14","symbolAliases":[],"unitAlias":""},{"id":1560,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"1124:31:14"},{"abstract":false,"baseContracts":[{"baseName":{"id":1562,"name":"ISignaturesValidator","nameLocations":["1349:20:14"],"nodeType":"IdentifierPath","referencedDeclaration":1328,"src":"1349:20:14"},"id":1563,"nodeType":"InheritanceSpecifier","src":"1349:20:14"},{"baseName":{"id":1564,"name":"ITemporarilyPausable","nameLocations":["1371:20:14"],"nodeType":"IdentifierPath","referencedDeclaration":1347,"src":"1371:20:14"},"id":1565,"nodeType":"InheritanceSpecifier","src":"1371:20:14"},{"baseName":{"id":1566,"name":"IAuthentication","nameLocations":["1393:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"1393:15:14"},"id":1567,"nodeType":"InheritanceSpecifier","src":"1393:15:14"}],"canonicalName":"IVault","contractDependencies":[],"contractKind":"interface","documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"1157:171:14","text":" @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n don't override one of these declarations."},"fullyImplemented":false,"id":2066,"linearizedBaseContracts":[2066,1310,1347,1328],"name":"IVault","nameLocation":"1339:6:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"2906:55:14","text":" @dev Returns the Vault's Authorizer."},"functionSelector":"aaabadc5","id":1574,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizer","nameLocation":"2975:13:14","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[],"src":"2988:2:14"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"3014:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$1459","typeString":"contract IAuthorizer"},"typeName":{"id":1571,"nodeType":"UserDefinedTypeName","pathNode":{"id":1570,"name":"IAuthorizer","nameLocations":["3014:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1459,"src":"3014:11:14"},"referencedDeclaration":1459,"src":"3014:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$1459","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3013:13:14"},"scope":2066,"src":"2966:61:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"3033:175:14","text":" @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n Emits an `AuthorizerChanged` event."},"functionSelector":"058a628f","id":1581,"implemented":false,"kind":"function","modifiers":[],"name":"setAuthorizer","nameLocation":"3222:13:14","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"newAuthorizer","nameLocation":"3248:13:14","nodeType":"VariableDeclaration","scope":1581,"src":"3236:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$1459","typeString":"contract IAuthorizer"},"typeName":{"id":1577,"nodeType":"UserDefinedTypeName","pathNode":{"id":1576,"name":"IAuthorizer","nameLocations":["3236:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1459,"src":"3236:11:14"},"referencedDeclaration":1459,"src":"3236:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$1459","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3235:27:14"},"returnParameters":{"id":1580,"nodeType":"ParameterList","parameters":[],"src":"3271:0:14"},"scope":2066,"src":"3213:59:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"3278:80:14","text":" @dev Emitted when a new authorizer is set by `setAuthorizer`."},"eventSelector":"94b979b6831a51293e2641426f97747feed46f17779fed9cd18d1ecefcfe92ef","id":1587,"name":"AuthorizerChanged","nameLocation":"3369:17:14","nodeType":"EventDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"indexed":true,"mutability":"mutable","name":"newAuthorizer","nameLocation":"3407:13:14","nodeType":"VariableDeclaration","scope":1587,"src":"3387:33:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$1459","typeString":"contract IAuthorizer"},"typeName":{"id":1584,"nodeType":"UserDefinedTypeName","pathNode":{"id":1583,"name":"IAuthorizer","nameLocations":["3387:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1459,"src":"3387:11:14"},"referencedDeclaration":1459,"src":"3387:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$1459","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3386:35:14"},"src":"3363:59:14"},{"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"4518:99:14","text":" @dev Returns true if `user` has approved `relayer` to act as a relayer for them."},"functionSelector":"fec90d72","id":1597,"implemented":false,"kind":"function","modifiers":[],"name":"hasApprovedRelayer","nameLocation":"4631:18:14","nodeType":"FunctionDefinition","parameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"user","nameLocation":"4658:4:14","nodeType":"VariableDeclaration","scope":1597,"src":"4650:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1589,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"relayer","nameLocation":"4672:7:14","nodeType":"VariableDeclaration","scope":1597,"src":"4664:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"4664:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4649:31:14"},"returnParameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1597,"src":"4704:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1594,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4703:6:14"},"scope":2066,"src":"4622:88:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"4716:178:14","text":" @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n Emits a `RelayerApprovalChanged` event."},"functionSelector":"fa6e671d","id":1607,"implemented":false,"kind":"function","modifiers":[],"name":"setRelayerApproval","nameLocation":"4908:18:14","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"sender","nameLocation":"4944:6:14","nodeType":"VariableDeclaration","scope":1607,"src":"4936:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"4936:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"relayer","nameLocation":"4968:7:14","nodeType":"VariableDeclaration","scope":1607,"src":"4960:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1601,"name":"address","nodeType":"ElementaryTypeName","src":"4960:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"approved","nameLocation":"4990:8:14","nodeType":"VariableDeclaration","scope":1607,"src":"4985:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1603,"name":"bool","nodeType":"ElementaryTypeName","src":"4985:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4926:78:14"},"returnParameters":{"id":1606,"nodeType":"ParameterList","parameters":[],"src":"5013:0:14"},"scope":2066,"src":"4899:115:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1608,"nodeType":"StructuredDocumentation","src":"5020:104:14","text":" @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`."},"eventSelector":"46961fdb4502b646d5095fba7600486a8ac05041d55cdf0f16ed677180b5cad8","id":1616,"name":"RelayerApprovalChanged","nameLocation":"5135:22:14","nodeType":"EventDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"5174:7:14","nodeType":"VariableDeclaration","scope":1616,"src":"5158:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1609,"name":"address","nodeType":"ElementaryTypeName","src":"5158:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1612,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"5199:6:14","nodeType":"VariableDeclaration","scope":1616,"src":"5183:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"5183:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1614,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"5212:8:14","nodeType":"VariableDeclaration","scope":1616,"src":"5207:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1613,"name":"bool","nodeType":"ElementaryTypeName","src":"5207:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5157:64:14"},"src":"5129:93:14"},{"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"5930:78:14","text":" @dev Returns `user`'s Internal Balance for a set of tokens."},"functionSelector":"0f5a6efa","id":1629,"implemented":false,"kind":"function","modifiers":[],"name":"getInternalBalance","nameLocation":"6022:18:14","nodeType":"FunctionDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"user","nameLocation":"6049:4:14","nodeType":"VariableDeclaration","scope":1629,"src":"6041:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"6041:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"tokens","nameLocation":"6071:6:14","nodeType":"VariableDeclaration","scope":1629,"src":"6055:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1621,"nodeType":"UserDefinedTypeName","pathNode":{"id":1620,"name":"IERC20","nameLocations":["6055:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"6055:6:14"},"referencedDeclaration":1440,"src":"6055:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":1622,"nodeType":"ArrayTypeName","src":"6055:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"6040:38:14"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1629,"src":"6102:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1626,"nodeType":"ArrayTypeName","src":"6102:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6101:18:14"},"scope":2066,"src":"6013:107:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1630,"nodeType":"StructuredDocumentation","src":"6126:416:14","text":" @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n it lets integrators reuse a user's Vault allowance.\n For each operation, if the caller is not `sender`, it must be an authorized relayer for them."},"functionSelector":"0e8e3e84","id":1637,"implemented":false,"kind":"function","modifiers":[],"name":"manageUserBalance","nameLocation":"6556:17:14","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"ops","nameLocation":"6597:3:14","nodeType":"VariableDeclaration","scope":1637,"src":"6574:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserBalanceOp_$1651_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.UserBalanceOp[]"},"typeName":{"baseType":{"id":1632,"nodeType":"UserDefinedTypeName","pathNode":{"id":1631,"name":"UserBalanceOp","nameLocations":["6574:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"6574:13:14"},"referencedDeclaration":1651,"src":"6574:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserBalanceOp_$1651_storage_ptr","typeString":"struct IVault.UserBalanceOp"}},"id":1633,"nodeType":"ArrayTypeName","src":"6574:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserBalanceOp_$1651_storage_$dyn_storage_ptr","typeString":"struct IVault.UserBalanceOp[]"}},"visibility":"internal"}],"src":"6573:28:14"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[],"src":"6618:0:14"},"scope":2066,"src":"6547:72:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.UserBalanceOp","documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"6625:175:14","text":" @dev Data for `manageUserBalance` operations, which include the possibility for ETH to be sent and received\nwithout manual WETH wrapping or unwrapping."},"id":1651,"members":[{"constant":false,"id":1641,"mutability":"mutable","name":"kind","nameLocation":"6854:4:14","nodeType":"VariableDeclaration","scope":1651,"src":"6836:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_UserBalanceOpKind_$1656","typeString":"enum IVault.UserBalanceOpKind"},"typeName":{"id":1640,"nodeType":"UserDefinedTypeName","pathNode":{"id":1639,"name":"UserBalanceOpKind","nameLocations":["6836:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":1656,"src":"6836:17:14"},"referencedDeclaration":1656,"src":"6836:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_UserBalanceOpKind_$1656","typeString":"enum IVault.UserBalanceOpKind"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"asset","nameLocation":"6875:5:14","nodeType":"VariableDeclaration","scope":1651,"src":"6868:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"},"typeName":{"id":1643,"nodeType":"UserDefinedTypeName","pathNode":{"id":1642,"name":"IAsset","nameLocations":["6868:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1444,"src":"6868:6:14"},"referencedDeclaration":1444,"src":"6868:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"amount","nameLocation":"6898:6:14","nodeType":"VariableDeclaration","scope":1651,"src":"6890:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"6890:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"sender","nameLocation":"6922:6:14","nodeType":"VariableDeclaration","scope":1651,"src":"6914:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1647,"name":"address","nodeType":"ElementaryTypeName","src":"6914:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1650,"mutability":"mutable","name":"recipient","nameLocation":"6954:9:14","nodeType":"VariableDeclaration","scope":1651,"src":"6938:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1649,"name":"address","nodeType":"ElementaryTypeName","src":"6938:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"name":"UserBalanceOp","nameLocation":"6812:13:14","nodeType":"StructDefinition","scope":2066,"src":"6805:165:14","visibility":"public"},{"canonicalName":"IVault.UserBalanceOpKind","id":1656,"members":[{"id":1652,"name":"DEPOSIT_INTERNAL","nameLocation":"8608:16:14","nodeType":"EnumValue","src":"8608:16:14"},{"id":1653,"name":"WITHDRAW_INTERNAL","nameLocation":"8626:17:14","nodeType":"EnumValue","src":"8626:17:14"},{"id":1654,"name":"TRANSFER_INTERNAL","nameLocation":"8645:17:14","nodeType":"EnumValue","src":"8645:17:14"},{"id":1655,"name":"TRANSFER_EXTERNAL","nameLocation":"8664:17:14","nodeType":"EnumValue","src":"8664:17:14"}],"name":"UserBalanceOpKind","nameLocation":"8588:17:14","nodeType":"EnumDefinition","src":"8583:100:14"},{"anonymous":false,"documentation":{"id":1657,"nodeType":"StructuredDocumentation","src":"8689:317:14","text":" @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n interacting with Pools using Internal Balance.\n Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n address."},"eventSelector":"18e1ea4139e68413d7d08aa752e71568e36b2c5bf940893314c2c5b01eaa0c42","id":1666,"name":"InternalBalanceChanged","nameLocation":"9017:22:14","nodeType":"EventDefinition","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"9056:4:14","nodeType":"VariableDeclaration","scope":1666,"src":"9040:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"9040:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1662,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"9077:5:14","nodeType":"VariableDeclaration","scope":1666,"src":"9062:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"},"typeName":{"id":1661,"nodeType":"UserDefinedTypeName","pathNode":{"id":1660,"name":"IERC20","nameLocations":["9062:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"9062:6:14"},"referencedDeclaration":1440,"src":"9062:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1664,"indexed":false,"mutability":"mutable","name":"delta","nameLocation":"9091:5:14","nodeType":"VariableDeclaration","scope":1666,"src":"9084:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1663,"name":"int256","nodeType":"ElementaryTypeName","src":"9084:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9039:58:14"},"src":"9011:87:14"},{"anonymous":false,"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"9104:131:14","text":" @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account."},"eventSelector":"540a1a3f28340caec336c81d8d7b3df139ee5cdc1839a4f283d7ebb7eaae2d5c","id":1678,"name":"ExternalBalanceTransfer","nameLocation":"9246:23:14","nodeType":"EventDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"9285:5:14","nodeType":"VariableDeclaration","scope":1678,"src":"9270:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"},"typeName":{"id":1669,"nodeType":"UserDefinedTypeName","pathNode":{"id":1668,"name":"IERC20","nameLocations":["9270:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"9270:6:14"},"referencedDeclaration":1440,"src":"9270:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1672,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"9308:6:14","nodeType":"VariableDeclaration","scope":1678,"src":"9292:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"9292:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1674,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"9324:9:14","nodeType":"VariableDeclaration","scope":1678,"src":"9316:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1673,"name":"address","nodeType":"ElementaryTypeName","src":"9316:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1676,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"9343:6:14","nodeType":"VariableDeclaration","scope":1678,"src":"9335:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"9335:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9269:81:14"},"src":"9240:111:14"},{"canonicalName":"IVault.PoolSpecialization","id":1682,"members":[{"id":1679,"name":"GENERAL","nameLocation":"10457:7:14","nodeType":"EnumValue","src":"10457:7:14"},{"id":1680,"name":"MINIMAL_SWAP_INFO","nameLocation":"10466:17:14","nodeType":"EnumValue","src":"10466:17:14"},{"id":1681,"name":"TWO_TOKEN","nameLocation":"10485:9:14","nodeType":"EnumValue","src":"10485:9:14"}],"name":"PoolSpecialization","nameLocation":"10436:18:14","nodeType":"EnumDefinition","src":"10431:65:14"},{"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"10502:702:14","text":" @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n changed.\n The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n depending on the chosen specialization setting. This contract is known as the Pool's contract.\n Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n multiple Pools may share the same contract.\n Emits a `PoolRegistered` event."},"functionSelector":"09b2760f","id":1691,"implemented":false,"kind":"function","modifiers":[],"name":"registerPool","nameLocation":"11218:12:14","nodeType":"FunctionDefinition","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"specialization","nameLocation":"11250:14:14","nodeType":"VariableDeclaration","scope":1691,"src":"11231:33:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$1682","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":1685,"nodeType":"UserDefinedTypeName","pathNode":{"id":1684,"name":"PoolSpecialization","nameLocations":["11231:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"11231:18:14"},"referencedDeclaration":1682,"src":"11231:18:14","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$1682","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11230:35:14"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1691,"src":"11284:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11284:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11283:9:14"},"scope":2066,"src":"11209:84:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"11299:84:14","text":" @dev Emitted when a Pool is registered by calling `registerPool`."},"eventSelector":"3c13bc30b8e878c53fd2a36b679409c073afd75950be43d8858768e956fbc20e","id":1701,"name":"PoolRegistered","nameLocation":"11394:14:14","nodeType":"EventDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"11425:6:14","nodeType":"VariableDeclaration","scope":1701,"src":"11409:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11409:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1696,"indexed":true,"mutability":"mutable","name":"poolAddress","nameLocation":"11449:11:14","nodeType":"VariableDeclaration","scope":1701,"src":"11433:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"11433:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1699,"indexed":false,"mutability":"mutable","name":"specialization","nameLocation":"11481:14:14","nodeType":"VariableDeclaration","scope":1701,"src":"11462:33:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$1682","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":1698,"nodeType":"UserDefinedTypeName","pathNode":{"id":1697,"name":"PoolSpecialization","nameLocations":["11462:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"11462:18:14"},"referencedDeclaration":1682,"src":"11462:18:14","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$1682","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11408:88:14"},"src":"11388:109:14"},{"documentation":{"id":1702,"nodeType":"StructuredDocumentation","src":"11503:85:14","text":" @dev Returns a Pool's contract address and specialization setting."},"functionSelector":"f6c00927","id":1712,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"11602:7:14","nodeType":"FunctionDefinition","parameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"poolId","nameLocation":"11618:6:14","nodeType":"VariableDeclaration","scope":1712,"src":"11610:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11610:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11609:16:14"},"returnParameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1712,"src":"11649:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"11649:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1712,"src":"11658:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$1682","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":1709,"nodeType":"UserDefinedTypeName","pathNode":{"id":1708,"name":"PoolSpecialization","nameLocations":["11658:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"11658:18:14"},"referencedDeclaration":1682,"src":"11658:18:14","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$1682","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11648:29:14"},"scope":2066,"src":"11593:85:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"11684:1422:14","text":" @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n exit by receiving registered tokens, and can only swap registered tokens.\n Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n ascending order.\n The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n expected to be highly secured smart contracts with sound design principles, and the decision to register an\n Asset Manager should not be made lightly.\n Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n different Asset Manager.\n Emits a `TokensRegistered` event."},"functionSelector":"66a9c7d2","id":1725,"implemented":false,"kind":"function","modifiers":[],"name":"registerTokens","nameLocation":"13120:14:14","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"poolId","nameLocation":"13152:6:14","nodeType":"VariableDeclaration","scope":1725,"src":"13144:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13144:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1719,"mutability":"mutable","name":"tokens","nameLocation":"13184:6:14","nodeType":"VariableDeclaration","scope":1725,"src":"13168:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1717,"nodeType":"UserDefinedTypeName","pathNode":{"id":1716,"name":"IERC20","nameLocations":["13168:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"13168:6:14"},"referencedDeclaration":1440,"src":"13168:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":1718,"nodeType":"ArrayTypeName","src":"13168:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"assetManagers","nameLocation":"13217:13:14","nodeType":"VariableDeclaration","scope":1725,"src":"13200:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"13200:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1721,"nodeType":"ArrayTypeName","src":"13200:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13134:102:14"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"13245:0:14"},"scope":2066,"src":"13111:135:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"13252:89:14","text":" @dev Emitted when a Pool registers tokens by calling `registerTokens`."},"eventSelector":"f5847d3f2197b16cdcd2098ec95d0905cd1abdaf415f07bb7cef2bba8ac5dec4","id":1737,"name":"TokensRegistered","nameLocation":"13352:16:14","nodeType":"EventDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"13385:6:14","nodeType":"VariableDeclaration","scope":1737,"src":"13369:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13369:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1732,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"13402:6:14","nodeType":"VariableDeclaration","scope":1737,"src":"13393:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1730,"nodeType":"UserDefinedTypeName","pathNode":{"id":1729,"name":"IERC20","nameLocations":["13393:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"13393:6:14"},"referencedDeclaration":1440,"src":"13393:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":1731,"nodeType":"ArrayTypeName","src":"13393:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1735,"indexed":false,"mutability":"mutable","name":"assetManagers","nameLocation":"13420:13:14","nodeType":"VariableDeclaration","scope":1737,"src":"13410:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"13410:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1734,"nodeType":"ArrayTypeName","src":"13410:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13368:66:14"},"src":"13346:89:14"},{"documentation":{"id":1738,"nodeType":"StructuredDocumentation","src":"13441:567:14","text":" @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n must be deregistered in the same `deregisterTokens` call.\n A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n Emits a `TokensDeregistered` event."},"functionSelector":"7d3aeb96","id":1747,"implemented":false,"kind":"function","modifiers":[],"name":"deregisterTokens","nameLocation":"14022:16:14","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"poolId","nameLocation":"14047:6:14","nodeType":"VariableDeclaration","scope":1747,"src":"14039:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14039:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"tokens","nameLocation":"14071:6:14","nodeType":"VariableDeclaration","scope":1747,"src":"14055:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1742,"nodeType":"UserDefinedTypeName","pathNode":{"id":1741,"name":"IERC20","nameLocations":["14055:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"14055:6:14"},"referencedDeclaration":1440,"src":"14055:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":1743,"nodeType":"ArrayTypeName","src":"14055:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"14038:40:14"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[],"src":"14087:0:14"},"scope":2066,"src":"14013:75:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"14094:93:14","text":" @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`."},"eventSelector":"7dcdc6d02ef40c7c1a7046a011b058bd7f988fa14e20a66344f9d4e60657d610","id":1756,"name":"TokensDeregistered","nameLocation":"14198:18:14","nodeType":"EventDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"14233:6:14","nodeType":"VariableDeclaration","scope":1756,"src":"14217:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14217:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1754,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"14250:6:14","nodeType":"VariableDeclaration","scope":1756,"src":"14241:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1752,"nodeType":"UserDefinedTypeName","pathNode":{"id":1751,"name":"IERC20","nameLocations":["14241:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"14241:6:14"},"referencedDeclaration":1440,"src":"14241:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":1753,"nodeType":"ArrayTypeName","src":"14241:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"14216:41:14"},"src":"14192:66:14"},{"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"14264:1043:14","text":" @dev Returns detailed information for a Pool's registered token.\n `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n equals the sum of `cash` and `managed`.\n Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n `managed` or `total` balance to be greater than 2^112 - 1.\n `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n change for this purpose, and will update `lastChangeBlock`.\n `assetManager` is the Pool's token Asset Manager."},"functionSelector":"b05f8e48","id":1773,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokenInfo","nameLocation":"15321:16:14","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"poolId","nameLocation":"15346:6:14","nodeType":"VariableDeclaration","scope":1773,"src":"15338:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15338:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"token","nameLocation":"15361:5:14","nodeType":"VariableDeclaration","scope":1773,"src":"15354:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"},"typeName":{"id":1761,"nodeType":"UserDefinedTypeName","pathNode":{"id":1760,"name":"IERC20","nameLocations":["15354:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"15354:6:14"},"referencedDeclaration":1440,"src":"15354:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"15337:30:14"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"cash","nameLocation":"15436:4:14","nodeType":"VariableDeclaration","scope":1773,"src":"15428:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"15428:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1767,"mutability":"mutable","name":"managed","nameLocation":"15462:7:14","nodeType":"VariableDeclaration","scope":1773,"src":"15454:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"15454:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1769,"mutability":"mutable","name":"lastChangeBlock","nameLocation":"15491:15:14","nodeType":"VariableDeclaration","scope":1773,"src":"15483:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"15483:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"assetManager","nameLocation":"15528:12:14","nodeType":"VariableDeclaration","scope":1773,"src":"15520:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"15520:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15414:136:14"},"scope":2066,"src":"15312:239:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"15557:828:14","text":" @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n the tokens' `balances` changed.\n The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n order as passed to `registerTokens`.\n Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n instead."},"functionSelector":"f94d4668","id":1788,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokens","nameLocation":"16399:13:14","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"poolId","nameLocation":"16421:6:14","nodeType":"VariableDeclaration","scope":1788,"src":"16413:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16413:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16412:16:14"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"tokens","nameLocation":"16505:6:14","nodeType":"VariableDeclaration","scope":1788,"src":"16489:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1779,"nodeType":"UserDefinedTypeName","pathNode":{"id":1778,"name":"IERC20","nameLocations":["16489:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"16489:6:14"},"referencedDeclaration":1440,"src":"16489:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":1780,"nodeType":"ArrayTypeName","src":"16489:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"balances","nameLocation":"16542:8:14","nodeType":"VariableDeclaration","scope":1788,"src":"16525:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"16525:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1783,"nodeType":"ArrayTypeName","src":"16525:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"lastChangeBlock","nameLocation":"16572:15:14","nodeType":"VariableDeclaration","scope":1788,"src":"16564:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"16564:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16475:122:14"},"scope":2066,"src":"16390:208:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"16604:2304:14","text":" @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n Pool shares.\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n these maximums.\n If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n back to the caller (not the sender, which is important for relayers).\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n withdrawn from Internal Balance: attempting to do so will trigger a revert.\n This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n directly to the Pool's contract, as is `recipient`.\n Emits a `PoolBalanceChanged` event."},"functionSelector":"b95cac28","id":1801,"implemented":false,"kind":"function","modifiers":[],"name":"joinPool","nameLocation":"18922:8:14","nodeType":"FunctionDefinition","parameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"poolId","nameLocation":"18948:6:14","nodeType":"VariableDeclaration","scope":1801,"src":"18940:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18940:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"sender","nameLocation":"18972:6:14","nodeType":"VariableDeclaration","scope":1801,"src":"18964:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"18964:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1795,"mutability":"mutable","name":"recipient","nameLocation":"18996:9:14","nodeType":"VariableDeclaration","scope":1801,"src":"18988:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"18988:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"request","nameLocation":"19038:7:14","nodeType":"VariableDeclaration","scope":1801,"src":"19015:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$1813_memory_ptr","typeString":"struct IVault.JoinPoolRequest"},"typeName":{"id":1797,"nodeType":"UserDefinedTypeName","pathNode":{"id":1796,"name":"JoinPoolRequest","nameLocations":["19015:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":1813,"src":"19015:15:14"},"referencedDeclaration":1813,"src":"19015:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$1813_storage_ptr","typeString":"struct IVault.JoinPoolRequest"}},"visibility":"internal"}],"src":"18930:121:14"},"returnParameters":{"id":1800,"nodeType":"ParameterList","parameters":[],"src":"19068:0:14"},"scope":2066,"src":"18913:156:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.JoinPoolRequest","id":1813,"members":[{"constant":false,"id":1805,"mutability":"mutable","name":"assets","nameLocation":"19117:6:14","nodeType":"VariableDeclaration","scope":1813,"src":"19108:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$1444_$dyn_storage_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":1803,"nodeType":"UserDefinedTypeName","pathNode":{"id":1802,"name":"IAsset","nameLocations":["19108:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1444,"src":"19108:6:14"},"referencedDeclaration":1444,"src":"19108:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"}},"id":1804,"nodeType":"ArrayTypeName","src":"19108:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$1444_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"19143:12:14","nodeType":"VariableDeclaration","scope":1813,"src":"19133:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"19133:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1807,"nodeType":"ArrayTypeName","src":"19133:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"userData","nameLocation":"19171:8:14","nodeType":"VariableDeclaration","scope":1813,"src":"19165:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1809,"name":"bytes","nodeType":"ElementaryTypeName","src":"19165:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1812,"mutability":"mutable","name":"fromInternalBalance","nameLocation":"19194:19:14","nodeType":"VariableDeclaration","scope":1813,"src":"19189:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1811,"name":"bool","nodeType":"ElementaryTypeName","src":"19189:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"JoinPoolRequest","nameLocation":"19082:15:14","nodeType":"StructDefinition","scope":2066,"src":"19075:145:14","visibility":"public"},{"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"19226:2489:14","text":" @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n `getPoolTokenInfo`).\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n it just enforces these minimums.\n If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n do so will trigger a revert.\n `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n `tokens` array. This array must match the Pool's registered tokens.\n This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n passed directly to the Pool's contract.\n Emits a `PoolBalanceChanged` event."},"functionSelector":"8bdb3913","id":1826,"implemented":false,"kind":"function","modifiers":[],"name":"exitPool","nameLocation":"21729:8:14","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"poolId","nameLocation":"21755:6:14","nodeType":"VariableDeclaration","scope":1826,"src":"21747:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21747:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"sender","nameLocation":"21779:6:14","nodeType":"VariableDeclaration","scope":1826,"src":"21771:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1817,"name":"address","nodeType":"ElementaryTypeName","src":"21771:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1820,"mutability":"mutable","name":"recipient","nameLocation":"21811:9:14","nodeType":"VariableDeclaration","scope":1826,"src":"21795:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"21795:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"request","nameLocation":"21853:7:14","nodeType":"VariableDeclaration","scope":1826,"src":"21830:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExitPoolRequest_$1838_memory_ptr","typeString":"struct IVault.ExitPoolRequest"},"typeName":{"id":1822,"nodeType":"UserDefinedTypeName","pathNode":{"id":1821,"name":"ExitPoolRequest","nameLocations":["21830:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":1838,"src":"21830:15:14"},"referencedDeclaration":1838,"src":"21830:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_ExitPoolRequest_$1838_storage_ptr","typeString":"struct IVault.ExitPoolRequest"}},"visibility":"internal"}],"src":"21737:129:14"},"returnParameters":{"id":1825,"nodeType":"ParameterList","parameters":[],"src":"21875:0:14"},"scope":2066,"src":"21720:156:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.ExitPoolRequest","id":1838,"members":[{"constant":false,"id":1830,"mutability":"mutable","name":"assets","nameLocation":"21924:6:14","nodeType":"VariableDeclaration","scope":1838,"src":"21915:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$1444_$dyn_storage_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":1828,"nodeType":"UserDefinedTypeName","pathNode":{"id":1827,"name":"IAsset","nameLocations":["21915:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1444,"src":"21915:6:14"},"referencedDeclaration":1444,"src":"21915:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"}},"id":1829,"nodeType":"ArrayTypeName","src":"21915:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$1444_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":1833,"mutability":"mutable","name":"minAmountsOut","nameLocation":"21950:13:14","nodeType":"VariableDeclaration","scope":1838,"src":"21940:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"21940:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1832,"nodeType":"ArrayTypeName","src":"21940:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1835,"mutability":"mutable","name":"userData","nameLocation":"21979:8:14","nodeType":"VariableDeclaration","scope":1838,"src":"21973:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1834,"name":"bytes","nodeType":"ElementaryTypeName","src":"21973:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1837,"mutability":"mutable","name":"toInternalBalance","nameLocation":"22002:17:14","nodeType":"VariableDeclaration","scope":1838,"src":"21997:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1836,"name":"bool","nodeType":"ElementaryTypeName","src":"21997:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExitPoolRequest","nameLocation":"21889:15:14","nodeType":"StructDefinition","scope":2066,"src":"21882:144:14","visibility":"public"},{"anonymous":false,"documentation":{"id":1839,"nodeType":"StructuredDocumentation","src":"22032:116:14","text":" @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively."},"eventSelector":"e5ce249087ce04f05a957192435400fd97868dba0e6a4b4c049abf8af80dae78","id":1855,"name":"PoolBalanceChanged","nameLocation":"22159:18:14","nodeType":"EventDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"22203:6:14","nodeType":"VariableDeclaration","scope":1855,"src":"22187:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22187:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1843,"indexed":true,"mutability":"mutable","name":"liquidityProvider","nameLocation":"22235:17:14","nodeType":"VariableDeclaration","scope":1855,"src":"22219:33:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1842,"name":"address","nodeType":"ElementaryTypeName","src":"22219:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1847,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"22271:6:14","nodeType":"VariableDeclaration","scope":1855,"src":"22262:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1845,"nodeType":"UserDefinedTypeName","pathNode":{"id":1844,"name":"IERC20","nameLocations":["22262:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"22262:6:14"},"referencedDeclaration":1440,"src":"22262:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":1846,"nodeType":"ArrayTypeName","src":"22262:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1850,"indexed":false,"mutability":"mutable","name":"deltas","nameLocation":"22296:6:14","nodeType":"VariableDeclaration","scope":1855,"src":"22287:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":1848,"name":"int256","nodeType":"ElementaryTypeName","src":"22287:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1849,"nodeType":"ArrayTypeName","src":"22287:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":1853,"indexed":false,"mutability":"mutable","name":"protocolFeeAmounts","nameLocation":"22322:18:14","nodeType":"VariableDeclaration","scope":1855,"src":"22312:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"22312:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"nodeType":"ArrayTypeName","src":"22312:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22177:169:14"},"src":"22153:194:14"},{"canonicalName":"IVault.PoolBalanceChangeKind","id":1858,"members":[{"id":1856,"name":"JOIN","nameLocation":"22382:4:14","nodeType":"EnumValue","src":"22382:4:14"},{"id":1857,"name":"EXIT","nameLocation":"22388:4:14","nodeType":"EnumValue","src":"22388:4:14"}],"name":"PoolBalanceChangeKind","nameLocation":"22358:21:14","nodeType":"EnumDefinition","src":"22353:41:14"},{"canonicalName":"IVault.SwapKind","id":1861,"members":[{"id":1859,"name":"GIVEN_IN","nameLocation":"25995:8:14","nodeType":"EnumValue","src":"25995:8:14"},{"id":1860,"name":"GIVEN_OUT","nameLocation":"26005:9:14","nodeType":"EnumValue","src":"26005:9:14"}],"name":"SwapKind","nameLocation":"25984:8:14","nodeType":"EnumDefinition","src":"25979:37:14"},{"documentation":{"id":1862,"nodeType":"StructuredDocumentation","src":"26022:587:14","text":" @dev Performs a swap with a single Pool.\n If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n taken from the Pool, which must be greater than or equal to `limit`.\n If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n sent to the Pool, which must be less than or equal to `limit`.\n Internal Balance usage and the recipient are determined by the `funds` struct.\n Emits a `Swap` event."},"functionSelector":"52bbbe29","id":1877,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"26623:4:14","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"singleSwap","nameLocation":"26655:10:14","nodeType":"VariableDeclaration","scope":1877,"src":"26637:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$1894_memory_ptr","typeString":"struct IVault.SingleSwap"},"typeName":{"id":1864,"nodeType":"UserDefinedTypeName","pathNode":{"id":1863,"name":"SingleSwap","nameLocations":["26637:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1894,"src":"26637:10:14"},"referencedDeclaration":1894,"src":"26637:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$1894_storage_ptr","typeString":"struct IVault.SingleSwap"}},"visibility":"internal"},{"constant":false,"id":1868,"mutability":"mutable","name":"funds","nameLocation":"26697:5:14","nodeType":"VariableDeclaration","scope":1877,"src":"26675:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":1867,"nodeType":"UserDefinedTypeName","pathNode":{"id":1866,"name":"FundManagement","nameLocations":["26675:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"26675:14:14"},"referencedDeclaration":1957,"src":"26675:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":1870,"mutability":"mutable","name":"limit","nameLocation":"26720:5:14","nodeType":"VariableDeclaration","scope":1877,"src":"26712:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"26712:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"deadline","nameLocation":"26743:8:14","nodeType":"VariableDeclaration","scope":1877,"src":"26735:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"26735:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26627:130:14"},"returnParameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1877,"src":"26784:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"26784:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26783:9:14"},"scope":2066,"src":"26614:179:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.SingleSwap","documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"26799:545:14","text":" @dev Data for a single swap executed by `swap`. `amount` is either `amountIn` or `amountOut` depending on\n the `kind` value.\n `assetIn` and `assetOut` are either token addresses, or the IAsset sentinel value for ETH (the zero address).\n Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault.\n The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n used to extend swap behavior."},"id":1894,"members":[{"constant":false,"id":1880,"mutability":"mutable","name":"poolId","nameLocation":"27385:6:14","nodeType":"VariableDeclaration","scope":1894,"src":"27377:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27377:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"kind","nameLocation":"27410:4:14","nodeType":"VariableDeclaration","scope":1894,"src":"27401:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1861","typeString":"enum IVault.SwapKind"},"typeName":{"id":1882,"nodeType":"UserDefinedTypeName","pathNode":{"id":1881,"name":"SwapKind","nameLocations":["27401:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":1861,"src":"27401:8:14"},"referencedDeclaration":1861,"src":"27401:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1861","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"assetIn","nameLocation":"27431:7:14","nodeType":"VariableDeclaration","scope":1894,"src":"27424:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"},"typeName":{"id":1885,"nodeType":"UserDefinedTypeName","pathNode":{"id":1884,"name":"IAsset","nameLocations":["27424:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1444,"src":"27424:6:14"},"referencedDeclaration":1444,"src":"27424:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"assetOut","nameLocation":"27455:8:14","nodeType":"VariableDeclaration","scope":1894,"src":"27448:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"},"typeName":{"id":1888,"nodeType":"UserDefinedTypeName","pathNode":{"id":1887,"name":"IAsset","nameLocations":["27448:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1444,"src":"27448:6:14"},"referencedDeclaration":1444,"src":"27448:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"amount","nameLocation":"27481:6:14","nodeType":"VariableDeclaration","scope":1894,"src":"27473:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"27473:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"userData","nameLocation":"27503:8:14","nodeType":"VariableDeclaration","scope":1894,"src":"27497:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1892,"name":"bytes","nodeType":"ElementaryTypeName","src":"27497:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SingleSwap","nameLocation":"27356:10:14","nodeType":"StructDefinition","scope":2066,"src":"27349:169:14","visibility":"public"},{"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"27524:1980:14","text":" @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n the same index in the `assets` array.\n Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n `amountOut` depending on the swap kind.\n Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n or unwrapped from WETH by the Vault.\n Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n the minimum or maximum amount of each token the vault is allowed to transfer.\n `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n equivalent `swap` call.\n Emits `Swap` events."},"functionSelector":"945bcec9","id":1920,"implemented":false,"kind":"function","modifiers":[],"name":"batchSwap","nameLocation":"29518:9:14","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"kind","nameLocation":"29546:4:14","nodeType":"VariableDeclaration","scope":1920,"src":"29537:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1861","typeString":"enum IVault.SwapKind"},"typeName":{"id":1897,"nodeType":"UserDefinedTypeName","pathNode":{"id":1896,"name":"SwapKind","nameLocations":["29537:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":1861,"src":"29537:8:14"},"referencedDeclaration":1861,"src":"29537:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1861","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"swaps","nameLocation":"29583:5:14","nodeType":"VariableDeclaration","scope":1920,"src":"29560:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$1932_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.BatchSwapStep[]"},"typeName":{"baseType":{"id":1900,"nodeType":"UserDefinedTypeName","pathNode":{"id":1899,"name":"BatchSwapStep","nameLocations":["29560:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1932,"src":"29560:13:14"},"referencedDeclaration":1932,"src":"29560:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$1932_storage_ptr","typeString":"struct IVault.BatchSwapStep"}},"id":1901,"nodeType":"ArrayTypeName","src":"29560:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$1932_storage_$dyn_storage_ptr","typeString":"struct IVault.BatchSwapStep[]"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"assets","nameLocation":"29614:6:14","nodeType":"VariableDeclaration","scope":1920,"src":"29598:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$1444_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":1904,"nodeType":"UserDefinedTypeName","pathNode":{"id":1903,"name":"IAsset","nameLocations":["29598:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1444,"src":"29598:6:14"},"referencedDeclaration":1444,"src":"29598:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"}},"id":1905,"nodeType":"ArrayTypeName","src":"29598:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$1444_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"funds","nameLocation":"29652:5:14","nodeType":"VariableDeclaration","scope":1920,"src":"29630:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":1908,"nodeType":"UserDefinedTypeName","pathNode":{"id":1907,"name":"FundManagement","nameLocations":["29630:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"29630:14:14"},"referencedDeclaration":1957,"src":"29630:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":1912,"mutability":"mutable","name":"limits","nameLocation":"29683:6:14","nodeType":"VariableDeclaration","scope":1920,"src":"29667:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":1910,"name":"int256","nodeType":"ElementaryTypeName","src":"29667:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1911,"nodeType":"ArrayTypeName","src":"29667:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"deadline","nameLocation":"29707:8:14","nodeType":"VariableDeclaration","scope":1920,"src":"29699:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"29699:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29527:194:14"},"returnParameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1920,"src":"29748:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":1916,"name":"int256","nodeType":"ElementaryTypeName","src":"29748:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1917,"nodeType":"ArrayTypeName","src":"29748:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"29747:17:14"},"scope":2066,"src":"29509:256:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.BatchSwapStep","documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"29771:551:14","text":" @dev Data for each individual swap executed by `batchSwap`. The asset in and out fields are indexes into the\n `assets` array passed to that function, and ETH assets are converted to WETH.\n If `amount` is zero, the multihop mechanism is used to determine the actual amount based on the amount in/out\n from the previous swap, depending on the swap kind.\n The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n used to extend swap behavior."},"id":1932,"members":[{"constant":false,"id":1923,"mutability":"mutable","name":"poolId","nameLocation":"30366:6:14","nodeType":"VariableDeclaration","scope":1932,"src":"30358:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30358:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"assetInIndex","nameLocation":"30390:12:14","nodeType":"VariableDeclaration","scope":1932,"src":"30382:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"30382:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"assetOutIndex","nameLocation":"30420:13:14","nodeType":"VariableDeclaration","scope":1932,"src":"30412:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1926,"name":"uint256","nodeType":"ElementaryTypeName","src":"30412:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"amount","nameLocation":"30451:6:14","nodeType":"VariableDeclaration","scope":1932,"src":"30443:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"30443:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"userData","nameLocation":"30473:8:14","nodeType":"VariableDeclaration","scope":1932,"src":"30467:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1930,"name":"bytes","nodeType":"ElementaryTypeName","src":"30467:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BatchSwapStep","nameLocation":"30334:13:14","nodeType":"StructDefinition","scope":2066,"src":"30327:161:14","visibility":"public"},{"anonymous":false,"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"30494:92:14","text":" @dev Emitted for each individual swap performed by `swap` or `batchSwap`."},"eventSelector":"2170c741c41531aec20e7c107c24eecfdd15e69c9bb0a8dd37b1840b9e0b207b","id":1947,"name":"Swap","nameLocation":"30597:4:14","nodeType":"EventDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"30627:6:14","nodeType":"VariableDeclaration","scope":1947,"src":"30611:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30611:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1938,"indexed":true,"mutability":"mutable","name":"tokenIn","nameLocation":"30658:7:14","nodeType":"VariableDeclaration","scope":1947,"src":"30643:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"},"typeName":{"id":1937,"nodeType":"UserDefinedTypeName","pathNode":{"id":1936,"name":"IERC20","nameLocations":["30643:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"30643:6:14"},"referencedDeclaration":1440,"src":"30643:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1941,"indexed":true,"mutability":"mutable","name":"tokenOut","nameLocation":"30690:8:14","nodeType":"VariableDeclaration","scope":1947,"src":"30675:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"},"typeName":{"id":1940,"nodeType":"UserDefinedTypeName","pathNode":{"id":1939,"name":"IERC20","nameLocations":["30675:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"30675:6:14"},"referencedDeclaration":1440,"src":"30675:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1943,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"30716:8:14","nodeType":"VariableDeclaration","scope":1947,"src":"30708:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"30708:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1945,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"30742:9:14","nodeType":"VariableDeclaration","scope":1947,"src":"30734:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"30734:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30601:156:14"},"src":"30591:167:14"},{"canonicalName":"IVault.FundManagement","documentation":{"id":1948,"nodeType":"StructuredDocumentation","src":"30764:920:14","text":" @dev All tokens in a swap are either sent from the `sender` account to the Vault, or from the Vault to the\n `recipient` account.\n If the caller is not `sender`, it must be an authorized relayer for them.\n If `fromInternalBalance` is true, the `sender`'s Internal Balance will be preferred, performing an ERC20\n transfer for the difference between the requested amount and the User's Internal Balance (if any). The `sender`\n must have allowed the Vault to use their tokens via `IERC20.approve()`. This matches the behavior of\n `joinPool`.\n If `toInternalBalance` is true, tokens will be deposited to `recipient`'s internal balance instead of\n transferred. This matches the behavior of `exitPool`.\n Note that ETH cannot be deposited to or withdrawn from Internal Balance: attempting to do so will trigger a\n revert."},"id":1957,"members":[{"constant":false,"id":1950,"mutability":"mutable","name":"sender","nameLocation":"31729:6:14","nodeType":"VariableDeclaration","scope":1957,"src":"31721:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"31721:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1952,"mutability":"mutable","name":"fromInternalBalance","nameLocation":"31750:19:14","nodeType":"VariableDeclaration","scope":1957,"src":"31745:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1951,"name":"bool","nodeType":"ElementaryTypeName","src":"31745:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"recipient","nameLocation":"31795:9:14","nodeType":"VariableDeclaration","scope":1957,"src":"31779:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1953,"name":"address","nodeType":"ElementaryTypeName","src":"31779:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1956,"mutability":"mutable","name":"toInternalBalance","nameLocation":"31819:17:14","nodeType":"VariableDeclaration","scope":1957,"src":"31814:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1955,"name":"bool","nodeType":"ElementaryTypeName","src":"31814:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FundManagement","nameLocation":"31696:14:14","nodeType":"StructDefinition","scope":2066,"src":"31689:154:14","visibility":"public"},{"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"31849:1027:14","text":" @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n receives are the same that an equivalent `batchSwap` call would receive.\n Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n approve them for the Vault, or even know a user's address.\n Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n eth_call instead of eth_sendTransaction."},"functionSelector":"f84d066e","id":1978,"implemented":false,"kind":"function","modifiers":[],"name":"queryBatchSwap","nameLocation":"32890:14:14","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"kind","nameLocation":"32923:4:14","nodeType":"VariableDeclaration","scope":1978,"src":"32914:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1861","typeString":"enum IVault.SwapKind"},"typeName":{"id":1960,"nodeType":"UserDefinedTypeName","pathNode":{"id":1959,"name":"SwapKind","nameLocations":["32914:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":1861,"src":"32914:8:14"},"referencedDeclaration":1861,"src":"32914:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1861","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"swaps","nameLocation":"32960:5:14","nodeType":"VariableDeclaration","scope":1978,"src":"32937:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$1932_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.BatchSwapStep[]"},"typeName":{"baseType":{"id":1963,"nodeType":"UserDefinedTypeName","pathNode":{"id":1962,"name":"BatchSwapStep","nameLocations":["32937:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1932,"src":"32937:13:14"},"referencedDeclaration":1932,"src":"32937:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$1932_storage_ptr","typeString":"struct IVault.BatchSwapStep"}},"id":1964,"nodeType":"ArrayTypeName","src":"32937:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$1932_storage_$dyn_storage_ptr","typeString":"struct IVault.BatchSwapStep[]"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"assets","nameLocation":"32991:6:14","nodeType":"VariableDeclaration","scope":1978,"src":"32975:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$1444_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":1967,"nodeType":"UserDefinedTypeName","pathNode":{"id":1966,"name":"IAsset","nameLocations":["32975:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1444,"src":"32975:6:14"},"referencedDeclaration":1444,"src":"32975:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"}},"id":1968,"nodeType":"ArrayTypeName","src":"32975:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$1444_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"funds","nameLocation":"33029:5:14","nodeType":"VariableDeclaration","scope":1978,"src":"33007:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":1971,"nodeType":"UserDefinedTypeName","pathNode":{"id":1970,"name":"FundManagement","nameLocations":["33007:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"33007:14:14"},"referencedDeclaration":1957,"src":"33007:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"}],"src":"32904:136:14"},"returnParameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"assetDeltas","nameLocation":"33075:11:14","nodeType":"VariableDeclaration","scope":1978,"src":"33059:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":1974,"name":"int256","nodeType":"ElementaryTypeName","src":"33059:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1975,"nodeType":"ArrayTypeName","src":"33059:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"33058:29:14"},"scope":2066,"src":"32881:207:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1979,"nodeType":"StructuredDocumentation","src":"33114:604:14","text":" @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n and then reverting unless the tokens plus a proportional protocol fee have been returned.\n The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n for each token contract. `tokens` must be sorted in ascending order.\n The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n `receiveFlashLoan` call.\n Emits `FlashLoan` events."},"functionSelector":"5c38449e","id":1994,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"33732:9:14","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"recipient","nameLocation":"33771:9:14","nodeType":"VariableDeclaration","scope":1994,"src":"33751:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$1479","typeString":"contract IFlashLoanRecipient"},"typeName":{"id":1981,"nodeType":"UserDefinedTypeName","pathNode":{"id":1980,"name":"IFlashLoanRecipient","nameLocations":["33751:19:14"],"nodeType":"IdentifierPath","referencedDeclaration":1479,"src":"33751:19:14"},"referencedDeclaration":1479,"src":"33751:19:14","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$1479","typeString":"contract IFlashLoanRecipient"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"tokens","nameLocation":"33806:6:14","nodeType":"VariableDeclaration","scope":1994,"src":"33790:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1984,"nodeType":"UserDefinedTypeName","pathNode":{"id":1983,"name":"IERC20","nameLocations":["33790:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"33790:6:14"},"referencedDeclaration":1440,"src":"33790:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":1985,"nodeType":"ArrayTypeName","src":"33790:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"amounts","nameLocation":"33839:7:14","nodeType":"VariableDeclaration","scope":1994,"src":"33822:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"33822:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1988,"nodeType":"ArrayTypeName","src":"33822:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"userData","nameLocation":"33869:8:14","nodeType":"VariableDeclaration","scope":1994,"src":"33856:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1990,"name":"bytes","nodeType":"ElementaryTypeName","src":"33856:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33741:142:14"},"returnParameters":{"id":1993,"nodeType":"ParameterList","parameters":[],"src":"33892:0:14"},"scope":2066,"src":"33723:170:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"33899:88:14","text":" @dev Emitted for each individual flash loan performed by `flashLoan`."},"eventSelector":"0d7d75e01ab95780d3cd1c8ec0dd6c2ce19e3a20427eec8bf53283b6fb8e95f0","id":2007,"name":"FlashLoan","nameLocation":"33998:9:14","nodeType":"EventDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"34036:9:14","nodeType":"VariableDeclaration","scope":2007,"src":"34008:37:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$1479","typeString":"contract IFlashLoanRecipient"},"typeName":{"id":1997,"nodeType":"UserDefinedTypeName","pathNode":{"id":1996,"name":"IFlashLoanRecipient","nameLocations":["34008:19:14"],"nodeType":"IdentifierPath","referencedDeclaration":1479,"src":"34008:19:14"},"referencedDeclaration":1479,"src":"34008:19:14","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$1479","typeString":"contract IFlashLoanRecipient"}},"visibility":"internal"},{"constant":false,"id":2001,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"34062:5:14","nodeType":"VariableDeclaration","scope":2007,"src":"34047:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"},"typeName":{"id":2000,"nodeType":"UserDefinedTypeName","pathNode":{"id":1999,"name":"IERC20","nameLocations":["34047:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"34047:6:14"},"referencedDeclaration":1440,"src":"34047:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2003,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"34077:6:14","nodeType":"VariableDeclaration","scope":2007,"src":"34069:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"34069:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2005,"indexed":false,"mutability":"mutable","name":"feeAmount","nameLocation":"34093:9:14","nodeType":"VariableDeclaration","scope":2007,"src":"34085:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2004,"name":"uint256","nodeType":"ElementaryTypeName","src":"34085:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34007:96:14"},"src":"33992:112:14"},{"documentation":{"id":2008,"nodeType":"StructuredDocumentation","src":"35100:434:14","text":" @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n Pool Balance management features batching, which means a single contract call can be used to perform multiple\n operations of different kinds, with different Pools and tokens, at once.\n For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."},"functionSelector":"e6c46092","id":2015,"implemented":false,"kind":"function","modifiers":[],"name":"managePoolBalance","nameLocation":"35548:17:14","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"ops","nameLocation":"35589:3:14","nodeType":"VariableDeclaration","scope":2015,"src":"35566:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolBalanceOp_$2026_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.PoolBalanceOp[]"},"typeName":{"baseType":{"id":2010,"nodeType":"UserDefinedTypeName","pathNode":{"id":2009,"name":"PoolBalanceOp","nameLocations":["35566:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":2026,"src":"35566:13:14"},"referencedDeclaration":2026,"src":"35566:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_PoolBalanceOp_$2026_storage_ptr","typeString":"struct IVault.PoolBalanceOp"}},"id":2011,"nodeType":"ArrayTypeName","src":"35566:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolBalanceOp_$2026_storage_$dyn_storage_ptr","typeString":"struct IVault.PoolBalanceOp[]"}},"visibility":"internal"}],"src":"35565:28:14"},"returnParameters":{"id":2014,"nodeType":"ParameterList","parameters":[],"src":"35602:0:14"},"scope":2066,"src":"35539:64:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.PoolBalanceOp","id":2026,"members":[{"constant":false,"id":2018,"mutability":"mutable","name":"kind","nameLocation":"35658:4:14","nodeType":"VariableDeclaration","scope":2026,"src":"35640:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolBalanceOpKind_$2031","typeString":"enum IVault.PoolBalanceOpKind"},"typeName":{"id":2017,"nodeType":"UserDefinedTypeName","pathNode":{"id":2016,"name":"PoolBalanceOpKind","nameLocations":["35640:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":2031,"src":"35640:17:14"},"referencedDeclaration":2031,"src":"35640:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_PoolBalanceOpKind_$2031","typeString":"enum IVault.PoolBalanceOpKind"}},"visibility":"internal"},{"constant":false,"id":2020,"mutability":"mutable","name":"poolId","nameLocation":"35680:6:14","nodeType":"VariableDeclaration","scope":2026,"src":"35672:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35672:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2023,"mutability":"mutable","name":"token","nameLocation":"35703:5:14","nodeType":"VariableDeclaration","scope":2026,"src":"35696:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"},"typeName":{"id":2022,"nodeType":"UserDefinedTypeName","pathNode":{"id":2021,"name":"IERC20","nameLocations":["35696:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"35696:6:14"},"referencedDeclaration":1440,"src":"35696:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"amount","nameLocation":"35726:6:14","nodeType":"VariableDeclaration","scope":2026,"src":"35718:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"35718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolBalanceOp","nameLocation":"35616:13:14","nodeType":"StructDefinition","scope":2066,"src":"35609:130:14","visibility":"public"},{"canonicalName":"IVault.PoolBalanceOpKind","documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"35745:486:14","text":" Withdrawals decrease the Pool's cash, but increase its managed balance, leaving the total balance unchanged.\n Deposits increase the Pool's cash, but decrease its managed balance, leaving the total balance unchanged.\n Updates don't affect the Pool's cash balance, but because the managed balance changes, it does alter the total.\n The external amount can be either increased or decreased by this call (i.e., reporting a gain or a loss)."},"id":2031,"members":[{"id":2028,"name":"WITHDRAW","nameLocation":"36261:8:14","nodeType":"EnumValue","src":"36261:8:14"},{"id":2029,"name":"DEPOSIT","nameLocation":"36271:7:14","nodeType":"EnumValue","src":"36271:7:14"},{"id":2030,"name":"UPDATE","nameLocation":"36280:6:14","nodeType":"EnumValue","src":"36280:6:14"}],"name":"PoolBalanceOpKind","nameLocation":"36241:17:14","nodeType":"EnumDefinition","src":"36236:52:14"},{"anonymous":false,"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"36294:109:14","text":" @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`."},"eventSelector":"6edcaf6241105b4c94c2efdbf3a6b12458eb3d07be3a0e81d24b13c44045fe7a","id":2045,"name":"PoolBalanceManaged","nameLocation":"36414:18:14","nodeType":"EventDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"36458:6:14","nodeType":"VariableDeclaration","scope":2045,"src":"36442:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36442:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2036,"indexed":true,"mutability":"mutable","name":"assetManager","nameLocation":"36490:12:14","nodeType":"VariableDeclaration","scope":2045,"src":"36474:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"36474:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2039,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"36527:5:14","nodeType":"VariableDeclaration","scope":2045,"src":"36512:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"},"typeName":{"id":2038,"nodeType":"UserDefinedTypeName","pathNode":{"id":2037,"name":"IERC20","nameLocations":["36512:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"36512:6:14"},"referencedDeclaration":1440,"src":"36512:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2041,"indexed":false,"mutability":"mutable","name":"cashDelta","nameLocation":"36549:9:14","nodeType":"VariableDeclaration","scope":2045,"src":"36542:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2040,"name":"int256","nodeType":"ElementaryTypeName","src":"36542:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2043,"indexed":false,"mutability":"mutable","name":"managedDelta","nameLocation":"36575:12:14","nodeType":"VariableDeclaration","scope":2045,"src":"36568:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2042,"name":"int256","nodeType":"ElementaryTypeName","src":"36568:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"36432:161:14"},"src":"36408:186:14"},{"documentation":{"id":2046,"nodeType":"StructuredDocumentation","src":"37471:64:14","text":" @dev Returns the current protocol fee module."},"functionSelector":"d2946c2b","id":2052,"implemented":false,"kind":"function","modifiers":[],"name":"getProtocolFeesCollector","nameLocation":"37549:24:14","nodeType":"FunctionDefinition","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[],"src":"37573:2:14"},"returnParameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2052,"src":"37599:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeesCollector_$1548","typeString":"contract IProtocolFeesCollector"},"typeName":{"id":2049,"nodeType":"UserDefinedTypeName","pathNode":{"id":2048,"name":"IProtocolFeesCollector","nameLocations":["37599:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":1548,"src":"37599:22:14"},"referencedDeclaration":1548,"src":"37599:22:14","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeesCollector_$1548","typeString":"contract IProtocolFeesCollector"}},"visibility":"internal"}],"src":"37598:24:14"},"scope":2066,"src":"37540:83:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"37629:635:14","text":" @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n error in some part of the system.\n The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n While the contract is paused, the following features are disabled:\n - depositing and transferring internal balance\n - transferring external balance (using the Vault's allowance)\n - swaps\n - joining Pools\n - Asset Manager interactions\n Internal Balance can still be withdrawn, and Pools exited."},"functionSelector":"16c38b3c","id":2058,"implemented":false,"kind":"function","modifiers":[],"name":"setPaused","nameLocation":"38278:9:14","nodeType":"FunctionDefinition","parameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"paused","nameLocation":"38293:6:14","nodeType":"VariableDeclaration","scope":2058,"src":"38288:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2054,"name":"bool","nodeType":"ElementaryTypeName","src":"38288:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38287:13:14"},"returnParameters":{"id":2057,"nodeType":"ParameterList","parameters":[],"src":"38309:0:14"},"scope":2066,"src":"38269:41:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"38316:58:14","text":" @dev Returns the Vault's WETH instance."},"functionSelector":"ad5c4648","id":2065,"implemented":false,"kind":"function","modifiers":[],"name":"WETH","nameLocation":"38388:4:14","nodeType":"FunctionDefinition","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[],"src":"38392:2:14"},"returnParameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"38418:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$1362","typeString":"contract IWETH"},"typeName":{"id":2062,"nodeType":"UserDefinedTypeName","pathNode":{"id":2061,"name":"IWETH","nameLocations":["38418:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"38418:5:14"},"referencedDeclaration":1362,"src":"38418:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$1362","typeString":"contract IWETH"}},"visibility":"internal"}],"src":"38417:7:14"},"scope":2066,"src":"38379:46:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2067,"src":"1329:37155:14","usedErrors":[],"usedEvents":[1336,1587,1616,1666,1678,1701,1737,1756,1855,1947,2007,2045]}],"src":"688:37797:14"},"id":14},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[4438],"Ownable":[2214]},"id":2215,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2068,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2070,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2215,"sourceUnit":4439,"src":"128:45:15","symbolAliases":[{"foreign":{"id":2069,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"136:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2072,"name":"Context","nameLocations":["692:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":4438,"src":"692:7:15"},"id":2073,"nodeType":"InheritanceSpecifier","src":"692:7:15"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"175:487:15","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":2214,"linearizedBaseContracts":[2214,4438],"name":"Ownable","nameLocation":"681:7:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2075,"mutability":"mutable","name":"_owner","nameLocation":"722:6:15","nodeType":"VariableDeclaration","scope":2214,"src":"706:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"735:85:15","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":2080,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:15","nodeType":"ErrorDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"account","nameLocation":"866:7:15","nodeType":"VariableDeclaration","scope":2080,"src":"858:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:15"},"src":"825:50:15"},{"documentation":{"id":2081,"nodeType":"StructuredDocumentation","src":"881:82:15","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":2085,"name":"OwnableInvalidOwner","nameLocation":"974:19:15","nodeType":"ErrorDefinition","parameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"owner","nameLocation":"1002:5:15","nodeType":"VariableDeclaration","scope":2085,"src":"994:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2082,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:15"},"src":"968:41:15"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":2091,"name":"OwnershipTransferred","nameLocation":"1021:20:15","nodeType":"EventDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:15","nodeType":"VariableDeclaration","scope":2091,"src":"1042:29:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2086,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2089,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:15","nodeType":"VariableDeclaration","scope":2091,"src":"1073:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2088,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:15"},"src":"1015:84:15"},{"body":{"id":2116,"nodeType":"Block","src":"1259:153:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2097,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"1273:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2098,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:15","typeDescriptions":{}}},"id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2111,"nodeType":"IfStatement","src":"1269:95:15","trueBody":{"id":2110,"nodeType":"Block","src":"1301:63:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2104,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:15","typeDescriptions":{}}},"id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2103,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"1322:19:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2109,"nodeType":"RevertStatement","src":"1315:38:15"}]}},{"expression":{"arguments":[{"id":2113,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"1392:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2112,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"1373:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2115,"nodeType":"ExpressionStatement","src":"1373:32:15"}]},"documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"1105:115:15","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":2117,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:15","nodeType":"VariableDeclaration","scope":2117,"src":"1237:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2093,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:15"},"returnParameters":{"id":2096,"nodeType":"ParameterList","parameters":[],"src":"1259:0:15"},"scope":2214,"src":"1225:187:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2124,"nodeType":"Block","src":"1521:41:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2120,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"1531:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2122,"nodeType":"ExpressionStatement","src":"1531:13:15"},{"id":2123,"nodeType":"PlaceholderStatement","src":"1554:1:15"}]},"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"1418:77:15","text":" @dev Throws if called by any account other than the owner."},"id":2125,"name":"onlyOwner","nameLocation":"1509:9:15","nodeType":"ModifierDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[],"src":"1518:2:15"},"src":"1500:62:15","virtual":false,"visibility":"internal"},{"body":{"id":2133,"nodeType":"Block","src":"1693:30:15","statements":[{"expression":{"id":2131,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"1710:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2130,"id":2132,"nodeType":"Return","src":"1703:13:15"}]},"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"1568:65:15","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":2134,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:15","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"1652:2:15"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2134,"src":"1684:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:15"},"scope":2214,"src":"1638:85:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2150,"nodeType":"Block","src":"1841:117:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2138,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"1855:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2140,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"1866:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2149,"nodeType":"IfStatement","src":"1851:101:15","trueBody":{"id":2148,"nodeType":"Block","src":"1880:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2144,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"1928:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2143,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"1901:26:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2147,"nodeType":"RevertStatement","src":"1894:47:15"}]}}]},"documentation":{"id":2135,"nodeType":"StructuredDocumentation","src":"1729:62:15","text":" @dev Throws if the sender is not the owner."},"id":2151,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:15","nodeType":"FunctionDefinition","parameters":{"id":2136,"nodeType":"ParameterList","parameters":[],"src":"1816:2:15"},"returnParameters":{"id":2137,"nodeType":"ParameterList","parameters":[],"src":"1841:0:15"},"scope":2214,"src":"1796:162:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2164,"nodeType":"Block","src":"2347:47:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2158,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:15","typeDescriptions":{}}},"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2157,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"2357:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2163,"nodeType":"ExpressionStatement","src":"2357:30:15"}]},"documentation":{"id":2152,"nodeType":"StructuredDocumentation","src":"1964:324:15","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":2165,"implemented":true,"kind":"function","modifiers":[{"id":2155,"kind":"modifierInvocation","modifierName":{"id":2154,"name":"onlyOwner","nameLocations":["2337:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"2337:9:15"},"nodeType":"ModifierInvocation","src":"2337:9:15"}],"name":"renounceOwnership","nameLocation":"2302:17:15","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[],"src":"2319:2:15"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[],"src":"2347:0:15"},"scope":2214,"src":"2293:101:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2192,"nodeType":"Block","src":"2613:145:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2173,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"2627:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2174,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:15","typeDescriptions":{}}},"id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2187,"nodeType":"IfStatement","src":"2623:91:15","trueBody":{"id":2186,"nodeType":"Block","src":"2651:63:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2180,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:15","typeDescriptions":{}}},"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2179,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"2672:19:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2185,"nodeType":"RevertStatement","src":"2665:38:15"}]}},{"expression":{"arguments":[{"id":2189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"2742:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2188,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"2723:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2191,"nodeType":"ExpressionStatement","src":"2723:28:15"}]},"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"2400:138:15","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":2193,"implemented":true,"kind":"function","modifiers":[{"id":2171,"kind":"modifierInvocation","modifierName":{"id":2170,"name":"onlyOwner","nameLocations":["2603:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"2603:9:15"},"nodeType":"ModifierInvocation","src":"2603:9:15"}],"name":"transferOwnership","nameLocation":"2552:17:15","nodeType":"FunctionDefinition","parameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:15","nodeType":"VariableDeclaration","scope":2193,"src":"2570:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:15"},"returnParameters":{"id":2172,"nodeType":"ParameterList","parameters":[],"src":"2613:0:15"},"scope":2214,"src":"2543:215:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2212,"nodeType":"Block","src":"2975:124:15","statements":[{"assignments":[2200],"declarations":[{"constant":false,"id":2200,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:15","nodeType":"VariableDeclaration","scope":2212,"src":"2985:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2199,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2202,"initialValue":{"id":2201,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"3004:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:15"},{"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2203,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"3020:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2204,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"3029:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2206,"nodeType":"ExpressionStatement","src":"3020:17:15"},{"eventCall":{"arguments":[{"id":2208,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"3073:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2209,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"3083:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2207,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"3052:20:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2211,"nodeType":"EmitStatement","src":"3047:45:15"}]},"documentation":{"id":2194,"nodeType":"StructuredDocumentation","src":"2764:143:15","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":2213,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:15","nodeType":"FunctionDefinition","parameters":{"id":2197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:15","nodeType":"VariableDeclaration","scope":2213,"src":"2940:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:15"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[],"src":"2975:0:15"},"scope":2214,"src":"2912:187:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2215,"src":"663:2438:15","usedErrors":[2080,2085],"usedEvents":[2091]}],"src":"102:3000:15"},"id":15},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[3118]},"id":2219,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2216,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":2218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2219,"sourceUnit":3119,"src":"131:49:16","symbolAliases":[{"foreign":{"id":2217,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"139:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:16"},"id":16},"@openzeppelin/contracts/interfaces/IERC4626.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","exportedSymbols":{"IERC20":[3118],"IERC20Metadata":[3829],"IERC4626":[2388]},"id":2389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2220,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":2222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2389,"sourceUnit":3119,"src":"133:49:17","symbolAliases":[{"foreign":{"id":2221,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"141:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"../token/ERC20/extensions/IERC20Metadata.sol","id":2224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2389,"sourceUnit":3830,"src":"183:76:17","symbolAliases":[{"foreign":{"id":2223,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"191:14:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2226,"name":"IERC20","nameLocations":["420:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"420:6:17"},"id":2227,"nodeType":"InheritanceSpecifier","src":"420:6:17"},{"baseName":{"id":2228,"name":"IERC20Metadata","nameLocations":["428:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"428:14:17"},"id":2229,"nodeType":"InheritanceSpecifier","src":"428:14:17"}],"canonicalName":"IERC4626","contractDependencies":[],"contractKind":"interface","documentation":{"id":2225,"nodeType":"StructuredDocumentation","src":"261:136:17","text":" @dev Interface of the ERC4626 \"Tokenized Vault Standard\", as defined in\n https://eips.ethereum.org/EIPS/eip-4626[ERC-4626]."},"fullyImplemented":false,"id":2388,"linearizedBaseContracts":[2388,3829,3118],"name":"IERC4626","nameLocation":"408:8:17","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"dcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7","id":2239,"name":"Deposit","nameLocation":"455:7:17","nodeType":"EventDefinition","parameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"479:6:17","nodeType":"VariableDeclaration","scope":2239,"src":"463:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2230,"name":"address","nodeType":"ElementaryTypeName","src":"463:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2233,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"503:5:17","nodeType":"VariableDeclaration","scope":2239,"src":"487:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2235,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"518:6:17","nodeType":"VariableDeclaration","scope":2239,"src":"510:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"510:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2237,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"534:6:17","nodeType":"VariableDeclaration","scope":2239,"src":"526:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"526:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"462:79:17"},"src":"449:93:17"},{"anonymous":false,"eventSelector":"fbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db","id":2251,"name":"Withdraw","nameLocation":"554:8:17","nodeType":"EventDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"588:6:17","nodeType":"VariableDeclaration","scope":2251,"src":"572:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2240,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2243,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"620:8:17","nodeType":"VariableDeclaration","scope":2251,"src":"604:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2242,"name":"address","nodeType":"ElementaryTypeName","src":"604:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2245,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"654:5:17","nodeType":"VariableDeclaration","scope":2251,"src":"638:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"638:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2247,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"677:6:17","nodeType":"VariableDeclaration","scope":2251,"src":"669:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"669:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2249,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"701:6:17","nodeType":"VariableDeclaration","scope":2251,"src":"693:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"562:151:17"},"src":"548:166:17"},{"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"720:207:17","text":" @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n - MUST be an ERC-20 token contract.\n - MUST NOT revert."},"functionSelector":"38d52e0f","id":2257,"implemented":false,"kind":"function","modifiers":[],"name":"asset","nameLocation":"941:5:17","nodeType":"FunctionDefinition","parameters":{"id":2253,"nodeType":"ParameterList","parameters":[],"src":"946:2:17"},"returnParameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"assetTokenAddress","nameLocation":"980:17:17","nodeType":"VariableDeclaration","scope":2257,"src":"972:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2254,"name":"address","nodeType":"ElementaryTypeName","src":"972:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"971:27:17"},"scope":2388,"src":"932:67:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"1005:286:17","text":" @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n - SHOULD include any compounding that occurs from yield.\n - MUST be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT revert."},"functionSelector":"01e1d114","id":2263,"implemented":false,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"1305:11:17","nodeType":"FunctionDefinition","parameters":{"id":2259,"nodeType":"ParameterList","parameters":[],"src":"1316:2:17"},"returnParameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"mutability":"mutable","name":"totalManagedAssets","nameLocation":"1350:18:17","nodeType":"VariableDeclaration","scope":2263,"src":"1342:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2260,"name":"uint256","nodeType":"ElementaryTypeName","src":"1342:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1341:28:17"},"scope":2388,"src":"1296:74:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"1376:720:17","text":" @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."},"functionSelector":"c6e6f592","id":2271,"implemented":false,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"2110:15:17","nodeType":"FunctionDefinition","parameters":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"assets","nameLocation":"2134:6:17","nodeType":"VariableDeclaration","scope":2271,"src":"2126:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2125:16:17"},"returnParameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"shares","nameLocation":"2173:6:17","nodeType":"VariableDeclaration","scope":2271,"src":"2165:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"2165:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2164:16:17"},"scope":2388,"src":"2101:80:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"2187:720:17","text":" @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."},"functionSelector":"07a2d13a","id":2279,"implemented":false,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"2921:15:17","nodeType":"FunctionDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"shares","nameLocation":"2945:6:17","nodeType":"VariableDeclaration","scope":2279,"src":"2937:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"2937:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2936:16:17"},"returnParameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"assets","nameLocation":"2984:6:17","nodeType":"VariableDeclaration","scope":2279,"src":"2976:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2976:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2975:16:17"},"scope":2388,"src":"2912:80:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2280,"nodeType":"StructuredDocumentation","src":"2998:386:17","text":" @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n through a deposit call.\n - MUST return a limited value if receiver is subject to some deposit limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n - MUST NOT revert."},"functionSelector":"402d267d","id":2287,"implemented":false,"kind":"function","modifiers":[],"name":"maxDeposit","nameLocation":"3398:10:17","nodeType":"FunctionDefinition","parameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"receiver","nameLocation":"3417:8:17","nodeType":"VariableDeclaration","scope":2287,"src":"3409:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2281,"name":"address","nodeType":"ElementaryTypeName","src":"3409:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3408:18:17"},"returnParameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"maxAssets","nameLocation":"3458:9:17","nodeType":"VariableDeclaration","scope":2287,"src":"3450:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2284,"name":"uint256","nodeType":"ElementaryTypeName","src":"3450:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3449:19:17"},"scope":2388,"src":"3389:80:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2288,"nodeType":"StructuredDocumentation","src":"3475:1012:17","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n current on-chain conditions.\n - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n   in the same transaction.\n - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."},"functionSelector":"ef8b30f7","id":2295,"implemented":false,"kind":"function","modifiers":[],"name":"previewDeposit","nameLocation":"4501:14:17","nodeType":"FunctionDefinition","parameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"assets","nameLocation":"4524:6:17","nodeType":"VariableDeclaration","scope":2295,"src":"4516:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4515:16:17"},"returnParameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"shares","nameLocation":"4563:6:17","nodeType":"VariableDeclaration","scope":2295,"src":"4555:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:16:17"},"scope":2388,"src":"4492:79:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"4577:651:17","text":" @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   deposit execution, and are accounted for during deposit.\n - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"functionSelector":"6e553f65","id":2305,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"5242:7:17","nodeType":"FunctionDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"assets","nameLocation":"5258:6:17","nodeType":"VariableDeclaration","scope":2305,"src":"5250:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"5250:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"receiver","nameLocation":"5274:8:17","nodeType":"VariableDeclaration","scope":2305,"src":"5266:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2299,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5249:34:17"},"returnParameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"shares","nameLocation":"5310:6:17","nodeType":"VariableDeclaration","scope":2305,"src":"5302:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2302,"name":"uint256","nodeType":"ElementaryTypeName","src":"5302:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5301:16:17"},"scope":2388,"src":"5233:85:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2306,"nodeType":"StructuredDocumentation","src":"5324:341:17","text":" @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n - MUST return a limited value if receiver is subject to some mint limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n - MUST NOT revert."},"functionSelector":"c63d75b6","id":2313,"implemented":false,"kind":"function","modifiers":[],"name":"maxMint","nameLocation":"5679:7:17","nodeType":"FunctionDefinition","parameters":{"id":2309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"receiver","nameLocation":"5695:8:17","nodeType":"VariableDeclaration","scope":2313,"src":"5687:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2307,"name":"address","nodeType":"ElementaryTypeName","src":"5687:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5686:18:17"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"maxShares","nameLocation":"5736:9:17","nodeType":"VariableDeclaration","scope":2313,"src":"5728:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"5728:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5727:19:17"},"scope":2388,"src":"5670:77:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2314,"nodeType":"StructuredDocumentation","src":"5753:984:17","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n   same transaction.\n - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n   would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by minting."},"functionSelector":"b3d7f6b9","id":2321,"implemented":false,"kind":"function","modifiers":[],"name":"previewMint","nameLocation":"6751:11:17","nodeType":"FunctionDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"shares","nameLocation":"6771:6:17","nodeType":"VariableDeclaration","scope":2321,"src":"6763:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2315,"name":"uint256","nodeType":"ElementaryTypeName","src":"6763:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6762:16:17"},"returnParameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"assets","nameLocation":"6810:6:17","nodeType":"VariableDeclaration","scope":2321,"src":"6802:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"6802:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6801:16:17"},"scope":2388,"src":"6742:76:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"6824:642:17","text":" @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n   execution, and are accounted for during mint.\n - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"functionSelector":"94bf804d","id":2331,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"7480:4:17","nodeType":"FunctionDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"shares","nameLocation":"7493:6:17","nodeType":"VariableDeclaration","scope":2331,"src":"7485:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"7485:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2326,"mutability":"mutable","name":"receiver","nameLocation":"7509:8:17","nodeType":"VariableDeclaration","scope":2331,"src":"7501:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2325,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7484:34:17"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"assets","nameLocation":"7545:6:17","nodeType":"VariableDeclaration","scope":2331,"src":"7537:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"7537:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7536:16:17"},"scope":2388,"src":"7471:82:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"7559:293:17","text":" @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n Vault, through a withdraw call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST NOT revert."},"functionSelector":"ce96cb77","id":2339,"implemented":false,"kind":"function","modifiers":[],"name":"maxWithdraw","nameLocation":"7866:11:17","nodeType":"FunctionDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"owner","nameLocation":"7886:5:17","nodeType":"VariableDeclaration","scope":2339,"src":"7878:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"7878:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7877:15:17"},"returnParameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"maxAssets","nameLocation":"7924:9:17","nodeType":"VariableDeclaration","scope":2339,"src":"7916:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"7916:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7915:19:17"},"scope":2388,"src":"7857:78:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2340,"nodeType":"StructuredDocumentation","src":"7941:1034:17","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n given current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n   called\n   in the same transaction.\n - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."},"functionSelector":"0a28a477","id":2347,"implemented":false,"kind":"function","modifiers":[],"name":"previewWithdraw","nameLocation":"8989:15:17","nodeType":"FunctionDefinition","parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"assets","nameLocation":"9013:6:17","nodeType":"VariableDeclaration","scope":2347,"src":"9005:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2341,"name":"uint256","nodeType":"ElementaryTypeName","src":"9005:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9004:16:17"},"returnParameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"shares","nameLocation":"9052:6:17","nodeType":"VariableDeclaration","scope":2347,"src":"9044:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"9044:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9043:16:17"},"scope":2388,"src":"8980:80:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2348,"nodeType":"StructuredDocumentation","src":"9066:670:17","text":" @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   withdraw execution, and are accounted for during withdraw.\n - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."},"functionSelector":"b460af94","id":2359,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"9750:8:17","nodeType":"FunctionDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"assets","nameLocation":"9767:6:17","nodeType":"VariableDeclaration","scope":2359,"src":"9759:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"9759:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2352,"mutability":"mutable","name":"receiver","nameLocation":"9783:8:17","nodeType":"VariableDeclaration","scope":2359,"src":"9775:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2351,"name":"address","nodeType":"ElementaryTypeName","src":"9775:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"owner","nameLocation":"9801:5:17","nodeType":"VariableDeclaration","scope":2359,"src":"9793:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2353,"name":"address","nodeType":"ElementaryTypeName","src":"9793:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9758:49:17"},"returnParameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"shares","nameLocation":"9834:6:17","nodeType":"VariableDeclaration","scope":2359,"src":"9826:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"9826:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9825:16:17"},"scope":2388,"src":"9741:101:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"9848:381:17","text":" @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n through a redeem call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n - MUST NOT revert."},"functionSelector":"d905777e","id":2367,"implemented":false,"kind":"function","modifiers":[],"name":"maxRedeem","nameLocation":"10243:9:17","nodeType":"FunctionDefinition","parameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"owner","nameLocation":"10261:5:17","nodeType":"VariableDeclaration","scope":2367,"src":"10253:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2361,"name":"address","nodeType":"ElementaryTypeName","src":"10253:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10252:15:17"},"returnParameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"maxShares","nameLocation":"10299:9:17","nodeType":"VariableDeclaration","scope":2367,"src":"10291:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"10291:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10290:19:17"},"scope":2388,"src":"10234:76:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"10316:1010:17","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n given current on-chain conditions.\n - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n   same transaction.\n - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n   redemption would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by redeeming."},"functionSelector":"4cdad506","id":2375,"implemented":false,"kind":"function","modifiers":[],"name":"previewRedeem","nameLocation":"11340:13:17","nodeType":"FunctionDefinition","parameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"shares","nameLocation":"11362:6:17","nodeType":"VariableDeclaration","scope":2375,"src":"11354:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"11354:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11353:16:17"},"returnParameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"assets","nameLocation":"11401:6:17","nodeType":"VariableDeclaration","scope":2375,"src":"11393:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"11393:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11392:16:17"},"scope":2388,"src":"11331:78:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"11415:661:17","text":" @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   redeem execution, and are accounted for during redeem.\n - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."},"functionSelector":"ba087652","id":2387,"implemented":false,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"12090:6:17","nodeType":"FunctionDefinition","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"shares","nameLocation":"12105:6:17","nodeType":"VariableDeclaration","scope":2387,"src":"12097:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"12097:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"receiver","nameLocation":"12121:8:17","nodeType":"VariableDeclaration","scope":2387,"src":"12113:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2379,"name":"address","nodeType":"ElementaryTypeName","src":"12113:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"owner","nameLocation":"12139:5:17","nodeType":"VariableDeclaration","scope":2387,"src":"12131:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2381,"name":"address","nodeType":"ElementaryTypeName","src":"12131:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12096:49:17"},"returnParameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"assets","nameLocation":"12172:6:17","nodeType":"VariableDeclaration","scope":2387,"src":"12164:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"12164:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:16:17"},"scope":2388,"src":"12081:99:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2389,"src":"398:11784:17","usedErrors":[],"usedEvents":[2239,2251,3052,3061]}],"src":"107:12076:17"},"id":17},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[2525],"IERC20Errors":[2430],"IERC721Errors":[2478]},"id":2526,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2390,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"138:139:18","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":2430,"linearizedBaseContracts":[2430],"name":"IERC20Errors","nameLocation":"288:12:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"307:309:18","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":2400,"name":"ERC20InsufficientBalance","nameLocation":"627:24:18","nodeType":"ErrorDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"sender","nameLocation":"660:6:18","nodeType":"VariableDeclaration","scope":2400,"src":"652:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2393,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2396,"mutability":"mutable","name":"balance","nameLocation":"676:7:18","nodeType":"VariableDeclaration","scope":2400,"src":"668:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"needed","nameLocation":"693:6:18","nodeType":"VariableDeclaration","scope":2400,"src":"685:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:18"},"src":"621:80:18"},{"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"707:152:18","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":2405,"name":"ERC20InvalidSender","nameLocation":"870:18:18","nodeType":"ErrorDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"sender","nameLocation":"897:6:18","nodeType":"VariableDeclaration","scope":2405,"src":"889:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2402,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:18"},"src":"864:41:18"},{"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"911:159:18","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":2410,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:18","nodeType":"ErrorDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:18","nodeType":"VariableDeclaration","scope":2410,"src":"1102:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:18"},"src":"1075:45:18"},{"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"1126:345:18","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":2419,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:18","nodeType":"ErrorDefinition","parameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"mutability":"mutable","name":"spender","nameLocation":"1517:7:18","nodeType":"VariableDeclaration","scope":2419,"src":"1509:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2412,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2415,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:18","nodeType":"VariableDeclaration","scope":2419,"src":"1526:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"needed","nameLocation":"1553:6:18","nodeType":"VariableDeclaration","scope":2419,"src":"1545:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:18"},"src":"1476:85:18"},{"documentation":{"id":2420,"nodeType":"StructuredDocumentation","src":"1567:174:18","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":2424,"name":"ERC20InvalidApprover","nameLocation":"1752:20:18","nodeType":"ErrorDefinition","parameters":{"id":2423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"approver","nameLocation":"1781:8:18","nodeType":"VariableDeclaration","scope":2424,"src":"1773:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2421,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:18"},"src":"1746:45:18"},{"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"1797:195:18","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":2429,"name":"ERC20InvalidSpender","nameLocation":"2003:19:18","nodeType":"ErrorDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"spender","nameLocation":"2031:7:18","nodeType":"VariableDeclaration","scope":2429,"src":"2023:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2426,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:18"},"src":"1997:43:18"}],"scope":2526,"src":"278:1764:18","usedErrors":[2400,2405,2410,2419,2424,2429],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"2044:141:18","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":2478,"linearizedBaseContracts":[2478],"name":"IERC721Errors","nameLocation":"2196:13:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"2216:219:18","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":2436,"name":"ERC721InvalidOwner","nameLocation":"2446:18:18","nodeType":"ErrorDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"owner","nameLocation":"2473:5:18","nodeType":"VariableDeclaration","scope":2436,"src":"2465:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2433,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:18"},"src":"2440:40:18"},{"documentation":{"id":2437,"nodeType":"StructuredDocumentation","src":"2486:132:18","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":2441,"name":"ERC721NonexistentToken","nameLocation":"2629:22:18","nodeType":"ErrorDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:18","nodeType":"VariableDeclaration","scope":2441,"src":"2652:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:18"},"src":"2623:46:18"},{"documentation":{"id":2442,"nodeType":"StructuredDocumentation","src":"2675:289:18","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":2450,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:18","nodeType":"ErrorDefinition","parameters":{"id":2449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"sender","nameLocation":"3004:6:18","nodeType":"VariableDeclaration","scope":2450,"src":"2996:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2443,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2446,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:18","nodeType":"VariableDeclaration","scope":2450,"src":"3012:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2448,"mutability":"mutable","name":"owner","nameLocation":"3037:5:18","nodeType":"VariableDeclaration","scope":2450,"src":"3029:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2447,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:18"},"src":"2969:75:18"},{"documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"3050:152:18","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":2455,"name":"ERC721InvalidSender","nameLocation":"3213:19:18","nodeType":"ErrorDefinition","parameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"sender","nameLocation":"3241:6:18","nodeType":"VariableDeclaration","scope":2455,"src":"3233:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2452,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:18"},"src":"3207:42:18"},{"documentation":{"id":2456,"nodeType":"StructuredDocumentation","src":"3255:159:18","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":2460,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:18","nodeType":"ErrorDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:18","nodeType":"VariableDeclaration","scope":2460,"src":"3447:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2457,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:18"},"src":"3419:46:18"},{"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"3471:247:18","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":2467,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:18","nodeType":"ErrorDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"operator","nameLocation":"3764:8:18","nodeType":"VariableDeclaration","scope":2467,"src":"3756:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2462,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:18","nodeType":"VariableDeclaration","scope":2467,"src":"3774:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:18"},"src":"3723:68:18"},{"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"3797:174:18","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":2472,"name":"ERC721InvalidApprover","nameLocation":"3982:21:18","nodeType":"ErrorDefinition","parameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"approver","nameLocation":"4012:8:18","nodeType":"VariableDeclaration","scope":2472,"src":"4004:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2469,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:18"},"src":"3976:46:18"},{"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"4028:197:18","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":2477,"name":"ERC721InvalidOperator","nameLocation":"4236:21:18","nodeType":"ErrorDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"operator","nameLocation":"4266:8:18","nodeType":"VariableDeclaration","scope":2477,"src":"4258:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:18"},"src":"4230:46:18"}],"scope":2526,"src":"2186:2092:18","usedErrors":[2436,2441,2450,2455,2460,2467,2472,2477],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"4280:143:18","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":2525,"linearizedBaseContracts":[2525],"name":"IERC1155Errors","nameLocation":"4434:14:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2480,"nodeType":"StructuredDocumentation","src":"4455:361:18","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":2490,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:18","nodeType":"ErrorDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2482,"mutability":"mutable","name":"sender","nameLocation":"4862:6:18","nodeType":"VariableDeclaration","scope":2490,"src":"4854:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2481,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2484,"mutability":"mutable","name":"balance","nameLocation":"4878:7:18","nodeType":"VariableDeclaration","scope":2490,"src":"4870:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2483,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2486,"mutability":"mutable","name":"needed","nameLocation":"4895:6:18","nodeType":"VariableDeclaration","scope":2490,"src":"4887:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2488,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:18","nodeType":"VariableDeclaration","scope":2490,"src":"4903:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:18"},"src":"4821:99:18"},{"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"4926:152:18","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":2495,"name":"ERC1155InvalidSender","nameLocation":"5089:20:18","nodeType":"ErrorDefinition","parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"sender","nameLocation":"5118:6:18","nodeType":"VariableDeclaration","scope":2495,"src":"5110:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2492,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:18"},"src":"5083:43:18"},{"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"5132:159:18","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":2500,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:18","nodeType":"ErrorDefinition","parameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:18","nodeType":"VariableDeclaration","scope":2500,"src":"5325:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2497,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:18"},"src":"5296:47:18"},{"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"5349:256:18","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":2507,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:18","nodeType":"ErrorDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"operator","nameLocation":"5653:8:18","nodeType":"VariableDeclaration","scope":2507,"src":"5645:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"owner","nameLocation":"5671:5:18","nodeType":"VariableDeclaration","scope":2507,"src":"5663:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2504,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:18"},"src":"5610:68:18"},{"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"5684:174:18","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":2512,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:18","nodeType":"ErrorDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"approver","nameLocation":"5900:8:18","nodeType":"VariableDeclaration","scope":2512,"src":"5892:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2509,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:18"},"src":"5863:47:18"},{"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"5916:197:18","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":2517,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:18","nodeType":"ErrorDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"operator","nameLocation":"6155:8:18","nodeType":"VariableDeclaration","scope":2517,"src":"6147:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:18"},"src":"6118:47:18"},{"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"6171:280:18","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":2524,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:18","nodeType":"ErrorDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:18","nodeType":"VariableDeclaration","scope":2524,"src":"6488:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2522,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:18","nodeType":"VariableDeclaration","scope":2524,"src":"6507:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:18"},"src":"6456:73:18"}],"scope":2526,"src":"4424:2107:18","usedErrors":[2490,2495,2500,2507,2512,2517,2524],"usedEvents":[]}],"src":"112:6420:18"},"id":18},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[4438],"ERC20":[3040],"IERC20":[3118],"IERC20Errors":[2430],"IERC20Metadata":[3829]},"id":3041,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2527,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":2529,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3041,"sourceUnit":3119,"src":"131:36:19","symbolAliases":[{"foreign":{"id":2528,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"139:6:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":2531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3041,"sourceUnit":3830,"src":"168:63:19","symbolAliases":[{"foreign":{"id":2530,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"176:14:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":2533,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3041,"sourceUnit":4439,"src":"232:48:19","symbolAliases":[{"foreign":{"id":2532,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"240:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":2535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3041,"sourceUnit":2526,"src":"281:65:19","symbolAliases":[{"foreign":{"id":2534,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"289:12:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2537,"name":"Context","nameLocations":["1428:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":4438,"src":"1428:7:19"},"id":2538,"nodeType":"InheritanceSpecifier","src":"1428:7:19"},{"baseName":{"id":2539,"name":"IERC20","nameLocations":["1437:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"1437:6:19"},"id":2540,"nodeType":"InheritanceSpecifier","src":"1437:6:19"},{"baseName":{"id":2541,"name":"IERC20Metadata","nameLocations":["1445:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"1445:14:19"},"id":2542,"nodeType":"InheritanceSpecifier","src":"1445:14:19"},{"baseName":{"id":2543,"name":"IERC20Errors","nameLocations":["1461:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2430,"src":"1461:12:19"},"id":2544,"nodeType":"InheritanceSpecifier","src":"1461:12:19"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":2536,"nodeType":"StructuredDocumentation","src":"348:1052:19","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":3040,"linearizedBaseContracts":[3040,2430,3829,3118,4438],"name":"ERC20","nameLocation":"1419:5:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2548,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:19","nodeType":"VariableDeclaration","scope":3040,"src":"1480:53:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2547,"keyName":"account","keyNameLocation":"1496:7:19","keyType":{"id":2545,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2554,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:19","nodeType":"VariableDeclaration","scope":3040,"src":"1540:83:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2553,"keyName":"account","keyNameLocation":"1556:7:19","keyType":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2552,"keyName":"spender","keyNameLocation":"1583:7:19","keyType":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":2556,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:19","nodeType":"VariableDeclaration","scope":3040,"src":"1630:28:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2558,"mutability":"mutable","name":"_name","nameLocation":"1680:5:19","nodeType":"VariableDeclaration","scope":3040,"src":"1665:20:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2557,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2560,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:19","nodeType":"VariableDeclaration","scope":3040,"src":"1691:22:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2559,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2576,"nodeType":"Block","src":"1952:57:19","statements":[{"expression":{"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2568,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"1962:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2569,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"1970:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2571,"nodeType":"ExpressionStatement","src":"1962:13:19"},{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2572,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"1985:7:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2573,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"1995:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2575,"nodeType":"ExpressionStatement","src":"1985:17:19"}]},"documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"1720:171:19","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":2577,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"name_","nameLocation":"1922:5:19","nodeType":"VariableDeclaration","scope":2577,"src":"1908:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2562,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:19","nodeType":"VariableDeclaration","scope":2577,"src":"1929:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2564,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:19"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[],"src":"1952:0:19"},"scope":3040,"src":"1896:113:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3816],"body":{"id":2585,"nodeType":"Block","src":"2134:29:19","statements":[{"expression":{"id":2583,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"2151:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2582,"id":2584,"nodeType":"Return","src":"2144:12:19"}]},"documentation":{"id":2578,"nodeType":"StructuredDocumentation","src":"2015:54:19","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2586,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:19","nodeType":"FunctionDefinition","parameters":{"id":2579,"nodeType":"ParameterList","parameters":[],"src":"2087:2:19"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2586,"src":"2119:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2580,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:19"},"scope":3040,"src":"2074:89:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3822],"body":{"id":2594,"nodeType":"Block","src":"2338:31:19","statements":[{"expression":{"id":2592,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"2355:7:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2591,"id":2593,"nodeType":"Return","src":"2348:14:19"}]},"documentation":{"id":2587,"nodeType":"StructuredDocumentation","src":"2169:102:19","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":2595,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:19","nodeType":"FunctionDefinition","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[],"src":"2291:2:19"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2595,"src":"2323:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2589,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:19"},"scope":3040,"src":"2276:93:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3828],"body":{"id":2603,"nodeType":"Block","src":"3058:26:19","statements":[{"expression":{"hexValue":"3138","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":2600,"id":2602,"nodeType":"Return","src":"3068:9:19"}]},"documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"2375:622:19","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":2604,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:19","nodeType":"FunctionDefinition","parameters":{"id":2597,"nodeType":"ParameterList","parameters":[],"src":"3019:2:19"},"returnParameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2604,"src":"3051:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2598,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:19"},"scope":3040,"src":"3002:82:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3067],"body":{"id":2612,"nodeType":"Block","src":"3205:36:19","statements":[{"expression":{"id":2610,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"3222:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2609,"id":2611,"nodeType":"Return","src":"3215:19:19"}]},"documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"3090:49:19","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":2613,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:19","nodeType":"FunctionDefinition","parameters":{"id":2606,"nodeType":"ParameterList","parameters":[],"src":"3164:2:19"},"returnParameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2613,"src":"3196:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:19"},"scope":3040,"src":"3144:97:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3075],"body":{"id":2625,"nodeType":"Block","src":"3373:42:19","statements":[{"expression":{"baseExpression":{"id":2621,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"3390:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2623,"indexExpression":{"id":2622,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"3400:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2620,"id":2624,"nodeType":"Return","src":"3383:25:19"}]},"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"3247:47:19","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":2626,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:19","nodeType":"FunctionDefinition","parameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"account","nameLocation":"3326:7:19","nodeType":"VariableDeclaration","scope":2626,"src":"3318:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:19"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2626,"src":"3364:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:19"},"scope":3040,"src":"3299:116:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3085],"body":{"id":2649,"nodeType":"Block","src":"3685:103:19","statements":[{"assignments":[2637],"declarations":[{"constant":false,"id":2637,"mutability":"mutable","name":"owner","nameLocation":"3703:5:19","nodeType":"VariableDeclaration","scope":2649,"src":"3695:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2640,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2638,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"3711:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:19"},{"expression":{"arguments":[{"id":2642,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"3743:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2643,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"3750:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"3754:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2641,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"3733:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2646,"nodeType":"ExpressionStatement","src":"3733:27:19"},{"expression":{"hexValue":"74727565","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2635,"id":2648,"nodeType":"Return","src":"3770:11:19"}]},"documentation":{"id":2627,"nodeType":"StructuredDocumentation","src":"3421:184:19","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":2650,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:19","nodeType":"FunctionDefinition","parameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"to","nameLocation":"3636:2:19","nodeType":"VariableDeclaration","scope":2650,"src":"3628:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2628,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2631,"mutability":"mutable","name":"value","nameLocation":"3648:5:19","nodeType":"VariableDeclaration","scope":2650,"src":"3640:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2630,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:19"},"returnParameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2650,"src":"3679:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2633,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:19"},"scope":3040,"src":"3610:178:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3095],"body":{"id":2666,"nodeType":"Block","src":"3935:51:19","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2660,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"3952:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2662,"indexExpression":{"id":2661,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"3964:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2664,"indexExpression":{"id":2663,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"3971:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2659,"id":2665,"nodeType":"Return","src":"3945:34:19"}]},"documentation":{"id":2651,"nodeType":"StructuredDocumentation","src":"3794:47:19","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":2667,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:19","nodeType":"FunctionDefinition","parameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"owner","nameLocation":"3873:5:19","nodeType":"VariableDeclaration","scope":2667,"src":"3865:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2655,"mutability":"mutable","name":"spender","nameLocation":"3888:7:19","nodeType":"VariableDeclaration","scope":2667,"src":"3880:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2654,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:19"},"returnParameters":{"id":2659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2667,"src":"3926:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2657,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:19"},"scope":3040,"src":"3846:140:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3105],"body":{"id":2690,"nodeType":"Block","src":"4372:107:19","statements":[{"assignments":[2678],"declarations":[{"constant":false,"id":2678,"mutability":"mutable","name":"owner","nameLocation":"4390:5:19","nodeType":"VariableDeclaration","scope":2690,"src":"4382:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2677,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2681,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2679,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"4398:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:19"},{"expression":{"arguments":[{"id":2683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"4429:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2684,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"4436:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4445:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2682,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2931,2991],"referencedDeclaration":2931,"src":"4420:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2687,"nodeType":"ExpressionStatement","src":"4420:31:19"},{"expression":{"hexValue":"74727565","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2676,"id":2689,"nodeType":"Return","src":"4461:11:19"}]},"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"3992:296:19","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":2691,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:19","nodeType":"FunctionDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"spender","nameLocation":"4318:7:19","nodeType":"VariableDeclaration","scope":2691,"src":"4310:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"value","nameLocation":"4335:5:19","nodeType":"VariableDeclaration","scope":2691,"src":"4327:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:19"},"returnParameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2691,"src":"4366:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2674,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:19"},"scope":3040,"src":"4293:186:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3117],"body":{"id":2722,"nodeType":"Block","src":"5132:151:19","statements":[{"assignments":[2704],"declarations":[{"constant":false,"id":2704,"mutability":"mutable","name":"spender","nameLocation":"5150:7:19","nodeType":"VariableDeclaration","scope":2722,"src":"5142:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2703,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2707,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2705,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"5160:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:19"},{"expression":{"arguments":[{"id":2709,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"5198:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2710,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"5204:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"5213:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2708,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"5182:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2713,"nodeType":"ExpressionStatement","src":"5182:37:19"},{"expression":{"arguments":[{"id":2715,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"5239:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2716,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"5245:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"5249:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2714,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"5229:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2719,"nodeType":"ExpressionStatement","src":"5229:26:19"},{"expression":{"hexValue":"74727565","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2702,"id":2721,"nodeType":"Return","src":"5265:11:19"}]},"documentation":{"id":2692,"nodeType":"StructuredDocumentation","src":"4485:549:19","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":2723,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:19","nodeType":"FunctionDefinition","parameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"from","nameLocation":"5069:4:19","nodeType":"VariableDeclaration","scope":2723,"src":"5061:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2693,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2696,"mutability":"mutable","name":"to","nameLocation":"5083:2:19","nodeType":"VariableDeclaration","scope":2723,"src":"5075:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"value","nameLocation":"5095:5:19","nodeType":"VariableDeclaration","scope":2723,"src":"5087:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:19"},"returnParameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2723,"src":"5126:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2700,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:19"},"scope":3040,"src":"5039:244:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2769,"nodeType":"Block","src":"5725:231:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2733,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"5739:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:19","typeDescriptions":{}}},"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2747,"nodeType":"IfStatement","src":"5735:86:19","trueBody":{"id":2746,"nodeType":"Block","src":"5759:62:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:19","typeDescriptions":{}}},"id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2739,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"5780:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2745,"nodeType":"RevertStatement","src":"5773:37:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2748,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"5834:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2749,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:19","typeDescriptions":{}}},"id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2762,"nodeType":"IfStatement","src":"5830:86:19","trueBody":{"id":2761,"nodeType":"Block","src":"5852:64:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2755,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:19","typeDescriptions":{}}},"id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2754,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"5873:20:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2760,"nodeType":"RevertStatement","src":"5866:39:19"}]}},{"expression":{"arguments":[{"id":2764,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"5933:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2765,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"5939:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"5943:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2763,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"5925:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2768,"nodeType":"ExpressionStatement","src":"5925:24:19"}]},"documentation":{"id":2724,"nodeType":"StructuredDocumentation","src":"5289:362:19","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2770,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:19","nodeType":"FunctionDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"from","nameLocation":"5683:4:19","nodeType":"VariableDeclaration","scope":2770,"src":"5675:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2725,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"to","nameLocation":"5697:2:19","nodeType":"VariableDeclaration","scope":2770,"src":"5689:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2727,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2730,"mutability":"mutable","name":"value","nameLocation":"5709:5:19","nodeType":"VariableDeclaration","scope":2770,"src":"5701:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:19"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[],"src":"5725:0:19"},"scope":3040,"src":"5656:300:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2846,"nodeType":"Block","src":"6346:1032:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2780,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"6360:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2781,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:19","typeDescriptions":{}}},"id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2817,"nodeType":"Block","src":"6534:362:19","statements":[{"assignments":[2792],"declarations":[{"constant":false,"id":2792,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:19","nodeType":"VariableDeclaration","scope":2817,"src":"6548:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2796,"initialValue":{"baseExpression":{"id":2793,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"6570:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2795,"indexExpression":{"id":2794,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"6580:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2797,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"6603:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"6617:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2807,"nodeType":"IfStatement","src":"6599:115:19","trueBody":{"id":2806,"nodeType":"Block","src":"6624:90:19","statements":[{"errorCall":{"arguments":[{"id":2801,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"6674:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2802,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"6680:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"6693:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2800,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"6649:24:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2805,"nodeType":"RevertStatement","src":"6642:57:19"}]}},{"id":2816,"nodeType":"UncheckedBlock","src":"6727:159:19","statements":[{"expression":{"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2808,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"6834:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2810,"indexExpression":{"id":2809,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"6844:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2811,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"6852:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"6866:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2815,"nodeType":"ExpressionStatement","src":"6834:37:19"}]}]},"id":2818,"nodeType":"IfStatement","src":"6356:540:19","trueBody":{"id":2790,"nodeType":"Block","src":"6380:148:19","statements":[{"expression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2786,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"6496:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"6512:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2789,"nodeType":"ExpressionStatement","src":"6496:21:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2819,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"6910:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2820,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:19","typeDescriptions":{}}},"id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2838,"nodeType":"Block","src":"7125:206:19","statements":[{"id":2837,"nodeType":"UncheckedBlock","src":"7139:182:19","statements":[{"expression":{"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2831,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"7284:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2833,"indexExpression":{"id":2832,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"7294:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"7301:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2836,"nodeType":"ExpressionStatement","src":"7284:22:19"}]}]},"id":2839,"nodeType":"IfStatement","src":"6906:425:19","trueBody":{"id":2830,"nodeType":"Block","src":"6928:191:19","statements":[{"id":2829,"nodeType":"UncheckedBlock","src":"6942:167:19","statements":[{"expression":{"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2825,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"7073:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"7089:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2828,"nodeType":"ExpressionStatement","src":"7073:21:19"}]}]}},{"eventCall":{"arguments":[{"id":2841,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"7355:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2842,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"7361:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"7365:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2840,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"7346:8:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2845,"nodeType":"EmitStatement","src":"7341:30:19"}]},"documentation":{"id":2771,"nodeType":"StructuredDocumentation","src":"5962:304:19","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":2847,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:19","nodeType":"FunctionDefinition","parameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"from","nameLocation":"6296:4:19","nodeType":"VariableDeclaration","scope":2847,"src":"6288:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2775,"mutability":"mutable","name":"to","nameLocation":"6310:2:19","nodeType":"VariableDeclaration","scope":2847,"src":"6302:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2774,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"value","nameLocation":"6322:5:19","nodeType":"VariableDeclaration","scope":2847,"src":"6314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2776,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:19"},"returnParameters":{"id":2779,"nodeType":"ParameterList","parameters":[],"src":"6346:0:19"},"scope":3040,"src":"6271:1107:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2879,"nodeType":"Block","src":"7777:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"7791:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2856,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:19","typeDescriptions":{}}},"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2869,"nodeType":"IfStatement","src":"7787:91:19","trueBody":{"id":2868,"nodeType":"Block","src":"7814:64:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2862,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:19","typeDescriptions":{}}},"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2861,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"7835:20:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2867,"nodeType":"RevertStatement","src":"7828:39:19"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2871,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:19","typeDescriptions":{}}},"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2875,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"7907:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"7916:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2870,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"7887:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2878,"nodeType":"ExpressionStatement","src":"7887:35:19"}]},"documentation":{"id":2848,"nodeType":"StructuredDocumentation","src":"7384:332:19","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2880,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:19","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"account","nameLocation":"7744:7:19","nodeType":"VariableDeclaration","scope":2880,"src":"7736:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2849,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"value","nameLocation":"7761:5:19","nodeType":"VariableDeclaration","scope":2880,"src":"7753:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:19"},"returnParameters":{"id":2854,"nodeType":"ParameterList","parameters":[],"src":"7777:0:19"},"scope":3040,"src":"7721:208:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2912,"nodeType":"Block","src":"8303:150:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2888,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"8317:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2889,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:19","typeDescriptions":{}}},"id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2902,"nodeType":"IfStatement","src":"8313:89:19","trueBody":{"id":2901,"nodeType":"Block","src":"8340:62:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2895,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:19","typeDescriptions":{}}},"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2894,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"8361:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2900,"nodeType":"RevertStatement","src":"8354:37:19"}]}},{"expression":{"arguments":[{"id":2904,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"8419:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2905,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:19","typeDescriptions":{}}},"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"8440:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2903,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"8411:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2911,"nodeType":"ExpressionStatement","src":"8411:35:19"}]},"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"7935:307:19","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:19","nodeType":"FunctionDefinition","parameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"account","nameLocation":"8270:7:19","nodeType":"VariableDeclaration","scope":2913,"src":"8262:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2882,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2885,"mutability":"mutable","name":"value","nameLocation":"8287:5:19","nodeType":"VariableDeclaration","scope":2913,"src":"8279:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:19"},"returnParameters":{"id":2887,"nodeType":"ParameterList","parameters":[],"src":"8303:0:19"},"scope":3040,"src":"8247:206:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2930,"nodeType":"Block","src":"9063:54:19","statements":[{"expression":{"arguments":[{"id":2924,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"9082:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2925,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"9089:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"9098:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2923,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2931,2991],"referencedDeclaration":2991,"src":"9073:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2929,"nodeType":"ExpressionStatement","src":"9073:37:19"}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"8459:525:19","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2931,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:19","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"owner","nameLocation":"9015:5:19","nodeType":"VariableDeclaration","scope":2931,"src":"9007:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2915,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"spender","nameLocation":"9030:7:19","nodeType":"VariableDeclaration","scope":2931,"src":"9022:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2917,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"value","nameLocation":"9047:5:19","nodeType":"VariableDeclaration","scope":2931,"src":"9039:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:19"},"returnParameters":{"id":2922,"nodeType":"ParameterList","parameters":[],"src":"9063:0:19"},"scope":3040,"src":"8989:128:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2990,"nodeType":"Block","src":"10047:334:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2943,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"10061:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2944,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:19","typeDescriptions":{}}},"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2957,"nodeType":"IfStatement","src":"10057:89:19","trueBody":{"id":2956,"nodeType":"Block","src":"10082:64:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2950,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:19","typeDescriptions":{}}},"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2949,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"10103:20:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2955,"nodeType":"RevertStatement","src":"10096:39:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"10159:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2959,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:19","typeDescriptions":{}}},"id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2972,"nodeType":"IfStatement","src":"10155:90:19","trueBody":{"id":2971,"nodeType":"Block","src":"10182:63:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:19","typeDescriptions":{}}},"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2964,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"10203:19:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2970,"nodeType":"RevertStatement","src":"10196:38:19"}]}},{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2973,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"10254:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2976,"indexExpression":{"id":2974,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"10266:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2977,"indexExpression":{"id":2975,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"10273:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"10284:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"10254:35:19"},{"condition":{"id":2981,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"10303:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2989,"nodeType":"IfStatement","src":"10299:76:19","trueBody":{"id":2988,"nodeType":"Block","src":"10314:61:19","statements":[{"eventCall":{"arguments":[{"id":2983,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"10342:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2984,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"10349:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"10358:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2982,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"10333:8:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2987,"nodeType":"EmitStatement","src":"10328:36:19"}]}}]},"documentation":{"id":2932,"nodeType":"StructuredDocumentation","src":"9123:821:19","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":2991,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:19","nodeType":"FunctionDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"owner","nameLocation":"9975:5:19","nodeType":"VariableDeclaration","scope":2991,"src":"9967:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2933,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2936,"mutability":"mutable","name":"spender","nameLocation":"9990:7:19","nodeType":"VariableDeclaration","scope":2991,"src":"9982:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2935,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"value","nameLocation":"10007:5:19","nodeType":"VariableDeclaration","scope":2991,"src":"9999:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2940,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:19","nodeType":"VariableDeclaration","scope":2991,"src":"10014:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2939,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:19"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[],"src":"10047:0:19"},"scope":3040,"src":"9949:432:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3038,"nodeType":"Block","src":"10752:388:19","statements":[{"assignments":[3002],"declarations":[{"constant":false,"id":3002,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:19","nodeType":"VariableDeclaration","scope":3038,"src":"10762:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3007,"initialValue":{"arguments":[{"id":3004,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"10799:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3005,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"10806:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3003,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"10789:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3008,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"10828:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":3011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3009,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:19","memberName":"max","nodeType":"MemberAccess","src":"10848:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3037,"nodeType":"IfStatement","src":"10824:310:19","trueBody":{"id":3036,"nodeType":"Block","src":"10867:267:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3015,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"10885:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"10904:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3025,"nodeType":"IfStatement","src":"10881:130:19","trueBody":{"id":3024,"nodeType":"Block","src":"10911:100:19","statements":[{"errorCall":{"arguments":[{"id":3019,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"10963:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3020,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"10972:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"10990:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3018,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"10936:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3023,"nodeType":"RevertStatement","src":"10929:67:19"}]}},{"id":3035,"nodeType":"UncheckedBlock","src":"11024:100:19","statements":[{"expression":{"arguments":[{"id":3027,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"11061:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3028,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"11068:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3029,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"11077:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"11096:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3026,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2931,2991],"referencedDeclaration":2991,"src":"11052:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3034,"nodeType":"ExpressionStatement","src":"11052:57:19"}]}]}}]},"documentation":{"id":2992,"nodeType":"StructuredDocumentation","src":"10387:271:19","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":3039,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:19","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"owner","nameLocation":"10696:5:19","nodeType":"VariableDeclaration","scope":3039,"src":"10688:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2993,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"spender","nameLocation":"10711:7:19","nodeType":"VariableDeclaration","scope":3039,"src":"10703:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2995,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"value","nameLocation":"10728:5:19","nodeType":"VariableDeclaration","scope":3039,"src":"10720:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:19"},"returnParameters":{"id":3000,"nodeType":"ParameterList","parameters":[],"src":"10752:0:19"},"scope":3040,"src":"10663:477:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3041,"src":"1401:9741:19","usedErrors":[2400,2405,2410,2419,2424,2429],"usedEvents":[3052,3061]}],"src":"105:11038:19"},"id":19},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[3118]},"id":3119,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3042,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":3043,"nodeType":"StructuredDocumentation","src":"132:70:20","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":3118,"linearizedBaseContracts":[3118],"name":"IERC20","nameLocation":"213:6:20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3044,"nodeType":"StructuredDocumentation","src":"226:158:20","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3052,"name":"Transfer","nameLocation":"395:8:20","nodeType":"EventDefinition","parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3046,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:20","nodeType":"VariableDeclaration","scope":3052,"src":"404:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3048,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:20","nodeType":"VariableDeclaration","scope":3052,"src":"426:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3050,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:20","nodeType":"VariableDeclaration","scope":3052,"src":"446:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:20"},"src":"389:72:20"},{"anonymous":false,"documentation":{"id":3053,"nodeType":"StructuredDocumentation","src":"467:148:20","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3061,"name":"Approval","nameLocation":"626:8:20","nodeType":"EventDefinition","parameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:20","nodeType":"VariableDeclaration","scope":3061,"src":"635:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3054,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3057,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:20","nodeType":"VariableDeclaration","scope":3061,"src":"658:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3056,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3059,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:20","nodeType":"VariableDeclaration","scope":3061,"src":"683:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:20"},"src":"620:78:20"},{"documentation":{"id":3062,"nodeType":"StructuredDocumentation","src":"704:65:20","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":3067,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:20","nodeType":"FunctionDefinition","parameters":{"id":3063,"nodeType":"ParameterList","parameters":[],"src":"794:2:20"},"returnParameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3067,"src":"820:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:20"},"scope":3118,"src":"774:55:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3068,"nodeType":"StructuredDocumentation","src":"835:71:20","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":3075,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:20","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"account","nameLocation":"938:7:20","nodeType":"VariableDeclaration","scope":3075,"src":"930:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3069,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:20"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3075,"src":"970:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:20"},"scope":3118,"src":"911:68:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3076,"nodeType":"StructuredDocumentation","src":"985:213:20","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":3085,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:20","nodeType":"FunctionDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3078,"mutability":"mutable","name":"to","nameLocation":"1229:2:20","nodeType":"VariableDeclaration","scope":3085,"src":"1221:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3077,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3080,"mutability":"mutable","name":"value","nameLocation":"1241:5:20","nodeType":"VariableDeclaration","scope":3085,"src":"1233:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:20"},"returnParameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3085,"src":"1266:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3082,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:20"},"scope":3118,"src":"1203:69:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"1278:264:20","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":3095,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:20","nodeType":"FunctionDefinition","parameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"owner","nameLocation":"1574:5:20","nodeType":"VariableDeclaration","scope":3095,"src":"1566:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3087,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"spender","nameLocation":"1589:7:20","nodeType":"VariableDeclaration","scope":3095,"src":"1581:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3089,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:20"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3095,"src":"1621:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:20"},"scope":3118,"src":"1547:83:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3096,"nodeType":"StructuredDocumentation","src":"1636:667:20","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3105,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:20","nodeType":"FunctionDefinition","parameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"spender","nameLocation":"2333:7:20","nodeType":"VariableDeclaration","scope":3105,"src":"2325:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"value","nameLocation":"2350:5:20","nodeType":"VariableDeclaration","scope":3105,"src":"2342:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:20"},"returnParameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3105,"src":"2375:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3102,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:20"},"scope":3118,"src":"2308:73:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3106,"nodeType":"StructuredDocumentation","src":"2387:297:20","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3117,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:20","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"from","nameLocation":"2719:4:20","nodeType":"VariableDeclaration","scope":3117,"src":"2711:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3107,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"to","nameLocation":"2733:2:20","nodeType":"VariableDeclaration","scope":3117,"src":"2725:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"value","nameLocation":"2745:5:20","nodeType":"VariableDeclaration","scope":3117,"src":"2737:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3111,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:20"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3117,"src":"2770:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3114,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:20"},"scope":3118,"src":"2689:87:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3119,"src":"203:2575:20","usedErrors":[],"usedEvents":[3052,3061]}],"src":"106:2673:20"},"id":20},"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol","exportedSymbols":{"ERC20":[3040],"ERC4626":[3803],"IERC20":[3118],"IERC20Metadata":[3829],"IERC4626":[2388],"Math":[5492],"SafeERC20":[4155]},"id":3804,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3120,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":3124,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3804,"sourceUnit":3041,"src":"144:59:21","symbolAliases":[{"foreign":{"id":3121,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"152:6:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3122,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"160:14:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3123,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"176:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"../utils/SafeERC20.sol","id":3126,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3804,"sourceUnit":4156,"src":"204:49:21","symbolAliases":[{"foreign":{"id":3125,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"212:9:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","file":"../../../interfaces/IERC4626.sol","id":3128,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3804,"sourceUnit":2389,"src":"254:58:21","symbolAliases":[{"foreign":{"id":3127,"name":"IERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"262:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../../../utils/math/Math.sol","id":3130,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3804,"sourceUnit":5493,"src":"313:50:21","symbolAliases":[{"foreign":{"id":3129,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"321:4:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3132,"name":"ERC20","nameLocations":["3187:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":3040,"src":"3187:5:21"},"id":3133,"nodeType":"InheritanceSpecifier","src":"3187:5:21"},{"baseName":{"id":3134,"name":"IERC4626","nameLocations":["3194:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2388,"src":"3194:8:21"},"id":3135,"nodeType":"InheritanceSpecifier","src":"3194:8:21"}],"canonicalName":"ERC4626","contractDependencies":[],"contractKind":"contract","documentation":{"id":3131,"nodeType":"StructuredDocumentation","src":"365:2792:21","text":" @dev Implementation of the ERC4626 \"Tokenized Vault Standard\" as defined in\n https://eips.ethereum.org/EIPS/eip-4626[EIP-4626].\n This extension allows the minting and burning of \"shares\" (represented using the ERC20 inheritance) in exchange for\n underlying \"assets\" through standardized {deposit}, {mint}, {redeem} and {burn} workflows. This contract extends\n the ERC20 standard. Any additional extensions included along it would affect the \"shares\" token represented by this\n contract and not the \"assets\" token which is an independent contract.\n [CAUTION]\n ====\n In empty (or nearly empty) ERC-4626 vaults, deposits are at high risk of being stolen through frontrunning\n with a \"donation\" to the vault that inflates the price of a share. This is variously known as a donation or inflation\n attack and is essentially a problem of slippage. Vault deployers can protect against this attack by making an initial\n deposit of a non-trivial amount of the asset, such that price manipulation becomes infeasible. Withdrawals may\n similarly be affected by slippage. Users can protect against this attack as well as unexpected slippage in general by\n verifying the amount received is as expected, using a wrapper that performs these checks such as\n https://github.com/fei-protocol/ERC4626#erc4626router-and-base[ERC4626Router].\n Since v4.9, this implementation uses virtual assets and shares to mitigate that risk. The `_decimalsOffset()`\n corresponds to an offset in the decimal representation between the underlying asset's decimals and the vault\n decimals. This offset also determines the rate of virtual shares to virtual assets in the vault, which itself\n determines the initial exchange rate. While not fully preventing the attack, analysis shows that the default offset\n (0) makes it non-profitable, as a result of the value being captured by the virtual shares (out of the attacker's\n donation) matching the attacker's expected gains. With a larger offset, the attack becomes orders of magnitude more\n expensive than it is profitable. More details about the underlying math can be found\n xref:erc4626.adoc#inflation-attack[here].\n The drawback of this approach is that the virtual shares do capture (a very small) part of the value being accrued\n to the vault. Also, if the vault experiences losses, the users try to exit the vault, the virtual shares and assets\n will cause the first user to exit to experience reduced losses in detriment to the last users that will experience\n bigger losses. Developers willing to revert back to the pre-v4.9 behavior just need to override the\n `_convertToShares` and `_convertToAssets` functions.\n To learn more, check out our xref:ROOT:erc4626.adoc[ERC-4626 guide].\n ===="},"fullyImplemented":true,"id":3803,"linearizedBaseContracts":[3803,2388,3040,2430,3829,3118,4438],"name":"ERC4626","nameLocation":"3176:7:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3138,"libraryName":{"id":3136,"name":"Math","nameLocations":["3215:4:21"],"nodeType":"IdentifierPath","referencedDeclaration":5492,"src":"3215:4:21"},"nodeType":"UsingForDirective","src":"3209:23:21","typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"3224:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":3141,"mutability":"immutable","name":"_asset","nameLocation":"3263:6:21","nodeType":"VariableDeclaration","scope":3803,"src":"3238:31:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},"typeName":{"id":3140,"nodeType":"UserDefinedTypeName","pathNode":{"id":3139,"name":"IERC20","nameLocations":["3238:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"3238:6:21"},"referencedDeclaration":3118,"src":"3238:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"visibility":"private"},{"constant":false,"id":3143,"mutability":"immutable","name":"_underlyingDecimals","nameLocation":"3299:19:21","nodeType":"VariableDeclaration","scope":3803,"src":"3275:43:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3142,"name":"uint8","nodeType":"ElementaryTypeName","src":"3275:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"documentation":{"id":3144,"nodeType":"StructuredDocumentation","src":"3325:92:21","text":" @dev Attempted to deposit more assets than the max amount for `receiver`."},"errorSelector":"79012fb2","id":3152,"name":"ERC4626ExceededMaxDeposit","nameLocation":"3428:25:21","nodeType":"ErrorDefinition","parameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"receiver","nameLocation":"3462:8:21","nodeType":"VariableDeclaration","scope":3152,"src":"3454:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3145,"name":"address","nodeType":"ElementaryTypeName","src":"3454:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"assets","nameLocation":"3480:6:21","nodeType":"VariableDeclaration","scope":3152,"src":"3472:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"3472:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3150,"mutability":"mutable","name":"max","nameLocation":"3496:3:21","nodeType":"VariableDeclaration","scope":3152,"src":"3488:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"3488:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3453:47:21"},"src":"3422:79:21"},{"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"3507:89:21","text":" @dev Attempted to mint more shares than the max amount for `receiver`."},"errorSelector":"284ff667","id":3161,"name":"ERC4626ExceededMaxMint","nameLocation":"3607:22:21","nodeType":"ErrorDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"receiver","nameLocation":"3638:8:21","nodeType":"VariableDeclaration","scope":3161,"src":"3630:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3154,"name":"address","nodeType":"ElementaryTypeName","src":"3630:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"shares","nameLocation":"3656:6:21","nodeType":"VariableDeclaration","scope":3161,"src":"3648:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3648:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"max","nameLocation":"3672:3:21","nodeType":"VariableDeclaration","scope":3161,"src":"3664:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3629:47:21"},"src":"3601:76:21"},{"documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"3683:93:21","text":" @dev Attempted to withdraw more assets than the max amount for `receiver`."},"errorSelector":"fe9cceec","id":3170,"name":"ERC4626ExceededMaxWithdraw","nameLocation":"3787:26:21","nodeType":"ErrorDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"owner","nameLocation":"3822:5:21","nodeType":"VariableDeclaration","scope":3170,"src":"3814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3163,"name":"address","nodeType":"ElementaryTypeName","src":"3814:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"assets","nameLocation":"3837:6:21","nodeType":"VariableDeclaration","scope":3170,"src":"3829:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"3829:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3168,"mutability":"mutable","name":"max","nameLocation":"3853:3:21","nodeType":"VariableDeclaration","scope":3170,"src":"3845:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"3845:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3813:44:21"},"src":"3781:77:21"},{"documentation":{"id":3171,"nodeType":"StructuredDocumentation","src":"3864:91:21","text":" @dev Attempted to redeem more shares than the max amount for `receiver`."},"errorSelector":"b94abeec","id":3179,"name":"ERC4626ExceededMaxRedeem","nameLocation":"3966:24:21","nodeType":"ErrorDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"owner","nameLocation":"3999:5:21","nodeType":"VariableDeclaration","scope":3179,"src":"3991:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3172,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3175,"mutability":"mutable","name":"shares","nameLocation":"4014:6:21","nodeType":"VariableDeclaration","scope":3179,"src":"4006:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3174,"name":"uint256","nodeType":"ElementaryTypeName","src":"4006:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"max","nameLocation":"4030:3:21","nodeType":"VariableDeclaration","scope":3179,"src":"4022:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"4022:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3990:44:21"},"src":"3960:75:21"},{"body":{"id":3205,"nodeType":"Block","src":"4192:168:21","statements":[{"assignments":[3187,3189],"declarations":[{"constant":false,"id":3187,"mutability":"mutable","name":"success","nameLocation":"4208:7:21","nodeType":"VariableDeclaration","scope":3205,"src":"4203:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3186,"name":"bool","nodeType":"ElementaryTypeName","src":"4203:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"assetDecimals","nameLocation":"4223:13:21","nodeType":"VariableDeclaration","scope":3205,"src":"4217:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3188,"name":"uint8","nodeType":"ElementaryTypeName","src":"4217:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3193,"initialValue":{"arguments":[{"id":3191,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"4261:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}],"id":3190,"name":"_tryGetAssetDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"4240:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20_$3118_$returns$_t_bool_$_t_uint8_$","typeString":"function (contract IERC20) view returns (bool,uint8)"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint8_$","typeString":"tuple(bool,uint8)"}},"nodeType":"VariableDeclarationStatement","src":"4202:66:21"},{"expression":{"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3194,"name":"_underlyingDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"4278:19:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3195,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"4300:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"3138","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4326:2:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4300:28:21","trueExpression":{"id":3196,"name":"assetDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"4310:13:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4278:50:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3200,"nodeType":"ExpressionStatement","src":"4278:50:21"},{"expression":{"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3201,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"4338:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3202,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"4347:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"src":"4338:15:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"id":3204,"nodeType":"ExpressionStatement","src":"4338:15:21"}]},"documentation":{"id":3180,"nodeType":"StructuredDocumentation","src":"4041:119:21","text":" @dev Set the underlying asset contract. This must be an ERC20-compatible contract (ERC20 or ERC777)."},"id":3206,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"asset_","nameLocation":"4184:6:21","nodeType":"VariableDeclaration","scope":3206,"src":"4177:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},"typeName":{"id":3182,"nodeType":"UserDefinedTypeName","pathNode":{"id":3181,"name":"IERC20","nameLocations":["4177:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"4177:6:21"},"referencedDeclaration":3118,"src":"4177:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"4176:15:21"},"returnParameters":{"id":3185,"nodeType":"ParameterList","parameters":[],"src":"4192:0:21"},"scope":3803,"src":"4165:195:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3272,"nodeType":"Block","src":"4583:453:21","statements":[{"assignments":[3218,3220],"declarations":[{"constant":false,"id":3218,"mutability":"mutable","name":"success","nameLocation":"4599:7:21","nodeType":"VariableDeclaration","scope":3272,"src":"4594:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3217,"name":"bool","nodeType":"ElementaryTypeName","src":"4594:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"encodedDecimals","nameLocation":"4621:15:21","nodeType":"VariableDeclaration","scope":3272,"src":"4608:28:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3219,"name":"bytes","nodeType":"ElementaryTypeName","src":"4608:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3233,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":3228,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"4695:14:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$3829_$","typeString":"type(contract IERC20Metadata)"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4710:8:21","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"4695:23:21","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_uint8_$","typeString":"function IERC20Metadata.decimals() view returns (uint8)"}},{"components":[],"id":3230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4720:2:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_view$__$returns$_t_uint8_$","typeString":"function IERC20Metadata.decimals() view returns (uint8)"},{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}],"expression":{"id":3226,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4680:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4684:10:21","memberName":"encodeCall","nodeType":"MemberAccess","src":"4680:14:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3223,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"4648:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}],"id":3222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4640:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3221,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:21","typeDescriptions":{}}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4640:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4656:10:21","memberName":"staticcall","nodeType":"MemberAccess","src":"4640:26:21","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4640:93:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4593:140:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3234,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"4747:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3235,"name":"encodedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"4758:15:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4774:6:21","memberName":"length","nodeType":"MemberAccess","src":"4758:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4758:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4747:39:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3267,"nodeType":"IfStatement","src":"4743:260:21","trueBody":{"id":3266,"nodeType":"Block","src":"4788:215:21","statements":[{"assignments":[3241],"declarations":[{"constant":false,"id":3241,"mutability":"mutable","name":"returnedDecimals","nameLocation":"4810:16:21","nodeType":"VariableDeclaration","scope":3266,"src":"4802:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"4802:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3249,"initialValue":{"arguments":[{"id":3244,"name":"encodedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"4840:15:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4858:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"4858:7:21","typeDescriptions":{}}}],"id":3247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4857:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":3242,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4829:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4833:6:21","memberName":"decode","nodeType":"MemberAccess","src":"4829:10:21","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4829:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4802:65:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"returnedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"4885:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4910:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3252,"name":"uint8","nodeType":"ElementaryTypeName","src":"4910:5:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3251,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4905:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4905:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4917:3:21","memberName":"max","nodeType":"MemberAccess","src":"4905:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4885:35:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3265,"nodeType":"IfStatement","src":"4881:112:21","trueBody":{"id":3264,"nodeType":"Block","src":"4922:71:21","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4948:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"arguments":[{"id":3260,"name":"returnedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"4960:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4954:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3258,"name":"uint8","nodeType":"ElementaryTypeName","src":"4954:5:21","typeDescriptions":{}}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4954:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4947:31:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint8_$","typeString":"tuple(bool,uint8)"}},"functionReturnParameters":3216,"id":3263,"nodeType":"Return","src":"4940:38:21"}]}}]}},{"expression":{"components":[{"hexValue":"66616c7365","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5020:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5027:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5019:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3216,"id":3271,"nodeType":"Return","src":"5012:17:21"}]},"documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"4366:132:21","text":" @dev Attempts to fetch the asset decimals. A return value of false indicates that the attempt failed in some way."},"id":3273,"implemented":true,"kind":"function","modifiers":[],"name":"_tryGetAssetDecimals","nameLocation":"4512:20:21","nodeType":"FunctionDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"asset_","nameLocation":"4540:6:21","nodeType":"VariableDeclaration","scope":3273,"src":"4533:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},"typeName":{"id":3209,"nodeType":"UserDefinedTypeName","pathNode":{"id":3208,"name":"IERC20","nameLocations":["4533:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"4533:6:21"},"referencedDeclaration":3118,"src":"4533:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"4532:15:21"},"returnParameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3273,"src":"4570:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3212,"name":"bool","nodeType":"ElementaryTypeName","src":"4570:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3273,"src":"4576:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3214,"name":"uint8","nodeType":"ElementaryTypeName","src":"4576:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4569:13:21"},"scope":3803,"src":"4503:533:21","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[2604,3828],"body":{"id":3287,"nodeType":"Block","src":"5529:63:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3282,"name":"_underlyingDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"5546:19:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3283,"name":"_decimalsOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"5568:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5546:39:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3281,"id":3286,"nodeType":"Return","src":"5539:46:21"}]},"documentation":{"id":3274,"nodeType":"StructuredDocumentation","src":"5042:394:21","text":" @dev Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This\n \"original\" value is cached during construction of the vault contract. If this read operation fails (e.g., the\n asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals.\n See {IERC20Metadata-decimals}."},"functionSelector":"313ce567","id":3288,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"5450:8:21","nodeType":"FunctionDefinition","overrides":{"id":3278,"nodeType":"OverrideSpecifier","overrides":[{"id":3276,"name":"IERC20Metadata","nameLocations":["5490:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":3829,"src":"5490:14:21"},{"id":3277,"name":"ERC20","nameLocations":["5506:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":3040,"src":"5506:5:21"}],"src":"5481:31:21"},"parameters":{"id":3275,"nodeType":"ParameterList","parameters":[],"src":"5458:2:21"},"returnParameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3288,"src":"5522:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3279,"name":"uint8","nodeType":"ElementaryTypeName","src":"5522:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5521:7:21"},"scope":3803,"src":"5441:151:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2257],"body":{"id":3299,"nodeType":"Block","src":"5691:39:21","statements":[{"expression":{"arguments":[{"id":3296,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"5716:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}],"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5708:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3294,"name":"address","nodeType":"ElementaryTypeName","src":"5708:7:21","typeDescriptions":{}}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5708:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3293,"id":3298,"nodeType":"Return","src":"5701:22:21"}]},"documentation":{"id":3289,"nodeType":"StructuredDocumentation","src":"5598:33:21","text":"@dev See {IERC4626-asset}. "},"functionSelector":"38d52e0f","id":3300,"implemented":true,"kind":"function","modifiers":[],"name":"asset","nameLocation":"5645:5:21","nodeType":"FunctionDefinition","parameters":{"id":3290,"nodeType":"ParameterList","parameters":[],"src":"5650:2:21"},"returnParameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3300,"src":"5682:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"5682:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:9:21"},"scope":3803,"src":"5636:94:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2263],"body":{"id":3314,"nodeType":"Block","src":"5841:55:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":3310,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5883:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626_$3803","typeString":"contract ERC4626"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC4626_$3803","typeString":"contract ERC4626"}],"id":3309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5875:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3308,"name":"address","nodeType":"ElementaryTypeName","src":"5875:7:21","typeDescriptions":{}}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5875:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3306,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"5858:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5865:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3075,"src":"5858:16:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5858:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3305,"id":3313,"nodeType":"Return","src":"5851:38:21"}]},"documentation":{"id":3301,"nodeType":"StructuredDocumentation","src":"5736:39:21","text":"@dev See {IERC4626-totalAssets}. "},"functionSelector":"01e1d114","id":3315,"implemented":true,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"5789:11:21","nodeType":"FunctionDefinition","parameters":{"id":3302,"nodeType":"ParameterList","parameters":[],"src":"5800:2:21"},"returnParameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3315,"src":"5832:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3303,"name":"uint256","nodeType":"ElementaryTypeName","src":"5832:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5831:9:21"},"scope":3803,"src":"5780:116:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2271],"body":{"id":3330,"nodeType":"Block","src":"6029:69:21","statements":[{"expression":{"arguments":[{"id":3324,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"6063:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":3325,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"6071:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5492_$","typeString":"type(library Math)"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6076:8:21","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":4449,"src":"6071:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4449_$","typeString":"type(enum Math.Rounding)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6085:5:21","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":4445,"src":"6071:19:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"id":3323,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"6046:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$4449_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6046:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3322,"id":3329,"nodeType":"Return","src":"6039:52:21"}]},"documentation":{"id":3316,"nodeType":"StructuredDocumentation","src":"5902:43:21","text":"@dev See {IERC4626-convertToShares}. "},"functionSelector":"c6e6f592","id":3331,"implemented":true,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"5959:15:21","nodeType":"FunctionDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"mutability":"mutable","name":"assets","nameLocation":"5983:6:21","nodeType":"VariableDeclaration","scope":3331,"src":"5975:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"5975:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5974:16:21"},"returnParameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3331,"src":"6020:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"6020:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6019:9:21"},"scope":3803,"src":"5950:148:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2279],"body":{"id":3346,"nodeType":"Block","src":"6231:69:21","statements":[{"expression":{"arguments":[{"id":3340,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"6265:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":3341,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"6273:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5492_$","typeString":"type(library Math)"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6278:8:21","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":4449,"src":"6273:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4449_$","typeString":"type(enum Math.Rounding)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6287:5:21","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":4445,"src":"6273:19:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"id":3339,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"6248:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$4449_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6248:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3338,"id":3345,"nodeType":"Return","src":"6241:52:21"}]},"documentation":{"id":3332,"nodeType":"StructuredDocumentation","src":"6104:43:21","text":"@dev See {IERC4626-convertToAssets}. "},"functionSelector":"07a2d13a","id":3347,"implemented":true,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"6161:15:21","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"shares","nameLocation":"6185:6:21","nodeType":"VariableDeclaration","scope":3347,"src":"6177:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"6177:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6176:16:21"},"returnParameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3347,"src":"6222:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"6222:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6221:9:21"},"scope":3803,"src":"6152:148:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2287],"body":{"id":3361,"nodeType":"Block","src":"6416:41:21","statements":[{"expression":{"expression":{"arguments":[{"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6438:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3356,"name":"uint256","nodeType":"ElementaryTypeName","src":"6438:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3355,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6433:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6433:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6447:3:21","memberName":"max","nodeType":"MemberAccess","src":"6433:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3354,"id":3360,"nodeType":"Return","src":"6426:24:21"}]},"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"6306:38:21","text":"@dev See {IERC4626-maxDeposit}. "},"functionSelector":"402d267d","id":3362,"implemented":true,"kind":"function","modifiers":[],"name":"maxDeposit","nameLocation":"6358:10:21","nodeType":"FunctionDefinition","parameters":{"id":3351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3362,"src":"6369:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3349,"name":"address","nodeType":"ElementaryTypeName","src":"6369:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6368:9:21"},"returnParameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3362,"src":"6407:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"6407:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6406:9:21"},"scope":3803,"src":"6349:108:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2313],"body":{"id":3376,"nodeType":"Block","src":"6567:41:21","statements":[{"expression":{"expression":{"arguments":[{"id":3372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3370,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6584:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6584:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6598:3:21","memberName":"max","nodeType":"MemberAccess","src":"6584:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3369,"id":3375,"nodeType":"Return","src":"6577:24:21"}]},"documentation":{"id":3363,"nodeType":"StructuredDocumentation","src":"6463:35:21","text":"@dev See {IERC4626-maxMint}. "},"functionSelector":"c63d75b6","id":3377,"implemented":true,"kind":"function","modifiers":[],"name":"maxMint","nameLocation":"6512:7:21","nodeType":"FunctionDefinition","parameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3377,"src":"6520:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3364,"name":"address","nodeType":"ElementaryTypeName","src":"6520:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6519:9:21"},"returnParameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3377,"src":"6558:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"6558:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6557:9:21"},"scope":3803,"src":"6503:105:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2339],"body":{"id":3394,"nodeType":"Block","src":"6732:79:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":3387,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"6776:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3386,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"6766:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":3389,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"6784:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5492_$","typeString":"type(library Math)"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6789:8:21","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":4449,"src":"6784:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4449_$","typeString":"type(enum Math.Rounding)"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6798:5:21","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":4445,"src":"6784:19:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"id":3385,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"6749:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$4449_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3384,"id":3393,"nodeType":"Return","src":"6742:62:21"}]},"documentation":{"id":3378,"nodeType":"StructuredDocumentation","src":"6614:39:21","text":"@dev See {IERC4626-maxWithdraw}. "},"functionSelector":"ce96cb77","id":3395,"implemented":true,"kind":"function","modifiers":[],"name":"maxWithdraw","nameLocation":"6667:11:21","nodeType":"FunctionDefinition","parameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"owner","nameLocation":"6687:5:21","nodeType":"VariableDeclaration","scope":3395,"src":"6679:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3379,"name":"address","nodeType":"ElementaryTypeName","src":"6679:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6678:15:21"},"returnParameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3395,"src":"6723:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"6723:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6722:9:21"},"scope":3803,"src":"6658:153:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2367],"body":{"id":3407,"nodeType":"Block","src":"6931:40:21","statements":[{"expression":{"arguments":[{"id":3404,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"6958:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3403,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"6948:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6948:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3402,"id":3406,"nodeType":"Return","src":"6941:23:21"}]},"documentation":{"id":3396,"nodeType":"StructuredDocumentation","src":"6817:37:21","text":"@dev See {IERC4626-maxRedeem}. "},"functionSelector":"d905777e","id":3408,"implemented":true,"kind":"function","modifiers":[],"name":"maxRedeem","nameLocation":"6868:9:21","nodeType":"FunctionDefinition","parameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"owner","nameLocation":"6886:5:21","nodeType":"VariableDeclaration","scope":3408,"src":"6878:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3397,"name":"address","nodeType":"ElementaryTypeName","src":"6878:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6877:15:21"},"returnParameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3408,"src":"6922:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3400,"name":"uint256","nodeType":"ElementaryTypeName","src":"6922:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6921:9:21"},"scope":3803,"src":"6859:112:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2295],"body":{"id":3423,"nodeType":"Block","src":"7102:69:21","statements":[{"expression":{"arguments":[{"id":3417,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"7136:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":3418,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"7144:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5492_$","typeString":"type(library Math)"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7149:8:21","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":4449,"src":"7144:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4449_$","typeString":"type(enum Math.Rounding)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7158:5:21","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":4445,"src":"7144:19:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"id":3416,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"7119:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$4449_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7119:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3415,"id":3422,"nodeType":"Return","src":"7112:52:21"}]},"documentation":{"id":3409,"nodeType":"StructuredDocumentation","src":"6977:42:21","text":"@dev See {IERC4626-previewDeposit}. "},"functionSelector":"ef8b30f7","id":3424,"implemented":true,"kind":"function","modifiers":[],"name":"previewDeposit","nameLocation":"7033:14:21","nodeType":"FunctionDefinition","parameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"assets","nameLocation":"7056:6:21","nodeType":"VariableDeclaration","scope":3424,"src":"7048:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"7048:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7047:16:21"},"returnParameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3424,"src":"7093:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"7093:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7092:9:21"},"scope":3803,"src":"7024:147:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2321],"body":{"id":3439,"nodeType":"Block","src":"7296:68:21","statements":[{"expression":{"arguments":[{"id":3433,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7330:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":3434,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"7338:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5492_$","typeString":"type(library Math)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7343:8:21","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":4449,"src":"7338:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4449_$","typeString":"type(enum Math.Rounding)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7352:4:21","memberName":"Ceil","nodeType":"MemberAccess","referencedDeclaration":4446,"src":"7338:18:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"id":3432,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"7313:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$4449_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7313:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3431,"id":3438,"nodeType":"Return","src":"7306:51:21"}]},"documentation":{"id":3425,"nodeType":"StructuredDocumentation","src":"7177:39:21","text":"@dev See {IERC4626-previewMint}. "},"functionSelector":"b3d7f6b9","id":3440,"implemented":true,"kind":"function","modifiers":[],"name":"previewMint","nameLocation":"7230:11:21","nodeType":"FunctionDefinition","parameters":{"id":3428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"shares","nameLocation":"7250:6:21","nodeType":"VariableDeclaration","scope":3440,"src":"7242:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3426,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7241:16:21"},"returnParameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3440,"src":"7287:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"7287:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7286:9:21"},"scope":3803,"src":"7221:143:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2347],"body":{"id":3455,"nodeType":"Block","src":"7497:68:21","statements":[{"expression":{"arguments":[{"id":3449,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"7531:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":3450,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"7539:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5492_$","typeString":"type(library Math)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7544:8:21","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":4449,"src":"7539:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4449_$","typeString":"type(enum Math.Rounding)"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7553:4:21","memberName":"Ceil","nodeType":"MemberAccess","referencedDeclaration":4446,"src":"7539:18:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"id":3448,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"7514:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$4449_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7514:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3447,"id":3454,"nodeType":"Return","src":"7507:51:21"}]},"documentation":{"id":3441,"nodeType":"StructuredDocumentation","src":"7370:43:21","text":"@dev See {IERC4626-previewWithdraw}. "},"functionSelector":"0a28a477","id":3456,"implemented":true,"kind":"function","modifiers":[],"name":"previewWithdraw","nameLocation":"7427:15:21","nodeType":"FunctionDefinition","parameters":{"id":3444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3443,"mutability":"mutable","name":"assets","nameLocation":"7451:6:21","nodeType":"VariableDeclaration","scope":3456,"src":"7443:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3442,"name":"uint256","nodeType":"ElementaryTypeName","src":"7443:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7442:16:21"},"returnParameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3456,"src":"7488:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"7488:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7487:9:21"},"scope":3803,"src":"7418:147:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2375],"body":{"id":3471,"nodeType":"Block","src":"7694:69:21","statements":[{"expression":{"arguments":[{"id":3465,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"7728:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":3466,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"7736:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5492_$","typeString":"type(library Math)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7741:8:21","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":4449,"src":"7736:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4449_$","typeString":"type(enum Math.Rounding)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7750:5:21","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":4445,"src":"7736:19:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"id":3464,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"7711:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$4449_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7711:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3463,"id":3470,"nodeType":"Return","src":"7704:52:21"}]},"documentation":{"id":3457,"nodeType":"StructuredDocumentation","src":"7571:41:21","text":"@dev See {IERC4626-previewRedeem}. "},"functionSelector":"4cdad506","id":3472,"implemented":true,"kind":"function","modifiers":[],"name":"previewRedeem","nameLocation":"7626:13:21","nodeType":"FunctionDefinition","parameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"shares","nameLocation":"7648:6:21","nodeType":"VariableDeclaration","scope":3472,"src":"7640:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"7640:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7639:16:21"},"returnParameters":{"id":3463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3472,"src":"7685:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"7685:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7684:9:21"},"scope":3803,"src":"7617:146:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2305],"body":{"id":3515,"nodeType":"Block","src":"7893:308:21","statements":[{"assignments":[3483],"declarations":[{"constant":false,"id":3483,"mutability":"mutable","name":"maxAssets","nameLocation":"7911:9:21","nodeType":"VariableDeclaration","scope":3515,"src":"7903:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"7903:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3487,"initialValue":{"arguments":[{"id":3485,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"7934:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3484,"name":"maxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"7923:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7923:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7903:40:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3488,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"7957:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3489,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"7966:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7957:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3498,"nodeType":"IfStatement","src":"7953:110:21","trueBody":{"id":3497,"nodeType":"Block","src":"7977:86:21","statements":[{"errorCall":{"arguments":[{"id":3492,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"8024:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3493,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"8034:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3494,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"8042:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3491,"name":"ERC4626ExceededMaxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7998:25:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7998:54:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3496,"nodeType":"RevertStatement","src":"7991:61:21"}]}},{"assignments":[3500],"declarations":[{"constant":false,"id":3500,"mutability":"mutable","name":"shares","nameLocation":"8081:6:21","nodeType":"VariableDeclaration","scope":3515,"src":"8073:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"8073:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3504,"initialValue":{"arguments":[{"id":3502,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"8105:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3501,"name":"previewDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"8090:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8090:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8073:39:21"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3506,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"8131:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8131:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3508,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"8145:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3509,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"8155:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3510,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"8163:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3505,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"8122:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3512,"nodeType":"ExpressionStatement","src":"8122:48:21"},{"expression":{"id":3513,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"8188:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3481,"id":3514,"nodeType":"Return","src":"8181:13:21"}]},"documentation":{"id":3473,"nodeType":"StructuredDocumentation","src":"7769:35:21","text":"@dev See {IERC4626-deposit}. "},"functionSelector":"6e553f65","id":3516,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"7818:7:21","nodeType":"FunctionDefinition","parameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3475,"mutability":"mutable","name":"assets","nameLocation":"7834:6:21","nodeType":"VariableDeclaration","scope":3516,"src":"7826:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"7826:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3477,"mutability":"mutable","name":"receiver","nameLocation":"7850:8:21","nodeType":"VariableDeclaration","scope":3516,"src":"7842:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3476,"name":"address","nodeType":"ElementaryTypeName","src":"7842:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7825:34:21"},"returnParameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3516,"src":"7884:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"7884:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7883:9:21"},"scope":3803,"src":"7809:392:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2331],"body":{"id":3559,"nodeType":"Block","src":"8549:299:21","statements":[{"assignments":[3527],"declarations":[{"constant":false,"id":3527,"mutability":"mutable","name":"maxShares","nameLocation":"8567:9:21","nodeType":"VariableDeclaration","scope":3559,"src":"8559:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"8559:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3531,"initialValue":{"arguments":[{"id":3529,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"8587:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3528,"name":"maxMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"8579:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8579:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8559:37:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3532,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"8610:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3533,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"8619:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8610:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3542,"nodeType":"IfStatement","src":"8606:107:21","trueBody":{"id":3541,"nodeType":"Block","src":"8630:83:21","statements":[{"errorCall":{"arguments":[{"id":3536,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"8674:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3537,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"8684:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3538,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"8692:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3535,"name":"ERC4626ExceededMaxMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"8651:22:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8651:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3540,"nodeType":"RevertStatement","src":"8644:58:21"}]}},{"assignments":[3544],"declarations":[{"constant":false,"id":3544,"mutability":"mutable","name":"assets","nameLocation":"8731:6:21","nodeType":"VariableDeclaration","scope":3559,"src":"8723:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"8723:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3548,"initialValue":{"arguments":[{"id":3546,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"8752:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3545,"name":"previewMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"8740:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8740:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8723:36:21"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3550,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"8778:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8778:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3552,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"8792:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3553,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"8802:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3554,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"8810:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3549,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"8769:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8769:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3556,"nodeType":"ExpressionStatement","src":"8769:48:21"},{"expression":{"id":3557,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"8835:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3525,"id":3558,"nodeType":"Return","src":"8828:13:21"}]},"documentation":{"id":3517,"nodeType":"StructuredDocumentation","src":"8207:256:21","text":"@dev See {IERC4626-mint}.\n As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero.\n In this case, the shares will be minted without requiring any assets to be deposited."},"functionSelector":"94bf804d","id":3560,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"8477:4:21","nodeType":"FunctionDefinition","parameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"shares","nameLocation":"8490:6:21","nodeType":"VariableDeclaration","scope":3560,"src":"8482:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"8482:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3521,"mutability":"mutable","name":"receiver","nameLocation":"8506:8:21","nodeType":"VariableDeclaration","scope":3560,"src":"8498:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"8498:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8481:34:21"},"returnParameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3560,"src":"8540:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"8540:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8539:9:21"},"scope":3803,"src":"8468:380:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2359],"body":{"id":3606,"nodeType":"Block","src":"8995:313:21","statements":[{"assignments":[3573],"declarations":[{"constant":false,"id":3573,"mutability":"mutable","name":"maxAssets","nameLocation":"9013:9:21","nodeType":"VariableDeclaration","scope":3606,"src":"9005:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3572,"name":"uint256","nodeType":"ElementaryTypeName","src":"9005:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3577,"initialValue":{"arguments":[{"id":3575,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"9037:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3574,"name":"maxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"9025:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9025:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9005:38:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3578,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"9057:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3579,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"9066:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9057:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3588,"nodeType":"IfStatement","src":"9053:108:21","trueBody":{"id":3587,"nodeType":"Block","src":"9077:84:21","statements":[{"errorCall":{"arguments":[{"id":3582,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"9125:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3583,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"9132:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3584,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"9140:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3581,"name":"ERC4626ExceededMaxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"9098:26:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9098:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3586,"nodeType":"RevertStatement","src":"9091:59:21"}]}},{"assignments":[3590],"declarations":[{"constant":false,"id":3590,"mutability":"mutable","name":"shares","nameLocation":"9179:6:21","nodeType":"VariableDeclaration","scope":3606,"src":"9171:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"9171:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3594,"initialValue":{"arguments":[{"id":3592,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"9204:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3591,"name":"previewWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"9188:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9188:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9171:40:21"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3596,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"9231:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9231:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3598,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"9245:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3599,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"9255:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3600,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"9262:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3601,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"9270:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3595,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"9221:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9221:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3603,"nodeType":"ExpressionStatement","src":"9221:56:21"},{"expression":{"id":3604,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"9295:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3571,"id":3605,"nodeType":"Return","src":"9288:13:21"}]},"documentation":{"id":3561,"nodeType":"StructuredDocumentation","src":"8854:36:21","text":"@dev See {IERC4626-withdraw}. "},"functionSelector":"b460af94","id":3607,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"8904:8:21","nodeType":"FunctionDefinition","parameters":{"id":3568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"assets","nameLocation":"8921:6:21","nodeType":"VariableDeclaration","scope":3607,"src":"8913:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"8913:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"receiver","nameLocation":"8937:8:21","nodeType":"VariableDeclaration","scope":3607,"src":"8929:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3564,"name":"address","nodeType":"ElementaryTypeName","src":"8929:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3567,"mutability":"mutable","name":"owner","nameLocation":"8955:5:21","nodeType":"VariableDeclaration","scope":3607,"src":"8947:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3566,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8912:49:21"},"returnParameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3607,"src":"8986:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"8986:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8985:9:21"},"scope":3803,"src":"8895:413:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2387],"body":{"id":3653,"nodeType":"Block","src":"9451:307:21","statements":[{"assignments":[3620],"declarations":[{"constant":false,"id":3620,"mutability":"mutable","name":"maxShares","nameLocation":"9469:9:21","nodeType":"VariableDeclaration","scope":3653,"src":"9461:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"9461:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3624,"initialValue":{"arguments":[{"id":3622,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"9491:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3621,"name":"maxRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"9481:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9481:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9461:36:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3625,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"9511:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3626,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"9520:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9511:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3635,"nodeType":"IfStatement","src":"9507:106:21","trueBody":{"id":3634,"nodeType":"Block","src":"9531:82:21","statements":[{"errorCall":{"arguments":[{"id":3629,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"9577:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3630,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"9584:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3631,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"9592:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3628,"name":"ERC4626ExceededMaxRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"9552:24:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3633,"nodeType":"RevertStatement","src":"9545:57:21"}]}},{"assignments":[3637],"declarations":[{"constant":false,"id":3637,"mutability":"mutable","name":"assets","nameLocation":"9631:6:21","nodeType":"VariableDeclaration","scope":3653,"src":"9623:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"9623:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3641,"initialValue":{"arguments":[{"id":3639,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"9654:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3638,"name":"previewRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"9640:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9640:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9623:38:21"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3643,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"9681:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9681:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3645,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"9695:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3646,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"9705:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3647,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"9712:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3648,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"9720:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3642,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"9671:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3650,"nodeType":"ExpressionStatement","src":"9671:56:21"},{"expression":{"id":3651,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"9745:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3618,"id":3652,"nodeType":"Return","src":"9738:13:21"}]},"documentation":{"id":3608,"nodeType":"StructuredDocumentation","src":"9314:34:21","text":"@dev See {IERC4626-redeem}. "},"functionSelector":"ba087652","id":3654,"implemented":true,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"9362:6:21","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"shares","nameLocation":"9377:6:21","nodeType":"VariableDeclaration","scope":3654,"src":"9369:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"9369:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"receiver","nameLocation":"9393:8:21","nodeType":"VariableDeclaration","scope":3654,"src":"9385:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3611,"name":"address","nodeType":"ElementaryTypeName","src":"9385:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"owner","nameLocation":"9411:5:21","nodeType":"VariableDeclaration","scope":3654,"src":"9403:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3613,"name":"address","nodeType":"ElementaryTypeName","src":"9403:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9368:49:21"},"returnParameters":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3654,"src":"9442:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3616,"name":"uint256","nodeType":"ElementaryTypeName","src":"9442:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9441:9:21"},"scope":3803,"src":"9353:405:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3681,"nodeType":"Block","src":"9988:107:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3667,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"10019:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10019:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10035:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3670,"name":"_decimalsOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10041:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10041:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10035:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10019:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3674,"name":"totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"10060:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10060:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10076:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10060:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3678,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"10079:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"expression":{"id":3665,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"10005:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10012:6:21","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":4869,"src":"10005:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$4449_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10005:83:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3664,"id":3680,"nodeType":"Return","src":"9998:90:21"}]},"documentation":{"id":3655,"nodeType":"StructuredDocumentation","src":"9764:113:21","text":" @dev Internal conversion function (from assets to shares) with support for rounding direction."},"id":3682,"implemented":true,"kind":"function","modifiers":[],"name":"_convertToShares","nameLocation":"9891:16:21","nodeType":"FunctionDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"assets","nameLocation":"9916:6:21","nodeType":"VariableDeclaration","scope":3682,"src":"9908:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"9908:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3660,"mutability":"mutable","name":"rounding","nameLocation":"9938:8:21","nodeType":"VariableDeclaration","scope":3682,"src":"9924:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"},"typeName":{"id":3659,"nodeType":"UserDefinedTypeName","pathNode":{"id":3658,"name":"Math.Rounding","nameLocations":["9924:4:21","9929:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4449,"src":"9924:13:21"},"referencedDeclaration":4449,"src":"9924:13:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9907:40:21"},"returnParameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3682,"src":"9979:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"9979:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9978:9:21"},"scope":3803,"src":"9882:213:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3709,"nodeType":"Block","src":"10325:107:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3695,"name":"totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"10356:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10356:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10372:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10356:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3699,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"10375:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10391:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3702,"name":"_decimalsOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"10397:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10397:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10391:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10375:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3706,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"10416:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"expression":{"id":3693,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"10342:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10349:6:21","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":4869,"src":"10342:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$4449_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10342:83:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3692,"id":3708,"nodeType":"Return","src":"10335:90:21"}]},"documentation":{"id":3683,"nodeType":"StructuredDocumentation","src":"10101:113:21","text":" @dev Internal conversion function (from shares to assets) with support for rounding direction."},"id":3710,"implemented":true,"kind":"function","modifiers":[],"name":"_convertToAssets","nameLocation":"10228:16:21","nodeType":"FunctionDefinition","parameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"mutability":"mutable","name":"shares","nameLocation":"10253:6:21","nodeType":"VariableDeclaration","scope":3710,"src":"10245:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"10245:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3688,"mutability":"mutable","name":"rounding","nameLocation":"10275:8:21","nodeType":"VariableDeclaration","scope":3710,"src":"10261:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"},"typeName":{"id":3687,"nodeType":"UserDefinedTypeName","pathNode":{"id":3686,"name":"Math.Rounding","nameLocations":["10261:4:21","10266:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4449,"src":"10261:13:21"},"referencedDeclaration":4449,"src":"10261:13:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10244:40:21"},"returnParameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3710,"src":"10316:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3690,"name":"uint256","nodeType":"ElementaryTypeName","src":"10316:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10315:9:21"},"scope":3803,"src":"10219:213:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3746,"nodeType":"Block","src":"10597:729:21","statements":[{"expression":{"arguments":[{"id":3725,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"11191:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},{"id":3726,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"11199:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3729,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11215:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626_$3803","typeString":"contract ERC4626"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC4626_$3803","typeString":"contract ERC4626"}],"id":3728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11207:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3727,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:21","typeDescriptions":{}}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11207:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3731,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"11222:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3722,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"11164:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$4155_$","typeString":"type(library SafeERC20)"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11174:16:21","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":3942,"src":"11164:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3118_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11164:65:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3733,"nodeType":"ExpressionStatement","src":"11164:65:21"},{"expression":{"arguments":[{"id":3735,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"11245:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3736,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"11255:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3734,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"11239:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3738,"nodeType":"ExpressionStatement","src":"11239:23:21"},{"eventCall":{"arguments":[{"id":3740,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"11286:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3741,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"11294:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3742,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"11304:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3743,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"11312:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3739,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"11278:7:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11278:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3745,"nodeType":"EmitStatement","src":"11273:46:21"}]},"documentation":{"id":3711,"nodeType":"StructuredDocumentation","src":"10438:53:21","text":" @dev Deposit/mint common workflow."},"id":3747,"implemented":true,"kind":"function","modifiers":[],"name":"_deposit","nameLocation":"10505:8:21","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"caller","nameLocation":"10522:6:21","nodeType":"VariableDeclaration","scope":3747,"src":"10514:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3712,"name":"address","nodeType":"ElementaryTypeName","src":"10514:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3715,"mutability":"mutable","name":"receiver","nameLocation":"10538:8:21","nodeType":"VariableDeclaration","scope":3747,"src":"10530:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3714,"name":"address","nodeType":"ElementaryTypeName","src":"10530:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"assets","nameLocation":"10556:6:21","nodeType":"VariableDeclaration","scope":3747,"src":"10548:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint256","nodeType":"ElementaryTypeName","src":"10548:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"shares","nameLocation":"10572:6:21","nodeType":"VariableDeclaration","scope":3747,"src":"10564:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"10564:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10513:66:21"},"returnParameters":{"id":3721,"nodeType":"ParameterList","parameters":[],"src":"10597:0:21"},"scope":3803,"src":"10496:830:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3793,"nodeType":"Block","src":"11556:751:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"11570:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3762,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"11580:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11570:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3771,"nodeType":"IfStatement","src":"11566:84:21","trueBody":{"id":3770,"nodeType":"Block","src":"11587:63:21","statements":[{"expression":{"arguments":[{"id":3765,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"11617:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3766,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"11624:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3767,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"11632:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3764,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"11601:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11601:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3769,"nodeType":"ExpressionStatement","src":"11601:38:21"}]}},{"expression":{"arguments":[{"id":3773,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"12163:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3774,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"12170:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3772,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"12157:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12157:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3776,"nodeType":"ExpressionStatement","src":"12157:20:21"},{"expression":{"arguments":[{"id":3780,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"12210:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},{"id":3781,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"12218:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3782,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"12228:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3777,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"12187:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$4155_$","typeString":"type(library SafeERC20)"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12197:12:21","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3915,"src":"12187:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3118_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12187:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3784,"nodeType":"ExpressionStatement","src":"12187:48:21"},{"eventCall":{"arguments":[{"id":3786,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"12260:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3787,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"12268:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3788,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"12278:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3789,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"12285:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3790,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"12293:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3785,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"12251:8:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12251:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3792,"nodeType":"EmitStatement","src":"12246:54:21"}]},"documentation":{"id":3748,"nodeType":"StructuredDocumentation","src":"11332:56:21","text":" @dev Withdraw/redeem common workflow."},"id":3794,"implemented":true,"kind":"function","modifiers":[],"name":"_withdraw","nameLocation":"11402:9:21","nodeType":"FunctionDefinition","parameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"caller","nameLocation":"11429:6:21","nodeType":"VariableDeclaration","scope":3794,"src":"11421:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3749,"name":"address","nodeType":"ElementaryTypeName","src":"11421:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3752,"mutability":"mutable","name":"receiver","nameLocation":"11453:8:21","nodeType":"VariableDeclaration","scope":3794,"src":"11445:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3751,"name":"address","nodeType":"ElementaryTypeName","src":"11445:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3754,"mutability":"mutable","name":"owner","nameLocation":"11479:5:21","nodeType":"VariableDeclaration","scope":3794,"src":"11471:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3753,"name":"address","nodeType":"ElementaryTypeName","src":"11471:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3756,"mutability":"mutable","name":"assets","nameLocation":"11502:6:21","nodeType":"VariableDeclaration","scope":3794,"src":"11494:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"11494:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3758,"mutability":"mutable","name":"shares","nameLocation":"11526:6:21","nodeType":"VariableDeclaration","scope":3794,"src":"11518:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"11518:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11411:127:21"},"returnParameters":{"id":3760,"nodeType":"ParameterList","parameters":[],"src":"11556:0:21"},"scope":3803,"src":"11393:914:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3801,"nodeType":"Block","src":"12378:25:21","statements":[{"expression":{"hexValue":"30","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12395:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3798,"id":3800,"nodeType":"Return","src":"12388:8:21"}]},"id":3802,"implemented":true,"kind":"function","modifiers":[],"name":"_decimalsOffset","nameLocation":"12322:15:21","nodeType":"FunctionDefinition","parameters":{"id":3795,"nodeType":"ParameterList","parameters":[],"src":"12337:2:21"},"returnParameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3802,"src":"12371:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3796,"name":"uint8","nodeType":"ElementaryTypeName","src":"12371:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12370:7:21"},"scope":3803,"src":"12313:90:21","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3804,"src":"3158:9247:21","usedErrors":[2400,2405,2410,2419,2424,2429,3152,3161,3170,3179,3882,4163,4168,4171,4444],"usedEvents":[2239,2251,3052,3061]}],"src":"118:12288:21"},"id":21},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[3118],"IERC20Metadata":[3829]},"id":3830,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3805,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":3807,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3830,"sourceUnit":3119,"src":"151:37:22","symbolAliases":[{"foreign":{"id":3806,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"159:6:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3809,"name":"IERC20","nameLocations":["305:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"305:6:22"},"id":3810,"nodeType":"InheritanceSpecifier","src":"305:6:22"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3808,"nodeType":"StructuredDocumentation","src":"190:86:22","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":3829,"linearizedBaseContracts":[3829,3118],"name":"IERC20Metadata","nameLocation":"287:14:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3811,"nodeType":"StructuredDocumentation","src":"318:54:22","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":3816,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:22","nodeType":"FunctionDefinition","parameters":{"id":3812,"nodeType":"ParameterList","parameters":[],"src":"390:2:22"},"returnParameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3816,"src":"416:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3813,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:22"},"scope":3829,"src":"377:54:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3817,"nodeType":"StructuredDocumentation","src":"437:56:22","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":3822,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:22","nodeType":"FunctionDefinition","parameters":{"id":3818,"nodeType":"ParameterList","parameters":[],"src":"513:2:22"},"returnParameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3822,"src":"539:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3819,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:22"},"scope":3829,"src":"498:56:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3823,"nodeType":"StructuredDocumentation","src":"560:65:22","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":3828,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:22","nodeType":"FunctionDefinition","parameters":{"id":3824,"nodeType":"ParameterList","parameters":[],"src":"647:2:22"},"returnParameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3828,"src":"673:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3825,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:22"},"scope":3829,"src":"630:50:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3830,"src":"277:405:22","usedErrors":[],"usedEvents":[3052,3061]}],"src":"125:558:22"},"id":22},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[3865]},"id":3866,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3831,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":3832,"nodeType":"StructuredDocumentation","src":"149:1963:23","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":3865,"linearizedBaseContracts":[3865],"name":"IERC20Permit","nameLocation":"2123:12:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3833,"nodeType":"StructuredDocumentation","src":"2142:850:23","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":3850,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:23","nodeType":"FunctionDefinition","parameters":{"id":3848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"owner","nameLocation":"3030:5:23","nodeType":"VariableDeclaration","scope":3850,"src":"3022:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3834,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3837,"mutability":"mutable","name":"spender","nameLocation":"3053:7:23","nodeType":"VariableDeclaration","scope":3850,"src":"3045:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3836,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"value","nameLocation":"3078:5:23","nodeType":"VariableDeclaration","scope":3850,"src":"3070:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3841,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:23","nodeType":"VariableDeclaration","scope":3850,"src":"3093:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3843,"mutability":"mutable","name":"v","nameLocation":"3125:1:23","nodeType":"VariableDeclaration","scope":3850,"src":"3119:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3842,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3845,"mutability":"mutable","name":"r","nameLocation":"3144:1:23","nodeType":"VariableDeclaration","scope":3850,"src":"3136:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"s","nameLocation":"3163:1:23","nodeType":"VariableDeclaration","scope":3850,"src":"3155:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:23"},"returnParameters":{"id":3849,"nodeType":"ParameterList","parameters":[],"src":"3179:0:23"},"scope":3865,"src":"2997:183:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3851,"nodeType":"StructuredDocumentation","src":"3186:294:23","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":3858,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:23","nodeType":"FunctionDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"owner","nameLocation":"3509:5:23","nodeType":"VariableDeclaration","scope":3858,"src":"3501:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3852,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:23"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3858,"src":"3539:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:23"},"scope":3865,"src":"3485:63:23","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3859,"nodeType":"StructuredDocumentation","src":"3554:128:23","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":3864,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:23","nodeType":"FunctionDefinition","parameters":{"id":3860,"nodeType":"ParameterList","parameters":[],"src":"3765:2:23"},"returnParameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3864,"src":"3791:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:23"},"scope":3865,"src":"3740:60:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3866,"src":"2113:1689:23","usedErrors":[],"usedEvents":[]}],"src":"123:3680:23"},"id":23},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[4408],"IERC20":[3118],"IERC20Permit":[3865],"SafeERC20":[4155]},"id":4156,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3867,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":3869,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4156,"sourceUnit":3119,"src":"141:37:24","symbolAliases":[{"foreign":{"id":3868,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"149:6:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":3871,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4156,"sourceUnit":3866,"src":"179:60:24","symbolAliases":[{"foreign":{"id":3870,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"187:12:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":3873,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4156,"sourceUnit":4409,"src":"240:51:24","symbolAliases":[{"foreign":{"id":3872,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"248:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":3874,"nodeType":"StructuredDocumentation","src":"293:457:24","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":4155,"linearizedBaseContracts":[4155],"name":"SafeERC20","nameLocation":"759:9:24","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3877,"libraryName":{"id":3875,"name":"Address","nameLocations":["781:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":4408,"src":"781:7:24"},"nodeType":"UsingForDirective","src":"775:26:24","typeName":{"id":3876,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":3878,"nodeType":"StructuredDocumentation","src":"807:64:24","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":3882,"name":"SafeERC20FailedOperation","nameLocation":"882:24:24","nodeType":"ErrorDefinition","parameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"token","nameLocation":"915:5:24","nodeType":"VariableDeclaration","scope":3882,"src":"907:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3879,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:24"},"src":"876:46:24"},{"documentation":{"id":3883,"nodeType":"StructuredDocumentation","src":"928:71:24","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":3891,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:24","nodeType":"ErrorDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"spender","nameLocation":"1051:7:24","nodeType":"VariableDeclaration","scope":3891,"src":"1043:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3884,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3887,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:24","nodeType":"VariableDeclaration","scope":3891,"src":"1060:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3889,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:24","nodeType":"VariableDeclaration","scope":3891,"src":"1086:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:24"},"src":"1004:109:24"},{"body":{"id":3914,"nodeType":"Block","src":"1375:88:24","statements":[{"expression":{"arguments":[{"id":3903,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"1405:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":3906,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"1427:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:24","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3085,"src":"1427:14:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":3908,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"1444:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"1448:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":3904,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:24","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3902,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"1385:19:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3118_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3913,"nodeType":"ExpressionStatement","src":"1385:71:24"}]},"documentation":{"id":3892,"nodeType":"StructuredDocumentation","src":"1119:179:24","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":3915,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:24","nodeType":"FunctionDefinition","parameters":{"id":3900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"token","nameLocation":"1332:5:24","nodeType":"VariableDeclaration","scope":3915,"src":"1325:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},"typeName":{"id":3894,"nodeType":"UserDefinedTypeName","pathNode":{"id":3893,"name":"IERC20","nameLocations":["1325:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"1325:6:24"},"referencedDeclaration":3118,"src":"1325:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3897,"mutability":"mutable","name":"to","nameLocation":"1347:2:24","nodeType":"VariableDeclaration","scope":3915,"src":"1339:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3896,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"value","nameLocation":"1359:5:24","nodeType":"VariableDeclaration","scope":3915,"src":"1351:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:24"},"returnParameters":{"id":3901,"nodeType":"ParameterList","parameters":[],"src":"1375:0:24"},"scope":4155,"src":"1303:160:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3941,"nodeType":"Block","src":"1792:98:24","statements":[{"expression":{"arguments":[{"id":3929,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"1822:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":3932,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"1844:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:24","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":3117,"src":"1844:18:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":3934,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"1865:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3935,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"1871:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"1875:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":3930,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:24","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3928,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"1802:19:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3118_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3940,"nodeType":"ExpressionStatement","src":"1802:81:24"}]},"documentation":{"id":3916,"nodeType":"StructuredDocumentation","src":"1469:228:24","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":3942,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:24","nodeType":"FunctionDefinition","parameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"token","nameLocation":"1735:5:24","nodeType":"VariableDeclaration","scope":3942,"src":"1728:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},"typeName":{"id":3918,"nodeType":"UserDefinedTypeName","pathNode":{"id":3917,"name":"IERC20","nameLocations":["1728:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"1728:6:24"},"referencedDeclaration":3118,"src":"1728:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"from","nameLocation":"1750:4:24","nodeType":"VariableDeclaration","scope":3942,"src":"1742:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3920,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3923,"mutability":"mutable","name":"to","nameLocation":"1764:2:24","nodeType":"VariableDeclaration","scope":3942,"src":"1756:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3922,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3925,"mutability":"mutable","name":"value","nameLocation":"1776:5:24","nodeType":"VariableDeclaration","scope":3942,"src":"1768:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:24"},"returnParameters":{"id":3927,"nodeType":"ParameterList","parameters":[],"src":"1792:0:24"},"scope":4155,"src":"1702:188:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3972,"nodeType":"Block","src":"2167:139:24","statements":[{"assignments":[3954],"declarations":[{"constant":false,"id":3954,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:24","nodeType":"VariableDeclaration","scope":3972,"src":"2177:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3963,"initialValue":{"arguments":[{"arguments":[{"id":3959,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$4155","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$4155","typeString":"library SafeERC20"}],"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3957,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:24","typeDescriptions":{}}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3961,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"2231:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3955,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"2200:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:24","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"2200:15:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:24"},{"expression":{"arguments":[{"id":3965,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"2262:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},{"id":3966,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"2269:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3967,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"2278:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"2293:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3964,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"2249:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3118_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3971,"nodeType":"ExpressionStatement","src":"2249:50:24"}]},"documentation":{"id":3943,"nodeType":"StructuredDocumentation","src":"1896:180:24","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":3973,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:24","nodeType":"FunctionDefinition","parameters":{"id":3951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"token","nameLocation":"2119:5:24","nodeType":"VariableDeclaration","scope":3973,"src":"2112:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},"typeName":{"id":3945,"nodeType":"UserDefinedTypeName","pathNode":{"id":3944,"name":"IERC20","nameLocations":["2112:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"2112:6:24"},"referencedDeclaration":3118,"src":"2112:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3948,"mutability":"mutable","name":"spender","nameLocation":"2134:7:24","nodeType":"VariableDeclaration","scope":3973,"src":"2126:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3947,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3950,"mutability":"mutable","name":"value","nameLocation":"2151:5:24","nodeType":"VariableDeclaration","scope":3973,"src":"2143:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:24"},"returnParameters":{"id":3952,"nodeType":"ParameterList","parameters":[],"src":"2167:0:24"},"scope":4155,"src":"2081:225:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4015,"nodeType":"Block","src":"2607:370:24","statements":[{"id":4014,"nodeType":"UncheckedBlock","src":"2617:354:24","statements":[{"assignments":[3985],"declarations":[{"constant":false,"id":3985,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:24","nodeType":"VariableDeclaration","scope":4014,"src":"2641:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3994,"initialValue":{"arguments":[{"arguments":[{"id":3990,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$4155","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$4155","typeString":"library SafeERC20"}],"id":3989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3988,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:24","typeDescriptions":{}}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3992,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"2699:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3986,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"2668:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:24","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3095,"src":"2668:15:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3995,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"2725:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3996,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"2744:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4005,"nodeType":"IfStatement","src":"2721:160:24","trueBody":{"id":4004,"nodeType":"Block","src":"2763:118:24","statements":[{"errorCall":{"arguments":[{"id":3999,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"2821:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4000,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"2830:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4001,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"2848:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3998,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"2788:32:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4003,"nodeType":"RevertStatement","src":"2781:85:24"}]}},{"expression":{"arguments":[{"id":4007,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"2907:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},{"id":4008,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"2914:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4009,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"2923:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4010,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"2942:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4006,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"2894:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3118_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4013,"nodeType":"ExpressionStatement","src":"2894:66:24"}]}]},"documentation":{"id":3974,"nodeType":"StructuredDocumentation","src":"2312:192:24","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":4016,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:24","nodeType":"FunctionDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"token","nameLocation":"2547:5:24","nodeType":"VariableDeclaration","scope":4016,"src":"2540:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},"typeName":{"id":3976,"nodeType":"UserDefinedTypeName","pathNode":{"id":3975,"name":"IERC20","nameLocations":["2540:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"2540:6:24"},"referencedDeclaration":3118,"src":"2540:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3979,"mutability":"mutable","name":"spender","nameLocation":"2562:7:24","nodeType":"VariableDeclaration","scope":4016,"src":"2554:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3978,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3981,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:24","nodeType":"VariableDeclaration","scope":4016,"src":"2571:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:24"},"returnParameters":{"id":3983,"nodeType":"ParameterList","parameters":[],"src":"2607:0:24"},"scope":4155,"src":"2509:468:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4062,"nodeType":"Block","src":"3373:303:24","statements":[{"assignments":[4028],"declarations":[{"constant":false,"id":4028,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:24","nodeType":"VariableDeclaration","scope":4062,"src":"3383:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4027,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4037,"initialValue":{"arguments":[{"expression":{"id":4031,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"3426:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:24","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3105,"src":"3426:13:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":4033,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"3442:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"3451:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":4029,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:24","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:24"},{"condition":{"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:24","subExpression":{"arguments":[{"id":4039,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"3498:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},{"id":4040,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"3505:12:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4038,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"3474:23:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3118_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4061,"nodeType":"IfStatement","src":"3469:201:24","trueBody":{"id":4060,"nodeType":"Block","src":"3520:150:24","statements":[{"expression":{"arguments":[{"id":4044,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"3554:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":4047,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"3576:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:24","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3105,"src":"3576:13:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":4049,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"3592:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":4045,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:24","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4043,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"3534:19:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3118_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4054,"nodeType":"ExpressionStatement","src":"3534:71:24"},{"expression":{"arguments":[{"id":4056,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"3639:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},{"id":4057,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"3646:12:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4055,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"3619:19:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3118_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4059,"nodeType":"ExpressionStatement","src":"3619:40:24"}]}}]},"documentation":{"id":4017,"nodeType":"StructuredDocumentation","src":"2983:308:24","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":4063,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:24","nodeType":"FunctionDefinition","parameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"token","nameLocation":"3325:5:24","nodeType":"VariableDeclaration","scope":4063,"src":"3318:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},"typeName":{"id":4019,"nodeType":"UserDefinedTypeName","pathNode":{"id":4018,"name":"IERC20","nameLocations":["3318:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"3318:6:24"},"referencedDeclaration":3118,"src":"3318:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4022,"mutability":"mutable","name":"spender","nameLocation":"3340:7:24","nodeType":"VariableDeclaration","scope":4063,"src":"3332:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4021,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4024,"mutability":"mutable","name":"value","nameLocation":"3357:5:24","nodeType":"VariableDeclaration","scope":4063,"src":"3349:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4023,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:24"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[],"src":"3373:0:24"},"scope":4155,"src":"3296:380:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4104,"nodeType":"Block","src":"4129:559:24","statements":[{"assignments":[4073],"declarations":[{"constant":false,"id":4073,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:24","nodeType":"VariableDeclaration","scope":4104,"src":"4478:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4072,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4081,"initialValue":{"arguments":[{"id":4079,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"4532:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4076,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"4512:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}],"id":4075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4074,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:24","typeDescriptions":{}}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:24","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":4229,"src":"4504:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4082,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"4551:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:24","memberName":"length","nodeType":"MemberAccess","src":"4551:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:24","subExpression":{"arguments":[{"id":4088,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"4589:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":4089,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:24","typeDescriptions":{}}}],"id":4091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":4086,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:24","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:24","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4103,"nodeType":"IfStatement","src":"4547:135:24","trueBody":{"id":4102,"nodeType":"Block","src":"4610:72:24","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4098,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"4664:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}],"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4096,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:24","typeDescriptions":{}}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4095,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"4631:24:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4101,"nodeType":"RevertStatement","src":"4624:47:24"}]}}]},"documentation":{"id":4064,"nodeType":"StructuredDocumentation","src":"3682:372:24","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":4105,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:24","nodeType":"FunctionDefinition","parameters":{"id":4070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"token","nameLocation":"4095:5:24","nodeType":"VariableDeclaration","scope":4105,"src":"4088:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},"typeName":{"id":4066,"nodeType":"UserDefinedTypeName","pathNode":{"id":4065,"name":"IERC20","nameLocations":["4088:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"4088:6:24"},"referencedDeclaration":3118,"src":"4088:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4069,"mutability":"mutable","name":"data","nameLocation":"4115:4:24","nodeType":"VariableDeclaration","scope":4105,"src":"4102:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4068,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:24"},"returnParameters":{"id":4071,"nodeType":"ParameterList","parameters":[],"src":"4129:0:24"},"scope":4155,"src":"4059:629:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4153,"nodeType":"Block","src":"5278:489:24","statements":[{"assignments":[4117,4119],"declarations":[{"constant":false,"id":4117,"mutability":"mutable","name":"success","nameLocation":"5579:7:24","nodeType":"VariableDeclaration","scope":4153,"src":"5574:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4116,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4119,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:24","nodeType":"VariableDeclaration","scope":4153,"src":"5588:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4118,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4127,"initialValue":{"arguments":[{"id":4125,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"5635:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4122,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"5623:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}],"id":4121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4120,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:24","typeDescriptions":{}}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:24","memberName":"call","nodeType":"MemberAccess","src":"5615:19:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:24"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"5657:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4129,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"5669:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:24","memberName":"length","nodeType":"MemberAccess","src":"5669:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4135,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"5706:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":4136,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:24","typeDescriptions":{}}}],"id":4138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":4133,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:24","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:24","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":4145,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"5738:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}],"id":4144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4143,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:24","typeDescriptions":{}}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:24","memberName":"code","nodeType":"MemberAccess","src":"5730:19:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:24","memberName":"length","nodeType":"MemberAccess","src":"5730:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4115,"id":4152,"nodeType":"Return","src":"5650:110:24"}]},"documentation":{"id":4106,"nodeType":"StructuredDocumentation","src":"4694:490:24","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":4154,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:24","nodeType":"FunctionDefinition","parameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"token","nameLocation":"5229:5:24","nodeType":"VariableDeclaration","scope":4154,"src":"5222:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"},"typeName":{"id":4108,"nodeType":"UserDefinedTypeName","pathNode":{"id":4107,"name":"IERC20","nameLocations":["5222:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"5222:6:24"},"referencedDeclaration":3118,"src":"5222:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4111,"mutability":"mutable","name":"data","nameLocation":"5249:4:24","nodeType":"VariableDeclaration","scope":4154,"src":"5236:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4110,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:24"},"returnParameters":{"id":4115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4154,"src":"5272:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4113,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:24"},"scope":4155,"src":"5189:578:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":4156,"src":"751:5018:24","usedErrors":[3882,3891],"usedEvents":[]}],"src":"115:5655:24"},"id":24},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[4408]},"id":4409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4157,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":4158,"nodeType":"StructuredDocumentation","src":"127:67:25","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":4408,"linearizedBaseContracts":[4408],"name":"Address","nameLocation":"203:7:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4159,"nodeType":"StructuredDocumentation","src":"217:94:25","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":4163,"name":"AddressInsufficientBalance","nameLocation":"322:26:25","nodeType":"ErrorDefinition","parameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"account","nameLocation":"357:7:25","nodeType":"VariableDeclaration","scope":4163,"src":"349:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4160,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:25"},"src":"316:50:25"},{"documentation":{"id":4164,"nodeType":"StructuredDocumentation","src":"372:75:25","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":4168,"name":"AddressEmptyCode","nameLocation":"458:16:25","nodeType":"ErrorDefinition","parameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"target","nameLocation":"483:6:25","nodeType":"VariableDeclaration","scope":4168,"src":"475:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4165,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:25"},"src":"452:39:25"},{"documentation":{"id":4169,"nodeType":"StructuredDocumentation","src":"497:89:25","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":4171,"name":"FailedInnerCall","nameLocation":"597:15:25","nodeType":"ErrorDefinition","parameters":{"id":4170,"nodeType":"ParameterList","parameters":[],"src":"612:2:25"},"src":"591:24:25"},{"body":{"id":4211,"nodeType":"Block","src":"1602:260:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4181,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4408","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4408","typeString":"library Address"}],"id":4180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4179,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:25","typeDescriptions":{}}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:25","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4184,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"1640:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4194,"nodeType":"IfStatement","src":"1612:109:25","trueBody":{"id":4193,"nodeType":"Block","src":"1648:73:25","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4189,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4408","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4408","typeString":"library Address"}],"id":4188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4187,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:25","typeDescriptions":{}}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4186,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"1669:26:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4192,"nodeType":"RevertStatement","src":"1662:48:25"}]}},{"assignments":[4196,null],"declarations":[{"constant":false,"id":4196,"mutability":"mutable","name":"success","nameLocation":"1737:7:25","nodeType":"VariableDeclaration","scope":4211,"src":"1732:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4195,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4203,"initialValue":{"arguments":[{"hexValue":"","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4197,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"1750:9:25","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:25","memberName":"call","nodeType":"MemberAccess","src":"1750:14:25","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4199,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"1772:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:25","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:25"},{"condition":{"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:25","subExpression":{"id":4204,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"1798:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4210,"nodeType":"IfStatement","src":"1793:63:25","trueBody":{"id":4209,"nodeType":"Block","src":"1807:49:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4206,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"1828:15:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4208,"nodeType":"RevertStatement","src":"1821:24:25"}]}}]},"documentation":{"id":4172,"nodeType":"StructuredDocumentation","src":"621:905:25","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":4212,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:25","nodeType":"FunctionDefinition","parameters":{"id":4177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:25","nodeType":"VariableDeclaration","scope":4212,"src":"1550:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4173,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:25","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4176,"mutability":"mutable","name":"amount","nameLocation":"1585:6:25","nodeType":"VariableDeclaration","scope":4212,"src":"1577:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:25"},"returnParameters":{"id":4178,"nodeType":"ParameterList","parameters":[],"src":"1602:0:25"},"scope":4408,"src":"1531:331:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4228,"nodeType":"Block","src":"2794:62:25","statements":[{"expression":{"arguments":[{"id":4223,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"2833:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4224,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"2841:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4222,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"2811:21:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4221,"id":4227,"nodeType":"Return","src":"2804:45:25"}]},"documentation":{"id":4213,"nodeType":"StructuredDocumentation","src":"1868:832:25","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":4229,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:25","nodeType":"FunctionDefinition","parameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"target","nameLocation":"2735:6:25","nodeType":"VariableDeclaration","scope":4229,"src":"2727:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4214,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4217,"mutability":"mutable","name":"data","nameLocation":"2756:4:25","nodeType":"VariableDeclaration","scope":4229,"src":"2743:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4216,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:25"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4229,"src":"2780:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4219,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:25"},"scope":4408,"src":"2705:151:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4274,"nodeType":"Block","src":"3293:279:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4243,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4408","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4408","typeString":"library Address"}],"id":4242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4241,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:25","typeDescriptions":{}}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:25","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"3331:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4256,"nodeType":"IfStatement","src":"3303:108:25","trueBody":{"id":4255,"nodeType":"Block","src":"3338:73:25","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4251,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4408","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4408","typeString":"library Address"}],"id":4250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4249,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:25","typeDescriptions":{}}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4248,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"3359:26:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4254,"nodeType":"RevertStatement","src":"3352:48:25"}]}},{"assignments":[4258,4260],"declarations":[{"constant":false,"id":4258,"mutability":"mutable","name":"success","nameLocation":"3426:7:25","nodeType":"VariableDeclaration","scope":4274,"src":"3421:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4257,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4260,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:25","nodeType":"VariableDeclaration","scope":4274,"src":"3435:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4259,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4267,"initialValue":{"arguments":[{"id":4265,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"3488:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4261,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"3462:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:25","memberName":"call","nodeType":"MemberAccess","src":"3462:11:25","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"3481:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:25","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:25"},{"expression":{"arguments":[{"id":4269,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"3537:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4270,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"3545:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4271,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"3554:10:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4268,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"3510:26:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4240,"id":4273,"nodeType":"Return","src":"3503:62:25"}]},"documentation":{"id":4230,"nodeType":"StructuredDocumentation","src":"2862:313:25","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":4275,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:25","nodeType":"FunctionDefinition","parameters":{"id":4237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4232,"mutability":"mutable","name":"target","nameLocation":"3219:6:25","nodeType":"VariableDeclaration","scope":4275,"src":"3211:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4231,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"data","nameLocation":"3240:4:25","nodeType":"VariableDeclaration","scope":4275,"src":"3227:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4233,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4236,"mutability":"mutable","name":"value","nameLocation":"3254:5:25","nodeType":"VariableDeclaration","scope":4275,"src":"3246:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:25"},"returnParameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4275,"src":"3279:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4238,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:25"},"scope":4408,"src":"3180:392:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4300,"nodeType":"Block","src":"3811:154:25","statements":[{"assignments":[4286,4288],"declarations":[{"constant":false,"id":4286,"mutability":"mutable","name":"success","nameLocation":"3827:7:25","nodeType":"VariableDeclaration","scope":4300,"src":"3822:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4285,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4288,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:25","nodeType":"VariableDeclaration","scope":4300,"src":"3836:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4287,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4293,"initialValue":{"arguments":[{"id":4291,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"3881:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4289,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"3863:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:25","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:25","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:25"},{"expression":{"arguments":[{"id":4295,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"3930:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4296,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"3938:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4297,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"3947:10:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4294,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"3903:26:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4284,"id":4299,"nodeType":"Return","src":"3896:62:25"}]},"documentation":{"id":4276,"nodeType":"StructuredDocumentation","src":"3578:128:25","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:25","nodeType":"FunctionDefinition","parameters":{"id":4281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"target","nameLocation":"3747:6:25","nodeType":"VariableDeclaration","scope":4301,"src":"3739:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4277,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4280,"mutability":"mutable","name":"data","nameLocation":"3768:4:25","nodeType":"VariableDeclaration","scope":4301,"src":"3755:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4279,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:25"},"returnParameters":{"id":4284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"3797:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4282,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:25"},"scope":4408,"src":"3711:254:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4326,"nodeType":"Block","src":"4203:156:25","statements":[{"assignments":[4312,4314],"declarations":[{"constant":false,"id":4312,"mutability":"mutable","name":"success","nameLocation":"4219:7:25","nodeType":"VariableDeclaration","scope":4326,"src":"4214:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4311,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4314,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:25","nodeType":"VariableDeclaration","scope":4326,"src":"4228:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4313,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4319,"initialValue":{"arguments":[{"id":4317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"4275:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4315,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"4255:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:25","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:25","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:25"},{"expression":{"arguments":[{"id":4321,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"4324:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4322,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"4332:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4323,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"4341:10:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4320,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"4297:26:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4310,"id":4325,"nodeType":"Return","src":"4290:62:25"}]},"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"3971:130:25","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":4327,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:25","nodeType":"FunctionDefinition","parameters":{"id":4307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"target","nameLocation":"4144:6:25","nodeType":"VariableDeclaration","scope":4327,"src":"4136:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4303,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4306,"mutability":"mutable","name":"data","nameLocation":"4165:4:25","nodeType":"VariableDeclaration","scope":4327,"src":"4152:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4305,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:25"},"returnParameters":{"id":4310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4327,"src":"4189:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4308,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:25"},"scope":4408,"src":"4106:253:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4366,"nodeType":"Block","src":"4783:424:25","statements":[{"condition":{"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:25","subExpression":{"id":4339,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"4798:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4364,"nodeType":"Block","src":"4857:344:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4346,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5045:10:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:25","memberName":"length","nodeType":"MemberAccess","src":"5045:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4350,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"5071:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:25","memberName":"code","nodeType":"MemberAccess","src":"5071:11:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:25","memberName":"length","nodeType":"MemberAccess","src":"5071:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4361,"nodeType":"IfStatement","src":"5041:119:25","trueBody":{"id":4360,"nodeType":"Block","src":"5096:64:25","statements":[{"errorCall":{"arguments":[{"id":4357,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"5138:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4356,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"5121:16:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4359,"nodeType":"RevertStatement","src":"5114:31:25"}]}},{"expression":{"id":4362,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"5180:10:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4338,"id":4363,"nodeType":"Return","src":"5173:17:25"}]},"id":4365,"nodeType":"IfStatement","src":"4793:408:25","trueBody":{"id":4345,"nodeType":"Block","src":"4807:44:25","statements":[{"expression":{"arguments":[{"id":4342,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"4829:10:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4341,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"4821:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4344,"nodeType":"ExpressionStatement","src":"4821:19:25"}]}}]},"documentation":{"id":4328,"nodeType":"StructuredDocumentation","src":"4365:255:25","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":4367,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:25","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"target","nameLocation":"4678:6:25","nodeType":"VariableDeclaration","scope":4367,"src":"4670:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4329,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4332,"mutability":"mutable","name":"success","nameLocation":"4699:7:25","nodeType":"VariableDeclaration","scope":4367,"src":"4694:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4331,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4334,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:25","nodeType":"VariableDeclaration","scope":4367,"src":"4716:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4333,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:25"},"returnParameters":{"id":4338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4367,"src":"4769:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4336,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:25"},"scope":4408,"src":"4625:582:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4388,"nodeType":"Block","src":"5509:122:25","statements":[{"condition":{"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:25","subExpression":{"id":4377,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"5524:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4386,"nodeType":"Block","src":"5583:42:25","statements":[{"expression":{"id":4384,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"5604:10:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4376,"id":4385,"nodeType":"Return","src":"5597:17:25"}]},"id":4387,"nodeType":"IfStatement","src":"5519:106:25","trueBody":{"id":4383,"nodeType":"Block","src":"5533:44:25","statements":[{"expression":{"arguments":[{"id":4380,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"5555:10:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4379,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"5547:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4382,"nodeType":"ExpressionStatement","src":"5547:19:25"}]}}]},"documentation":{"id":4368,"nodeType":"StructuredDocumentation","src":"5213:189:25","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":4389,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:25","nodeType":"FunctionDefinition","parameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"success","nameLocation":"5438:7:25","nodeType":"VariableDeclaration","scope":4389,"src":"5433:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4369,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4372,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:25","nodeType":"VariableDeclaration","scope":4389,"src":"5447:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4371,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:25"},"returnParameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4389,"src":"5495:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4374,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:25"},"scope":4408,"src":"5407:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4406,"nodeType":"Block","src":"5798:461:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4395,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5874:10:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:25","memberName":"length","nodeType":"MemberAccess","src":"5874:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4404,"nodeType":"Block","src":"6204:49:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4401,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"6225:15:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4403,"nodeType":"RevertStatement","src":"6218:24:25"}]},"id":4405,"nodeType":"IfStatement","src":"5870:383:25","trueBody":{"id":4400,"nodeType":"Block","src":"5897:301:25","statements":[{"AST":{"nodeType":"YulBlock","src":"6055:133:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6073:40:25","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"6102:10:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6096:5:25"},"nodeType":"YulFunctionCall","src":"6096:17:25"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"6077:15:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:2:25","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"6145:10:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6137:3:25"},"nodeType":"YulFunctionCall","src":"6137:19:25"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"6158:15:25"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6130:6:25"},"nodeType":"YulFunctionCall","src":"6130:44:25"},"nodeType":"YulExpressionStatement","src":"6130:44:25"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4392,"isOffset":false,"isSlot":false,"src":"6102:10:25","valueSize":1},{"declaration":4392,"isOffset":false,"isSlot":false,"src":"6145:10:25","valueSize":1}],"id":4399,"nodeType":"InlineAssembly","src":"6046:142:25"}]}}]},"documentation":{"id":4390,"nodeType":"StructuredDocumentation","src":"5637:101:25","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":4407,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:25","nodeType":"FunctionDefinition","parameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:25","nodeType":"VariableDeclaration","scope":4407,"src":"5760:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4391,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:25"},"returnParameters":{"id":4394,"nodeType":"ParameterList","parameters":[],"src":"5798:0:25"},"scope":4408,"src":"5743:516:25","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4409,"src":"195:6066:25","usedErrors":[4163,4168,4171],"usedEvents":[]}],"src":"101:6161:25"},"id":25},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[4438]},"id":4439,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4410,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:26"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":4411,"nodeType":"StructuredDocumentation","src":"127:496:26","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":4438,"linearizedBaseContracts":[4438],"name":"Context","nameLocation":"642:7:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":4419,"nodeType":"Block","src":"718:34:26","statements":[{"expression":{"expression":{"id":4416,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:26","memberName":"sender","nodeType":"MemberAccess","src":"735:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4415,"id":4418,"nodeType":"Return","src":"728:17:26"}]},"id":4420,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:26","nodeType":"FunctionDefinition","parameters":{"id":4412,"nodeType":"ParameterList","parameters":[],"src":"675:2:26"},"returnParameters":{"id":4415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4420,"src":"709:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4413,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:26"},"scope":4438,"src":"656:96:26","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4428,"nodeType":"Block","src":"825:32:26","statements":[{"expression":{"expression":{"id":4425,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:26","memberName":"data","nodeType":"MemberAccess","src":"842:8:26","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":4424,"id":4427,"nodeType":"Return","src":"835:15:26"}]},"id":4429,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:26","nodeType":"FunctionDefinition","parameters":{"id":4421,"nodeType":"ParameterList","parameters":[],"src":"775:2:26"},"returnParameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4429,"src":"809:14:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4422,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:26"},"scope":4438,"src":"758:99:26","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4436,"nodeType":"Block","src":"935:25:26","statements":[{"expression":{"hexValue":"30","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4433,"id":4435,"nodeType":"Return","src":"945:8:26"}]},"id":4437,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:26","nodeType":"FunctionDefinition","parameters":{"id":4430,"nodeType":"ParameterList","parameters":[],"src":"892:2:26"},"returnParameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4437,"src":"926:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4431,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:26"},"scope":4438,"src":"863:97:26","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":4439,"src":"624:338:26","usedErrors":[],"usedEvents":[]}],"src":"101:862:26"},"id":26},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5492]},"id":5493,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4440,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4441,"nodeType":"StructuredDocumentation","src":"129:73:27","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5492,"linearizedBaseContracts":[5492],"name":"Math","nameLocation":"211:4:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4442,"nodeType":"StructuredDocumentation","src":"222:50:27","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":4444,"name":"MathOverflowedMulDiv","nameLocation":"283:20:27","nodeType":"ErrorDefinition","parameters":{"id":4443,"nodeType":"ParameterList","parameters":[],"src":"303:2:27"},"src":"277:29:27"},{"canonicalName":"Math.Rounding","id":4449,"members":[{"id":4445,"name":"Floor","nameLocation":"336:5:27","nodeType":"EnumValue","src":"336:5:27"},{"id":4446,"name":"Ceil","nameLocation":"379:4:27","nodeType":"EnumValue","src":"379:4:27"},{"id":4447,"name":"Trunc","nameLocation":"421:5:27","nodeType":"EnumValue","src":"421:5:27"},{"id":4448,"name":"Expand","nameLocation":"451:6:27","nodeType":"EnumValue","src":"451:6:27"}],"name":"Rounding","nameLocation":"317:8:27","nodeType":"EnumDefinition","src":"312:169:27"},{"body":{"id":4480,"nodeType":"Block","src":"661:140:27","statements":[{"id":4479,"nodeType":"UncheckedBlock","src":"671:124:27","statements":[{"assignments":[4462],"declarations":[{"constant":false,"id":4462,"mutability":"mutable","name":"c","nameLocation":"703:1:27","nodeType":"VariableDeclaration","scope":4479,"src":"695:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4461,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4466,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4463,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"707:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4464,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"711:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4467,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"730:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4468,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"734:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4474,"nodeType":"IfStatement","src":"726:28:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4460,"id":4473,"nodeType":"Return","src":"737:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4476,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"782:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4460,"id":4478,"nodeType":"Return","src":"768:16:27"}]}]},"documentation":{"id":4450,"nodeType":"StructuredDocumentation","src":"487:93:27","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":4481,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:27","nodeType":"FunctionDefinition","parameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"a","nameLocation":"609:1:27","nodeType":"VariableDeclaration","scope":4481,"src":"601:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4451,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4454,"mutability":"mutable","name":"b","nameLocation":"620:1:27","nodeType":"VariableDeclaration","scope":4481,"src":"612:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4453,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:27"},"returnParameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4481,"src":"646:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4456,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4481,"src":"652:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4458,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:27"},"scope":5492,"src":"585:216:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4508,"nodeType":"Block","src":"984:113:27","statements":[{"id":4507,"nodeType":"UncheckedBlock","src":"994:97:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4493,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"1022:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4494,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"1026:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4500,"nodeType":"IfStatement","src":"1018:28:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4492,"id":4499,"nodeType":"Return","src":"1029:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"1074:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4503,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"1078:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4492,"id":4506,"nodeType":"Return","src":"1060:20:27"}]}]},"documentation":{"id":4482,"nodeType":"StructuredDocumentation","src":"807:96:27","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":4509,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:27","nodeType":"FunctionDefinition","parameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"a","nameLocation":"932:1:27","nodeType":"VariableDeclaration","scope":4509,"src":"924:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4483,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4486,"mutability":"mutable","name":"b","nameLocation":"943:1:27","nodeType":"VariableDeclaration","scope":4509,"src":"935:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4485,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:27"},"returnParameters":{"id":4492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4509,"src":"969:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4488,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4509,"src":"975:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:27"},"scope":5492,"src":"908:189:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4550,"nodeType":"Block","src":"1283:417:27","statements":[{"id":4549,"nodeType":"UncheckedBlock","src":"1293:401:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4521,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"1551:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4528,"nodeType":"IfStatement","src":"1547:28:27","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4520,"id":4527,"nodeType":"Return","src":"1559:16:27"}},{"assignments":[4530],"declarations":[{"constant":false,"id":4530,"mutability":"mutable","name":"c","nameLocation":"1597:1:27","nodeType":"VariableDeclaration","scope":4549,"src":"1589:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4534,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4531,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"1601:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4532,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"1605:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4535,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"1624:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"1628:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4538,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"1633:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4544,"nodeType":"IfStatement","src":"1620:33:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4520,"id":4543,"nodeType":"Return","src":"1636:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4546,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"1681:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4520,"id":4548,"nodeType":"Return","src":"1667:16:27"}]}]},"documentation":{"id":4510,"nodeType":"StructuredDocumentation","src":"1103:99:27","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":4551,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:27","nodeType":"FunctionDefinition","parameters":{"id":4515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4512,"mutability":"mutable","name":"a","nameLocation":"1231:1:27","nodeType":"VariableDeclaration","scope":4551,"src":"1223:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4514,"mutability":"mutable","name":"b","nameLocation":"1242:1:27","nodeType":"VariableDeclaration","scope":4551,"src":"1234:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:27"},"returnParameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4551,"src":"1268:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4516,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4551,"src":"1274:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:27"},"scope":5492,"src":"1207:493:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4578,"nodeType":"Block","src":"1887:114:27","statements":[{"id":4577,"nodeType":"UncheckedBlock","src":"1897:98:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4563,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"1925:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4570,"nodeType":"IfStatement","src":"1921:29:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4562,"id":4569,"nodeType":"Return","src":"1933:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4572,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"1978:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4573,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"1982:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4575,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4562,"id":4576,"nodeType":"Return","src":"1964:20:27"}]}]},"documentation":{"id":4552,"nodeType":"StructuredDocumentation","src":"1706:100:27","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":4579,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:27","nodeType":"FunctionDefinition","parameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4554,"mutability":"mutable","name":"a","nameLocation":"1835:1:27","nodeType":"VariableDeclaration","scope":4579,"src":"1827:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4556,"mutability":"mutable","name":"b","nameLocation":"1846:1:27","nodeType":"VariableDeclaration","scope":4579,"src":"1838:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:27"},"returnParameters":{"id":4562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4579,"src":"1872:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4558,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4579,"src":"1878:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:27"},"scope":5492,"src":"1811:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4606,"nodeType":"Block","src":"2198:114:27","statements":[{"id":4605,"nodeType":"UncheckedBlock","src":"2208:98:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"2236:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4598,"nodeType":"IfStatement","src":"2232:29:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4590,"id":4597,"nodeType":"Return","src":"2244:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4600,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"2289:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4601,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"2293:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4590,"id":4604,"nodeType":"Return","src":"2275:20:27"}]}]},"documentation":{"id":4580,"nodeType":"StructuredDocumentation","src":"2007:110:27","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":4607,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:27","nodeType":"FunctionDefinition","parameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4582,"mutability":"mutable","name":"a","nameLocation":"2146:1:27","nodeType":"VariableDeclaration","scope":4607,"src":"2138:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4584,"mutability":"mutable","name":"b","nameLocation":"2157:1:27","nodeType":"VariableDeclaration","scope":4607,"src":"2149:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:27"},"returnParameters":{"id":4590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4607,"src":"2183:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4586,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4607,"src":"2189:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4588,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:27"},"scope":5492,"src":"2122:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4624,"nodeType":"Block","src":"2449:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4617,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"2466:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4618,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"2470:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4621,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"2478:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:27","trueExpression":{"id":4620,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"2474:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4616,"id":4623,"nodeType":"Return","src":"2459:20:27"}]},"documentation":{"id":4608,"nodeType":"StructuredDocumentation","src":"2318:59:27","text":" @dev Returns the largest of two numbers."},"id":4625,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:27","nodeType":"FunctionDefinition","parameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"a","nameLocation":"2403:1:27","nodeType":"VariableDeclaration","scope":4625,"src":"2395:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4612,"mutability":"mutable","name":"b","nameLocation":"2414:1:27","nodeType":"VariableDeclaration","scope":4625,"src":"2406:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:27"},"returnParameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4625,"src":"2440:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:27"},"scope":5492,"src":"2382:104:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4642,"nodeType":"Block","src":"2624:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4635,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"2641:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4636,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"2645:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4639,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"2653:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:27","trueExpression":{"id":4638,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"2649:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4634,"id":4641,"nodeType":"Return","src":"2634:20:27"}]},"documentation":{"id":4626,"nodeType":"StructuredDocumentation","src":"2492:60:27","text":" @dev Returns the smallest of two numbers."},"id":4643,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:27","nodeType":"FunctionDefinition","parameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"a","nameLocation":"2578:1:27","nodeType":"VariableDeclaration","scope":4643,"src":"2570:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4630,"mutability":"mutable","name":"b","nameLocation":"2589:1:27","nodeType":"VariableDeclaration","scope":4643,"src":"2581:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4629,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:27"},"returnParameters":{"id":4634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4643,"src":"2615:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:27"},"scope":5492,"src":"2557:104:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4665,"nodeType":"Block","src":"2845:82:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4653,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"2900:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4654,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"2904:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"2910:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4658,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"2914:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4652,"id":4664,"nodeType":"Return","src":"2892:28:27"}]},"documentation":{"id":4644,"nodeType":"StructuredDocumentation","src":"2667:102:27","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4666,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:27","nodeType":"FunctionDefinition","parameters":{"id":4649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4646,"mutability":"mutable","name":"a","nameLocation":"2799:1:27","nodeType":"VariableDeclaration","scope":4666,"src":"2791:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4648,"mutability":"mutable","name":"b","nameLocation":"2810:1:27","nodeType":"VariableDeclaration","scope":4666,"src":"2802:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4647,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:27"},"returnParameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4666,"src":"2836:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:27"},"scope":5492,"src":"2774:153:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4699,"nodeType":"Block","src":"3219:260:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4676,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"3233:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4684,"nodeType":"IfStatement","src":"3229:127:27","trueBody":{"id":4683,"nodeType":"Block","src":"3241:115:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4679,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"3340:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4680,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"3344:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4675,"id":4682,"nodeType":"Return","src":"3333:12:27"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"3444:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"3458:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4692,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4693,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"3467:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:27","trueExpression":{"hexValue":"30","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4675,"id":4698,"nodeType":"Return","src":"3437:35:27"}]},"documentation":{"id":4667,"nodeType":"StructuredDocumentation","src":"2933:210:27","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4700,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:27","nodeType":"FunctionDefinition","parameters":{"id":4672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4669,"mutability":"mutable","name":"a","nameLocation":"3173:1:27","nodeType":"VariableDeclaration","scope":4700,"src":"3165:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4668,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4671,"mutability":"mutable","name":"b","nameLocation":"3184:1:27","nodeType":"VariableDeclaration","scope":4700,"src":"3176:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4670,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:27"},"returnParameters":{"id":4675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4700,"src":"3210:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4673,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:27"},"scope":5492,"src":"3148:331:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4825,"nodeType":"Block","src":"3901:4018:27","statements":[{"id":4824,"nodeType":"UncheckedBlock","src":"3911:4002:27","statements":[{"assignments":[4713],"declarations":[{"constant":false,"id":4713,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:27","nodeType":"VariableDeclaration","scope":4824,"src":"4232:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4712,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4717,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4714,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"4248:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4715,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"4252:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:27"},{"assignments":[4719],"declarations":[{"constant":false,"id":4719,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:27","nodeType":"VariableDeclaration","scope":4824,"src":"4312:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4718,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4720,"nodeType":"VariableDeclarationStatement","src":"4312:13:27"},{"AST":{"nodeType":"YulBlock","src":"4392:122:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:27"},"nodeType":"YulFunctionCall","src":"4433:6:27"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:27"},"nodeType":"YulFunctionCall","src":"4420:20:27"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:27","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:27","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:27"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:27"},"nodeType":"YulFunctionCall","src":"4470:14:27"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:27"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:27"},"nodeType":"YulFunctionCall","src":"4486:13:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:27"},"nodeType":"YulFunctionCall","src":"4466:34:27"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4713,"isOffset":false,"isSlot":false,"src":"4478:5:27","valueSize":1},{"declaration":4713,"isOffset":false,"isSlot":false,"src":"4493:5:27","valueSize":1},{"declaration":4719,"isOffset":false,"isSlot":false,"src":"4457:5:27","valueSize":1},{"declaration":4703,"isOffset":false,"isSlot":false,"src":"4427:1:27","valueSize":1},{"declaration":4705,"isOffset":false,"isSlot":false,"src":"4430:1:27","valueSize":1}],"id":4721,"nodeType":"InlineAssembly","src":"4383:131:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4722,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"4595:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4730,"nodeType":"IfStatement","src":"4591:368:27","trueBody":{"id":4729,"nodeType":"Block","src":"4607:352:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4725,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"4925:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4726,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"4933:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4711,"id":4728,"nodeType":"Return","src":"4918:26:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4731,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"5065:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4732,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"5080:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4738,"nodeType":"IfStatement","src":"5061:88:27","trueBody":{"id":4737,"nodeType":"Block","src":"5087:62:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4734,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"5112:20:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4736,"nodeType":"RevertStatement","src":"5105:29:27"}]}},{"assignments":[4740],"declarations":[{"constant":false,"id":4740,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:27","nodeType":"VariableDeclaration","scope":4824,"src":"5404:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4739,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4741,"nodeType":"VariableDeclarationStatement","src":"5404:17:27"},{"AST":{"nodeType":"YulBlock","src":"5444:291:27","statements":[{"nodeType":"YulAssignment","src":"5513:38:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:27"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:27"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:27"},"nodeType":"YulFunctionCall","src":"5526:25:27"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:27"}]},{"nodeType":"YulAssignment","src":"5633:41:27","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:27"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:27"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:27"},"nodeType":"YulFunctionCall","src":"5653:20:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:27"},"nodeType":"YulFunctionCall","src":"5642:32:27"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:27"}]},{"nodeType":"YulAssignment","src":"5691:30:27","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:27"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:27"},"nodeType":"YulFunctionCall","src":"5700:21:27"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4707,"isOffset":false,"isSlot":false,"src":"5539:11:27","valueSize":1},{"declaration":4713,"isOffset":false,"isSlot":false,"src":"5667:5:27","valueSize":1},{"declaration":4713,"isOffset":false,"isSlot":false,"src":"5691:5:27","valueSize":1},{"declaration":4713,"isOffset":false,"isSlot":false,"src":"5704:5:27","valueSize":1},{"declaration":4719,"isOffset":false,"isSlot":false,"src":"5633:5:27","valueSize":1},{"declaration":4719,"isOffset":false,"isSlot":false,"src":"5646:5:27","valueSize":1},{"declaration":4740,"isOffset":false,"isSlot":false,"src":"5513:9:27","valueSize":1},{"declaration":4740,"isOffset":false,"isSlot":false,"src":"5656:9:27","valueSize":1},{"declaration":4740,"isOffset":false,"isSlot":false,"src":"5711:9:27","valueSize":1},{"declaration":4703,"isOffset":false,"isSlot":false,"src":"5533:1:27","valueSize":1},{"declaration":4705,"isOffset":false,"isSlot":false,"src":"5536:1:27","valueSize":1}],"id":4742,"nodeType":"InlineAssembly","src":"5435:300:27"},{"assignments":[4744],"declarations":[{"constant":false,"id":4744,"mutability":"mutable","name":"twos","nameLocation":"5947:4:27","nodeType":"VariableDeclaration","scope":4824,"src":"5939:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4743,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4751,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4745,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"5954:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4747,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"5973:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:27"},{"AST":{"nodeType":"YulBlock","src":"6008:362:27","statements":[{"nodeType":"YulAssignment","src":"6073:37:27","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:27"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:27"},"nodeType":"YulFunctionCall","src":"6088:22:27"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:27"}]},{"nodeType":"YulAssignment","src":"6177:25:27","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:27"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:27"},"nodeType":"YulFunctionCall","src":"6186:16:27"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:27"}]},{"nodeType":"YulAssignment","src":"6317:39:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:27","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:27"},"nodeType":"YulFunctionCall","src":"6333:12:27"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:27"},"nodeType":"YulFunctionCall","src":"6329:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:27"},"nodeType":"YulFunctionCall","src":"6325:31:27"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4707,"isOffset":false,"isSlot":false,"src":"6073:11:27","valueSize":1},{"declaration":4707,"isOffset":false,"isSlot":false,"src":"6092:11:27","valueSize":1},{"declaration":4713,"isOffset":false,"isSlot":false,"src":"6177:5:27","valueSize":1},{"declaration":4713,"isOffset":false,"isSlot":false,"src":"6190:5:27","valueSize":1},{"declaration":4744,"isOffset":false,"isSlot":false,"src":"6105:4:27","valueSize":1},{"declaration":4744,"isOffset":false,"isSlot":false,"src":"6197:4:27","valueSize":1},{"declaration":4744,"isOffset":false,"isSlot":false,"src":"6317:4:27","valueSize":1},{"declaration":4744,"isOffset":false,"isSlot":false,"src":"6340:4:27","valueSize":1},{"declaration":4744,"isOffset":false,"isSlot":false,"src":"6347:4:27","valueSize":1}],"id":4752,"nodeType":"InlineAssembly","src":"5999:371:27"},{"expression":{"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4753,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"6436:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"6445:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4755,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"6453:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4758,"nodeType":"ExpressionStatement","src":"6436:21:27"},{"assignments":[4760],"declarations":[{"constant":false,"id":4760,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:27","nodeType":"VariableDeclaration","scope":4824,"src":"6775:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4767,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4762,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"6798:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:27"},{"expression":{"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4768,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7031:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"7046:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4771,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7060:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4775,"nodeType":"ExpressionStatement","src":"7031:36:27"},{"expression":{"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4776,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7100:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4778,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"7115:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4779,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7129:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4783,"nodeType":"ExpressionStatement","src":"7100:36:27"},{"expression":{"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4784,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7170:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4786,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"7185:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4787,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7199:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4791,"nodeType":"ExpressionStatement","src":"7170:36:27"},{"expression":{"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4792,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7240:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4794,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"7255:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4795,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7269:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4799,"nodeType":"ExpressionStatement","src":"7240:36:27"},{"expression":{"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4800,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7310:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4802,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"7325:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4803,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7339:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4807,"nodeType":"ExpressionStatement","src":"7310:36:27"},{"expression":{"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4808,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7381:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"7396:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4811,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7410:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4815,"nodeType":"ExpressionStatement","src":"7381:36:27"},{"expression":{"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"7851:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4817,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"7860:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4818,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"7868:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4821,"nodeType":"ExpressionStatement","src":"7851:24:27"},{"expression":{"id":4822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"7896:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4711,"id":4823,"nodeType":"Return","src":"7889:13:27"}]}]},"documentation":{"id":4701,"nodeType":"StructuredDocumentation","src":"3485:313:27","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4826,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:27","nodeType":"FunctionDefinition","parameters":{"id":4708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4703,"mutability":"mutable","name":"x","nameLocation":"3827:1:27","nodeType":"VariableDeclaration","scope":4826,"src":"3819:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4702,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4705,"mutability":"mutable","name":"y","nameLocation":"3838:1:27","nodeType":"VariableDeclaration","scope":4826,"src":"3830:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4707,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:27","nodeType":"VariableDeclaration","scope":4826,"src":"3841:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4706,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:27"},"returnParameters":{"id":4711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4710,"mutability":"mutable","name":"result","nameLocation":"3893:6:27","nodeType":"VariableDeclaration","scope":4826,"src":"3885:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4709,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:27"},"scope":5492,"src":"3803:4116:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4868,"nodeType":"Block","src":"8161:192:27","statements":[{"assignments":[4842],"declarations":[{"constant":false,"id":4842,"mutability":"mutable","name":"result","nameLocation":"8179:6:27","nodeType":"VariableDeclaration","scope":4868,"src":"8171:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4841,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4848,"initialValue":{"arguments":[{"id":4844,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"8195:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4845,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"8198:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4846,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"8201:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4843,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4826,4869],"referencedDeclaration":4826,"src":"8188:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4850,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"8244:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"id":4849,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"8227:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4449_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4853,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"8264:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4854,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"8267:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4855,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"8270:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4852,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:27","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4865,"nodeType":"IfStatement","src":"8223:101:27","trueBody":{"id":4864,"nodeType":"Block","src":"8288:36:27","statements":[{"expression":{"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"8302:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4863,"nodeType":"ExpressionStatement","src":"8302:11:27"}]}},{"expression":{"id":4866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"8340:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4840,"id":4867,"nodeType":"Return","src":"8333:13:27"}]},"documentation":{"id":4827,"nodeType":"StructuredDocumentation","src":"7925:121:27","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4869,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:27","nodeType":"FunctionDefinition","parameters":{"id":4837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4829,"mutability":"mutable","name":"x","nameLocation":"8075:1:27","nodeType":"VariableDeclaration","scope":4869,"src":"8067:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4828,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4831,"mutability":"mutable","name":"y","nameLocation":"8086:1:27","nodeType":"VariableDeclaration","scope":4869,"src":"8078:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4830,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4833,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:27","nodeType":"VariableDeclaration","scope":4869,"src":"8089:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4836,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:27","nodeType":"VariableDeclaration","scope":4869,"src":"8110:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"},"typeName":{"id":4835,"nodeType":"UserDefinedTypeName","pathNode":{"id":4834,"name":"Rounding","nameLocations":["8110:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4449,"src":"8110:8:27"},"referencedDeclaration":4449,"src":"8110:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:27"},"returnParameters":{"id":4840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4869,"src":"8152:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:27"},"scope":5492,"src":"8051:302:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4980,"nodeType":"Block","src":"8644:1585:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4877,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"8658:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4883,"nodeType":"IfStatement","src":"8654:45:27","trueBody":{"id":4882,"nodeType":"Block","src":"8666:33:27","statements":[{"expression":{"hexValue":"30","id":4880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4876,"id":4881,"nodeType":"Return","src":"8680:8:27"}]}},{"assignments":[4885],"declarations":[{"constant":false,"id":4885,"mutability":"mutable","name":"result","nameLocation":"9386:6:27","nodeType":"VariableDeclaration","scope":4980,"src":"9378:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4894,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"9406:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4887,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5148,5183],"referencedDeclaration":5148,"src":"9401:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:27"},{"id":4979,"nodeType":"UncheckedBlock","src":"9815:408:27","statements":[{"expression":{"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4895,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"9839:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"9849:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"9858:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"9862:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4905,"nodeType":"ExpressionStatement","src":"9839:35:27"},{"expression":{"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4906,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"9888:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"9898:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4908,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"9907:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"9911:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4912,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4916,"nodeType":"ExpressionStatement","src":"9888:35:27"},{"expression":{"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"9937:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"9947:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4919,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"9956:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"9960:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4923,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4927,"nodeType":"ExpressionStatement","src":"9937:35:27"},{"expression":{"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4928,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"9986:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4929,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"9996:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4930,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"10005:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4931,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"10009:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4938,"nodeType":"ExpressionStatement","src":"9986:35:27"},{"expression":{"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4939,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"10035:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"10045:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4941,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"10054:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4942,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"10058:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4949,"nodeType":"ExpressionStatement","src":"10035:35:27"},{"expression":{"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4950,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"10084:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"10094:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4952,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"10103:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"10107:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4956,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4960,"nodeType":"ExpressionStatement","src":"10084:35:27"},{"expression":{"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4961,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"10133:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"10143:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"10152:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"10156:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4971,"nodeType":"ExpressionStatement","src":"10133:35:27"},{"expression":{"arguments":[{"id":4973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"10193:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4974,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"10201:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4975,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"10205:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4972,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"10189:3:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4876,"id":4978,"nodeType":"Return","src":"10182:30:27"}]}]},"documentation":{"id":4870,"nodeType":"StructuredDocumentation","src":"8359:223:27","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4981,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:27","nodeType":"FunctionDefinition","parameters":{"id":4873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4872,"mutability":"mutable","name":"a","nameLocation":"8609:1:27","nodeType":"VariableDeclaration","scope":4981,"src":"8601:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4871,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:27"},"returnParameters":{"id":4876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4981,"src":"8635:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4874,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:27"},"scope":5492,"src":"8587:1642:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5015,"nodeType":"Block","src":"10405:164:27","statements":[{"id":5014,"nodeType":"UncheckedBlock","src":"10415:148:27","statements":[{"assignments":[4993],"declarations":[{"constant":false,"id":4993,"mutability":"mutable","name":"result","nameLocation":"10447:6:27","nodeType":"VariableDeclaration","scope":5014,"src":"10439:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4992,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4997,"initialValue":{"arguments":[{"id":4995,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"10461:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4994,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4981,5016],"referencedDeclaration":4981,"src":"10456:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"10484:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5000,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"10511:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"id":4999,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"10494:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4449_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"10524:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"10533:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"10542:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:27","trueExpression":{"hexValue":"31","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4991,"id":5013,"nodeType":"Return","src":"10477:75:27"}]}]},"documentation":{"id":4982,"nodeType":"StructuredDocumentation","src":"10235:89:27","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":5016,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:27","nodeType":"FunctionDefinition","parameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"a","nameLocation":"10351:1:27","nodeType":"VariableDeclaration","scope":5016,"src":"10343:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4987,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:27","nodeType":"VariableDeclaration","scope":5016,"src":"10354:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"},"typeName":{"id":4986,"nodeType":"UserDefinedTypeName","pathNode":{"id":4985,"name":"Rounding","nameLocations":["10354:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4449,"src":"10354:8:27"},"referencedDeclaration":4449,"src":"10354:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:27"},"returnParameters":{"id":4991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5016,"src":"10396:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4989,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:27"},"scope":5492,"src":"10329:240:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5147,"nodeType":"Block","src":"10760:922:27","statements":[{"assignments":[5025],"declarations":[{"constant":false,"id":5025,"mutability":"mutable","name":"result","nameLocation":"10778:6:27","nodeType":"VariableDeclaration","scope":5147,"src":"10770:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5024,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5027,"initialValue":{"hexValue":"30","id":5026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:27"},{"id":5144,"nodeType":"UncheckedBlock","src":"10798:855:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"10826:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5042,"nodeType":"IfStatement","src":"10822:99:27","trueBody":{"id":5041,"nodeType":"Block","src":"10844:77:27","statements":[{"expression":{"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"10862:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5036,"nodeType":"ExpressionStatement","src":"10862:13:27"},{"expression":{"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"10893:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5040,"nodeType":"ExpressionStatement","src":"10893:13:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"10938:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5057,"nodeType":"IfStatement","src":"10934:96:27","trueBody":{"id":5056,"nodeType":"Block","src":"10955:75:27","statements":[{"expression":{"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"10973:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5051,"nodeType":"ExpressionStatement","src":"10973:12:27"},{"expression":{"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"11003:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5055,"nodeType":"ExpressionStatement","src":"11003:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11047:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5072,"nodeType":"IfStatement","src":"11043:96:27","trueBody":{"id":5071,"nodeType":"Block","src":"11064:75:27","statements":[{"expression":{"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11082:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5066,"nodeType":"ExpressionStatement","src":"11082:12:27"},{"expression":{"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5067,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"11112:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5070,"nodeType":"ExpressionStatement","src":"11112:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11156:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5087,"nodeType":"IfStatement","src":"11152:96:27","trueBody":{"id":5086,"nodeType":"Block","src":"11173:75:27","statements":[{"expression":{"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11191:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5081,"nodeType":"ExpressionStatement","src":"11191:12:27"},{"expression":{"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"11221:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5085,"nodeType":"ExpressionStatement","src":"11221:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11265:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5102,"nodeType":"IfStatement","src":"11261:93:27","trueBody":{"id":5101,"nodeType":"Block","src":"11281:73:27","statements":[{"expression":{"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11299:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5096,"nodeType":"ExpressionStatement","src":"11299:11:27"},{"expression":{"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"11328:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5100,"nodeType":"ExpressionStatement","src":"11328:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11371:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5117,"nodeType":"IfStatement","src":"11367:93:27","trueBody":{"id":5116,"nodeType":"Block","src":"11387:73:27","statements":[{"expression":{"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11405:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5111,"nodeType":"ExpressionStatement","src":"11405:11:27"},{"expression":{"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"11434:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5115,"nodeType":"ExpressionStatement","src":"11434:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11477:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":5119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5132,"nodeType":"IfStatement","src":"11473:93:27","trueBody":{"id":5131,"nodeType":"Block","src":"11493:73:27","statements":[{"expression":{"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11511:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":5124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5126,"nodeType":"ExpressionStatement","src":"11511:11:27"},{"expression":{"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"11540:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5130,"nodeType":"ExpressionStatement","src":"11540:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11583:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5143,"nodeType":"IfStatement","src":"11579:64:27","trueBody":{"id":5142,"nodeType":"Block","src":"11599:44:27","statements":[{"expression":{"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5138,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"11617:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5141,"nodeType":"ExpressionStatement","src":"11617:11:27"}]}}]},{"expression":{"id":5145,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"11669:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5023,"id":5146,"nodeType":"Return","src":"11662:13:27"}]},"documentation":{"id":5017,"nodeType":"StructuredDocumentation","src":"10575:119:27","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5148,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:27","nodeType":"FunctionDefinition","parameters":{"id":5020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"value","nameLocation":"10721:5:27","nodeType":"VariableDeclaration","scope":5148,"src":"10713:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5018,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:27"},"returnParameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5148,"src":"10751:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5021,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:27"},"scope":5492,"src":"10699:983:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5182,"nodeType":"Block","src":"11915:168:27","statements":[{"id":5181,"nodeType":"UncheckedBlock","src":"11925:152:27","statements":[{"assignments":[5160],"declarations":[{"constant":false,"id":5160,"mutability":"mutable","name":"result","nameLocation":"11957:6:27","nodeType":"VariableDeclaration","scope":5181,"src":"11949:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5159,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5164,"initialValue":{"arguments":[{"id":5162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"11971:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5161,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5148,5183],"referencedDeclaration":5148,"src":"11966:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"11998:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5167,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"12025:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"id":5166,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"12008:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4449_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5170,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"12043:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"12052:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:27","trueExpression":{"hexValue":"31","id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5158,"id":5180,"nodeType":"Return","src":"11991:75:27"}]}]},"documentation":{"id":5149,"nodeType":"StructuredDocumentation","src":"11688:142:27","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5183,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:27","nodeType":"FunctionDefinition","parameters":{"id":5155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"value","nameLocation":"11857:5:27","nodeType":"VariableDeclaration","scope":5183,"src":"11849:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5150,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5154,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:27","nodeType":"VariableDeclaration","scope":5183,"src":"11864:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"},"typeName":{"id":5153,"nodeType":"UserDefinedTypeName","pathNode":{"id":5152,"name":"Rounding","nameLocations":["11864:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4449,"src":"11864:8:27"},"referencedDeclaration":4449,"src":"11864:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:27"},"returnParameters":{"id":5158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5183,"src":"11906:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5156,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:27"},"scope":5492,"src":"11835:248:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5311,"nodeType":"Block","src":"12276:854:27","statements":[{"assignments":[5192],"declarations":[{"constant":false,"id":5192,"mutability":"mutable","name":"result","nameLocation":"12294:6:27","nodeType":"VariableDeclaration","scope":5311,"src":"12286:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5194,"initialValue":{"hexValue":"30","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:27"},{"id":5308,"nodeType":"UncheckedBlock","src":"12314:787:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"12342:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5211,"nodeType":"IfStatement","src":"12338:103:27","trueBody":{"id":5210,"nodeType":"Block","src":"12361:80:27","statements":[{"expression":{"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"12379:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5205,"nodeType":"ExpressionStatement","src":"12379:17:27"},{"expression":{"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"12414:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5209,"nodeType":"ExpressionStatement","src":"12414:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"12458:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5228,"nodeType":"IfStatement","src":"12454:103:27","trueBody":{"id":5227,"nodeType":"Block","src":"12477:80:27","statements":[{"expression":{"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"12495:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5222,"nodeType":"ExpressionStatement","src":"12495:17:27"},{"expression":{"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5223,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"12530:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5226,"nodeType":"ExpressionStatement","src":"12530:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"12574:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5245,"nodeType":"IfStatement","src":"12570:103:27","trueBody":{"id":5244,"nodeType":"Block","src":"12593:80:27","statements":[{"expression":{"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"12611:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5239,"nodeType":"ExpressionStatement","src":"12611:17:27"},{"expression":{"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"12646:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5243,"nodeType":"ExpressionStatement","src":"12646:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"12690:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5262,"nodeType":"IfStatement","src":"12686:100:27","trueBody":{"id":5261,"nodeType":"Block","src":"12708:78:27","statements":[{"expression":{"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"12726:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5256,"nodeType":"ExpressionStatement","src":"12726:16:27"},{"expression":{"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"12760:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5260,"nodeType":"ExpressionStatement","src":"12760:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"12803:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5279,"nodeType":"IfStatement","src":"12799:100:27","trueBody":{"id":5278,"nodeType":"Block","src":"12821:78:27","statements":[{"expression":{"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"12839:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5273,"nodeType":"ExpressionStatement","src":"12839:16:27"},{"expression":{"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"12873:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5277,"nodeType":"ExpressionStatement","src":"12873:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"12916:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5296,"nodeType":"IfStatement","src":"12912:100:27","trueBody":{"id":5295,"nodeType":"Block","src":"12934:78:27","statements":[{"expression":{"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"12952:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5290,"nodeType":"ExpressionStatement","src":"12952:16:27"},{"expression":{"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5291,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"12986:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5294,"nodeType":"ExpressionStatement","src":"12986:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"13029:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5307,"nodeType":"IfStatement","src":"13025:66:27","trueBody":{"id":5306,"nodeType":"Block","src":"13047:44:27","statements":[{"expression":{"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5302,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"13065:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5305,"nodeType":"ExpressionStatement","src":"13065:11:27"}]}}]},{"expression":{"id":5309,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"13117:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5190,"id":5310,"nodeType":"Return","src":"13110:13:27"}]},"documentation":{"id":5184,"nodeType":"StructuredDocumentation","src":"12089:120:27","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5312,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:27","nodeType":"FunctionDefinition","parameters":{"id":5187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5186,"mutability":"mutable","name":"value","nameLocation":"12237:5:27","nodeType":"VariableDeclaration","scope":5312,"src":"12229:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5185,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:27"},"returnParameters":{"id":5190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5312,"src":"12267:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5188,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:27"},"scope":5492,"src":"12214:916:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5346,"nodeType":"Block","src":"13365:170:27","statements":[{"id":5345,"nodeType":"UncheckedBlock","src":"13375:154:27","statements":[{"assignments":[5324],"declarations":[{"constant":false,"id":5324,"mutability":"mutable","name":"result","nameLocation":"13407:6:27","nodeType":"VariableDeclaration","scope":5345,"src":"13399:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5323,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5328,"initialValue":{"arguments":[{"id":5326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"13422:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5325,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5312,5347],"referencedDeclaration":5312,"src":"13416:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5329,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"13449:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5331,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"13476:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"id":5330,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"13459:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4449_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"13495:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"13504:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:27","trueExpression":{"hexValue":"31","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5322,"id":5344,"nodeType":"Return","src":"13442:76:27"}]}]},"documentation":{"id":5313,"nodeType":"StructuredDocumentation","src":"13136:143:27","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5347,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:27","nodeType":"FunctionDefinition","parameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5315,"mutability":"mutable","name":"value","nameLocation":"13307:5:27","nodeType":"VariableDeclaration","scope":5347,"src":"13299:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5314,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5318,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:27","nodeType":"VariableDeclaration","scope":5347,"src":"13314:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"},"typeName":{"id":5317,"nodeType":"UserDefinedTypeName","pathNode":{"id":5316,"name":"Rounding","nameLocations":["13314:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4449,"src":"13314:8:27"},"referencedDeclaration":4449,"src":"13314:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:27"},"returnParameters":{"id":5322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5347,"src":"13356:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5320,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:27"},"scope":5492,"src":"13284:251:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5433,"nodeType":"Block","src":"13855:600:27","statements":[{"assignments":[5356],"declarations":[{"constant":false,"id":5356,"mutability":"mutable","name":"result","nameLocation":"13873:6:27","nodeType":"VariableDeclaration","scope":5433,"src":"13865:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5355,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5358,"initialValue":{"hexValue":"30","id":5357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:27"},{"id":5430,"nodeType":"UncheckedBlock","src":"13893:533:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"13921:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5373,"nodeType":"IfStatement","src":"13917:98:27","trueBody":{"id":5372,"nodeType":"Block","src":"13939:76:27","statements":[{"expression":{"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"13957:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5367,"nodeType":"ExpressionStatement","src":"13957:13:27"},{"expression":{"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5368,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"13988:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5371,"nodeType":"ExpressionStatement","src":"13988:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"14032:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5388,"nodeType":"IfStatement","src":"14028:95:27","trueBody":{"id":5387,"nodeType":"Block","src":"14049:74:27","statements":[{"expression":{"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"14067:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5382,"nodeType":"ExpressionStatement","src":"14067:12:27"},{"expression":{"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"14097:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5386,"nodeType":"ExpressionStatement","src":"14097:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"14140:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5403,"nodeType":"IfStatement","src":"14136:95:27","trueBody":{"id":5402,"nodeType":"Block","src":"14157:74:27","statements":[{"expression":{"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"14175:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5397,"nodeType":"ExpressionStatement","src":"14175:12:27"},{"expression":{"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"14205:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5401,"nodeType":"ExpressionStatement","src":"14205:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"14248:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5418,"nodeType":"IfStatement","src":"14244:95:27","trueBody":{"id":5417,"nodeType":"Block","src":"14265:74:27","statements":[{"expression":{"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"14283:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5412,"nodeType":"ExpressionStatement","src":"14283:12:27"},{"expression":{"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5413,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"14313:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5416,"nodeType":"ExpressionStatement","src":"14313:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"14356:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5429,"nodeType":"IfStatement","src":"14352:64:27","trueBody":{"id":5428,"nodeType":"Block","src":"14372:44:27","statements":[{"expression":{"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5424,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"14390:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5427,"nodeType":"ExpressionStatement","src":"14390:11:27"}]}}]},{"expression":{"id":5431,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"14442:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5354,"id":5432,"nodeType":"Return","src":"14435:13:27"}]},"documentation":{"id":5348,"nodeType":"StructuredDocumentation","src":"13541:246:27","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5434,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:27","nodeType":"FunctionDefinition","parameters":{"id":5351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5350,"mutability":"mutable","name":"value","nameLocation":"13816:5:27","nodeType":"VariableDeclaration","scope":5434,"src":"13808:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5349,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:27"},"returnParameters":{"id":5354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5434,"src":"13846:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5352,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:27"},"scope":5492,"src":"13792:663:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5471,"nodeType":"Block","src":"14692:177:27","statements":[{"id":5470,"nodeType":"UncheckedBlock","src":"14702:161:27","statements":[{"assignments":[5446],"declarations":[{"constant":false,"id":5446,"mutability":"mutable","name":"result","nameLocation":"14734:6:27","nodeType":"VariableDeclaration","scope":5470,"src":"14726:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5445,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5450,"initialValue":{"arguments":[{"id":5448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"14750:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5447,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5434,5472],"referencedDeclaration":5434,"src":"14743:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"14777:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5453,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5440,"src":"14804:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"id":5452,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"14787:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4449_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"14823:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"14838:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:27","trueExpression":{"hexValue":"31","id":5464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5444,"id":5469,"nodeType":"Return","src":"14770:82:27"}]}]},"documentation":{"id":5435,"nodeType":"StructuredDocumentation","src":"14461:144:27","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5472,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:27","nodeType":"FunctionDefinition","parameters":{"id":5441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5437,"mutability":"mutable","name":"value","nameLocation":"14634:5:27","nodeType":"VariableDeclaration","scope":5472,"src":"14626:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5436,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5440,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:27","nodeType":"VariableDeclaration","scope":5472,"src":"14641:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"},"typeName":{"id":5439,"nodeType":"UserDefinedTypeName","pathNode":{"id":5438,"name":"Rounding","nameLocations":["14641:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4449,"src":"14641:8:27"},"referencedDeclaration":4449,"src":"14641:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:27"},"returnParameters":{"id":5444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5472,"src":"14683:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5442,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:27"},"scope":5492,"src":"14610:259:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5490,"nodeType":"Block","src":"15067:48:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5483,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"15090:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}],"id":5482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5481,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:27","typeDescriptions":{}}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5480,"id":5489,"nodeType":"Return","src":"15077:31:27"}]},"documentation":{"id":5473,"nodeType":"StructuredDocumentation","src":"14875:113:27","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5491,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:27","nodeType":"FunctionDefinition","parameters":{"id":5477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5476,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:27","nodeType":"VariableDeclaration","scope":5491,"src":"15019:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"},"typeName":{"id":5475,"nodeType":"UserDefinedTypeName","pathNode":{"id":5474,"name":"Rounding","nameLocations":["15019:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4449,"src":"15019:8:27"},"referencedDeclaration":4449,"src":"15019:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4449","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:27"},"returnParameters":{"id":5480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5491,"src":"15061:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5478,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:27"},"scope":5492,"src":"14993:122:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5493,"src":"203:14914:27","usedErrors":[4444],"usedEvents":[]}],"src":"103:15015:27"},"id":27},"contracts/Looping.sol":{"ast":{"absolutePath":"contracts/Looping.sol","exportedSymbols":{"DataTypes":[1299],"IAaveOracle":[75],"IAsset":[1444],"IERC20":[1440],"IFlashLoanRecipient":[1479],"IPool":[714],"IVault":[2066],"Looping":[6386],"Math":[5492],"OwnableERC4626":[6428]},"id":6387,"nodeType":"SourceUnit","nodes":[{"id":5494,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"0:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":5496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6387,"sourceUnit":5493,"src":"26:65:28","symbolAliases":[{"foreign":{"id":5495,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"34:4:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/OwnableERC4626.sol","file":"./OwnableERC4626.sol","id":5498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6387,"sourceUnit":6429,"src":"93:52:28","symbolAliases":[{"foreign":{"id":5497,"name":"OwnableERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"101:14:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","id":5500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6387,"sourceUnit":1441,"src":"146:101:28","symbolAliases":[{"foreign":{"id":5499,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"154:6:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","id":5502,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6387,"sourceUnit":1480,"src":"321:105:28","symbolAliases":[{"foreign":{"id":5501,"name":"IFlashLoanRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"329:19:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","id":5504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6387,"sourceUnit":2067,"src":"427:79:28","symbolAliases":[{"foreign":{"id":5503,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"435:6:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","id":5506,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6387,"sourceUnit":1445,"src":"507:79:28","symbolAliases":[{"foreign":{"id":5505,"name":"IAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"515:6:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/interfaces/IAaveOracle.sol","file":"@aave/core-v3/contracts/interfaces/IAaveOracle.sol","id":5508,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6387,"sourceUnit":76,"src":"662:79:28","symbolAliases":[{"foreign":{"id":5507,"name":"IAaveOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"670:11:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","file":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","id":5510,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6387,"sourceUnit":1300,"src":"742:89:28","symbolAliases":[{"foreign":{"id":5509,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"750:9:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/interfaces/IPool.sol","file":"@aave/core-v3/contracts/interfaces/IPool.sol","id":5512,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6387,"sourceUnit":715,"src":"832:67:28","symbolAliases":[{"foreign":{"id":5511,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"840:5:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","id":5514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6387,"sourceUnit":2067,"src":"900:79:28","symbolAliases":[{"foreign":{"id":5513,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"908:6:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5515,"name":"OwnableERC4626","nameLocations":["1053:14:28"],"nodeType":"IdentifierPath","referencedDeclaration":6428,"src":"1053:14:28"},"id":5516,"nodeType":"InheritanceSpecifier","src":"1053:14:28"},{"baseName":{"id":5517,"name":"IFlashLoanRecipient","nameLocations":["1070:19:28"],"nodeType":"IdentifierPath","referencedDeclaration":1479,"src":"1070:19:28"},"id":5518,"nodeType":"InheritanceSpecifier","src":"1070:19:28"}],"canonicalName":"Looping","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6386,"linearizedBaseContracts":[6386,1479,6428,2214,3803,2388,3040,2430,3829,3118,4438],"name":"Looping","nameLocation":"1042:7:28","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5521,"libraryName":{"id":5519,"name":"Math","nameLocations":["1102:4:28"],"nodeType":"IdentifierPath","referencedDeclaration":5492,"src":"1102:4:28"},"nodeType":"UsingForDirective","src":"1096:23:28","typeName":{"id":5520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1111:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":5527,"mutability":"constant","name":"BALANCER_FLASHLOAN","nameLocation":"1150:18:28","nodeType":"VariableDeclaration","scope":6386,"src":"1125:97:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5522,"name":"address","nodeType":"ElementaryTypeName","src":"1125:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307842413132323232323232323238643842613434353935386137356130373034643536364246324338","id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1179:42:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xBA12222222228d8Ba445958a75a0704d566BF2C8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1171:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5523,"name":"address","nodeType":"ElementaryTypeName","src":"1171:7:28","typeDescriptions":{}}},"id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1171:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":5533,"mutability":"constant","name":"AAVE","nameLocation":"1253:4:28","nodeType":"VariableDeclaration","scope":6386,"src":"1228:83:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5528,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307837393461363133353844363834353539344639346463314442303241323532623562343831346144","id":5531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1268:42:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x794a61358D6845594F94dc1DB02A252b5b4814aD"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1260:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5529,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:28","typeDescriptions":{}}},"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1260:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":5539,"mutability":"constant","name":"AAVE_ORACLE","nameLocation":"1342:11:28","nodeType":"VariableDeclaration","scope":6386,"src":"1317:90:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5534,"name":"address","nodeType":"ElementaryTypeName","src":"1317:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307862353663324630423635334232653062313043396239323843383538304163354466303243374337","id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1364:42:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xb56c2F0B653B2e0b10C9b928C8580Ac5Df02C7C7"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1356:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5535,"name":"address","nodeType":"ElementaryTypeName","src":"1356:7:28","typeDescriptions":{}}},"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1356:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":5545,"mutability":"constant","name":"BALANCER_SWAP","nameLocation":"1438:13:28","nodeType":"VariableDeclaration","scope":6386,"src":"1413:92:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5540,"name":"address","nodeType":"ElementaryTypeName","src":"1413:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307842413132323232323232323238643842613434353935386137356130373034643536364246324338","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1462:42:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xBA12222222228d8Ba445958a75a0704d566BF2C8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1454:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5541,"name":"address","nodeType":"ElementaryTypeName","src":"1454:7:28","typeDescriptions":{}}},"id":5544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1454:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":5554,"mutability":"constant","name":"BALANCER_POOL_ID","nameLocation":"1536:16:28","nodeType":"VariableDeclaration","scope":6386,"src":"1511:128:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1511:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"arguments":[{"hexValue":"307833366266323237643662616339366532616231656262353439326563656336396336393139343366303030323030303030303030303030303030303030333136","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1571:66:28","typeDescriptions":{"typeIdentifier":"t_rational_24762599653577595020136574787968794375604777501802005618723861787827691848470_by_1","typeString":"int_const 2476...(69 digits omitted)...8470"},"value":"0x36bf227d6bac96e2ab1ebb5492ecec69c691943f000200000000000000000316"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24762599653577595020136574787968794375604777501802005618723861787827691848470_by_1","typeString":"int_const 2476...(69 digits omitted)...8470"}],"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1563:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:28","typeDescriptions":{}}},"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1563:75:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1555:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1555:7:28","typeDescriptions":{}}},"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1555:84:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":5556,"mutability":"mutable","name":"_max_ltv","nameLocation":"1661:8:28","nodeType":"VariableDeclaration","scope":6386,"src":"1645:24:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1645:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":5558,"mutability":"mutable","name":"_slippage","nameLocation":"1701:9:28","nodeType":"VariableDeclaration","scope":6386,"src":"1685:25:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1685:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":5561,"mutability":"mutable","name":"_interestRateMode","nameLocation":"1761:17:28","nodeType":"VariableDeclaration","scope":6386,"src":"1726:52:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":5560,"nodeType":"UserDefinedTypeName","pathNode":{"id":5559,"name":"DataTypes.InterestRateMode","nameLocations":["1726:9:28","1736:16:28"],"nodeType":"IdentifierPath","referencedDeclaration":1003,"src":"1726:26:28"},"referencedDeclaration":1003,"src":"1726:26:28","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"private"},{"canonicalName":"Looping.Operation","id":5564,"members":[{"id":5562,"name":"Deposit","nameLocation":"1801:7:28","nodeType":"EnumValue","src":"1801:7:28"},{"id":5563,"name":"Withdraw","nameLocation":"1810:8:28","nodeType":"EnumValue","src":"1810:8:28"}],"name":"Operation","nameLocation":"1790:9:28","nodeType":"EnumDefinition","src":"1785:34:28"},{"body":{"id":5593,"nodeType":"Block","src":"1934:130:28","statements":[{"expression":{"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5579,"name":"_max_ltv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"1944:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5580,"name":"max_ltv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"1955:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1944:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5582,"nodeType":"ExpressionStatement","src":"1944:18:28"},{"expression":{"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5583,"name":"_slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"1972:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5584,"name":"slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"1984:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1972:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5586,"nodeType":"ExpressionStatement","src":"1972:20:28"},{"expression":{"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5587,"name":"_interestRateMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"2002:17:28","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":5588,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"2022:9:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DataTypes_$1299_$","typeString":"type(library DataTypes)"}},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2032:16:28","memberName":"InterestRateMode","nodeType":"MemberAccess","referencedDeclaration":1003,"src":"2022:26:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_InterestRateMode_$1003_$","typeString":"type(enum DataTypes.InterestRateMode)"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2049:8:28","memberName":"VARIABLE","nodeType":"MemberAccess","referencedDeclaration":1002,"src":"2022:35:28","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"src":"2002:55:28","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"id":5592,"nodeType":"ExpressionStatement","src":"2002:55:28"}]},"id":5594,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5575,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"1921:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5576,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"1928:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5577,"kind":"baseConstructorSpecifier","modifierName":{"id":5574,"name":"OwnableERC4626","nameLocations":["1906:14:28"],"nodeType":"IdentifierPath","referencedDeclaration":6428,"src":"1906:14:28"},"nodeType":"ModifierInvocation","src":"1906:27:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5566,"mutability":"mutable","name":"asset","nameLocation":"1845:5:28","nodeType":"VariableDeclaration","scope":5594,"src":"1837:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5565,"name":"address","nodeType":"ElementaryTypeName","src":"1837:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5568,"mutability":"mutable","name":"base","nameLocation":"1860:4:28","nodeType":"VariableDeclaration","scope":5594,"src":"1852:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5567,"name":"address","nodeType":"ElementaryTypeName","src":"1852:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5570,"mutability":"mutable","name":"max_ltv","nameLocation":"1874:7:28","nodeType":"VariableDeclaration","scope":5594,"src":"1866:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1866:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5572,"mutability":"mutable","name":"slippage","nameLocation":"1891:8:28","nodeType":"VariableDeclaration","scope":5594,"src":"1883:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1883:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1836:64:28"},"returnParameters":{"id":5578,"nodeType":"ParameterList","parameters":[],"src":"1934:0:28"},"scope":6386,"src":"1825:239:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5625,"nodeType":"Block","src":"2199:148:28","statements":[{"expression":{"arguments":[{"hexValue":"32","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2234:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"arguments":[{"id":5607,"name":"AAVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"2215:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5606,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"2209:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPool_$714_$","typeString":"type(contract IPool)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2209:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$714","typeString":"contract IPool"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2221:12:28","memberName":"setUserEMode","nodeType":"MemberAccess","referencedDeclaration":640,"src":"2209:24:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8) external"}},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2209:27:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5612,"nodeType":"ExpressionStatement","src":"2209:27:28"},{"expression":{"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5613,"name":"_max_ltv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"2246:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5614,"name":"max_ltv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"2257:7:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"2246:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5616,"nodeType":"ExpressionStatement","src":"2246:18:28"},{"expression":{"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5617,"name":"_slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"2274:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5618,"name":"slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"2286:8:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"2274:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5620,"nodeType":"ExpressionStatement","src":"2274:20:28"},{"expression":{"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5621,"name":"_interestRateMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"2304:17:28","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5622,"name":"interestRateMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"2324:16:28","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"src":"2304:36:28","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"id":5624,"nodeType":"ExpressionStatement","src":"2304:36:28"}]},"functionSelector":"4b6b2887","id":5626,"implemented":true,"kind":"function","modifiers":[{"id":5604,"kind":"modifierInvocation","modifierName":{"id":5603,"name":"onlyOwner","nameLocations":["2189:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"2189:9:28"},"nodeType":"ModifierInvocation","src":"2189:9:28"}],"name":"setExecutionParams","nameLocation":"2083:18:28","nodeType":"FunctionDefinition","parameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5596,"mutability":"mutable","name":"max_ltv","nameLocation":"2109:7:28","nodeType":"VariableDeclaration","scope":5626,"src":"2102:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5595,"name":"uint16","nodeType":"ElementaryTypeName","src":"2102:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5598,"mutability":"mutable","name":"slippage","nameLocation":"2125:8:28","nodeType":"VariableDeclaration","scope":5626,"src":"2118:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5597,"name":"uint16","nodeType":"ElementaryTypeName","src":"2118:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5601,"mutability":"mutable","name":"interestRateMode","nameLocation":"2162:16:28","nodeType":"VariableDeclaration","scope":5626,"src":"2135:43:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":5600,"nodeType":"UserDefinedTypeName","pathNode":{"id":5599,"name":"DataTypes.InterestRateMode","nameLocations":["2135:9:28","2145:16:28"],"nodeType":"IdentifierPath","referencedDeclaration":1003,"src":"2135:26:28"},"referencedDeclaration":1003,"src":"2135:26:28","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"}],"src":"2101:78:28"},"returnParameters":{"id":5605,"nodeType":"ParameterList","parameters":[],"src":"2199:0:28"},"scope":6386,"src":"2074:273:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5719,"nodeType":"Block","src":"2460:1023:28","statements":[{"assignments":[5636],"declarations":[{"constant":false,"id":5636,"mutability":"mutable","name":"assetPrice","nameLocation":"2927:10:28","nodeType":"VariableDeclaration","scope":5719,"src":"2922:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5635,"name":"uint","nodeType":"ElementaryTypeName","src":"2922:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5643,"initialValue":{"arguments":[{"id":5641,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"2979:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5638,"name":"AAVE_ORACLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"2952:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5637,"name":"IAaveOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"2940:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAaveOracle_$75_$","typeString":"type(contract IAaveOracle)"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2940:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAaveOracle_$75","typeString":"contract IAaveOracle"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2965:13:28","memberName":"getAssetPrice","nodeType":"MemberAccess","referencedDeclaration":946,"src":"2940:38:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2940:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2922:63:28"},{"assignments":[5645],"declarations":[{"constant":false,"id":5645,"mutability":"mutable","name":"liabilityPrice","nameLocation":"3000:14:28","nodeType":"VariableDeclaration","scope":5719,"src":"2995:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5644,"name":"uint","nodeType":"ElementaryTypeName","src":"2995:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5654,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5650,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3056:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3061:5:28","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"3056:10:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3056:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5647,"name":"AAVE_ORACLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"3029:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5646,"name":"IAaveOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"3017:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAaveOracle_$75_$","typeString":"type(contract IAaveOracle)"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3017:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAaveOracle_$75","typeString":"contract IAaveOracle"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3042:13:28","memberName":"getAssetPrice","nodeType":"MemberAccess","referencedDeclaration":946,"src":"3017:38:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3017:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2995:74:28"},{"assignments":[null,null,5656,null,null,null],"declarations":[null,null,{"constant":false,"id":5656,"mutability":"mutable","name":"availableBorrowsBase","nameLocation":"3092:20:28","nodeType":"VariableDeclaration","scope":5719,"src":"3084:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5655,"name":"uint256","nodeType":"ElementaryTypeName","src":"3084:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null,null],"id":5666,"initialValue":{"arguments":[{"arguments":[{"id":5663,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3161:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3153:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5661,"name":"address","nodeType":"ElementaryTypeName","src":"3153:7:28","typeDescriptions":{}}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3153:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5658,"name":"AAVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"3128:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5657,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"3122:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPool_$714_$","typeString":"type(contract IPool)"}},"id":5659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3122:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$714","typeString":"contract IPool"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3134:18:28","memberName":"getUserAccountData","nodeType":"MemberAccess","referencedDeclaration":484,"src":"3122:30:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"}},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3122:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3079:88:28"},{"assignments":[5668],"declarations":[{"constant":false,"id":5668,"mutability":"mutable","name":"availableBorrows","nameLocation":"3182:16:28","nodeType":"VariableDeclaration","scope":5719,"src":"3177:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5667,"name":"uint","nodeType":"ElementaryTypeName","src":"3177:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5672,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5669,"name":"availableBorrowsBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"3202:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5670,"name":"liabilityPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"3225:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3202:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3177:62:28"},{"expression":{"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5673,"name":"flashLoanAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"3250:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5674,"name":"availableBorrows","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"3266:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":5677,"name":"_max_ltv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"3303:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3313:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5679,"name":"_slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"3315:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":5680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3325:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3315:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3313:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3312:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5675,"name":"depositAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"3285:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3296:6:28","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":4826,"src":"3285:17:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3285:47:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3266:66:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3265:68:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3337:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5688,"name":"_max_ltv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"3339:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3349:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5690,"name":"_slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"3351:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3361:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3351:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3349:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3348:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3339:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3337:30:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3336:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3265:103:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3250:118:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5700,"nodeType":"ExpressionStatement","src":"3250:118:28"},{"expression":{"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5701,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"3378:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5707,"name":"liabilityPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"3429:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5708,"name":"assetPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"3445:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3457:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"_slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"3459:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3469:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3459:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3456:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3445:30:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5702,"name":"depositAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"3395:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5703,"name":"flashLoanAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"3408:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3395:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3394:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3422:6:28","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":4826,"src":"3394:34:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3394:82:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3378:98:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5718,"nodeType":"ExpressionStatement","src":"3378:98:28"}]},"id":5720,"implemented":true,"kind":"function","modifiers":[],"name":"depositCalculations","nameLocation":"2362:19:28","nodeType":"FunctionDefinition","parameters":{"id":5629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5628,"mutability":"mutable","name":"depositAmt","nameLocation":"2387:10:28","nodeType":"VariableDeclaration","scope":5720,"src":"2382:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5627,"name":"uint","nodeType":"ElementaryTypeName","src":"2382:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2381:17:28"},"returnParameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"flashLoanAmt","nameLocation":"2426:12:28","nodeType":"VariableDeclaration","scope":5720,"src":"2421:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5630,"name":"uint","nodeType":"ElementaryTypeName","src":"2421:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5633,"mutability":"mutable","name":"minAmountsOut","nameLocation":"2445:13:28","nodeType":"VariableDeclaration","scope":5720,"src":"2440:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5632,"name":"uint","nodeType":"ElementaryTypeName","src":"2440:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2420:39:28"},"scope":6386,"src":"2353:1130:28","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[3747],"body":{"id":5814,"nodeType":"Block","src":"3592:688:28","statements":[{"expression":{"arguments":[{"id":5735,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"3617:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5736,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"3625:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5737,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"3635:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5738,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"3643:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5732,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3602:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Looping_$6386_$","typeString":"type(contract super Looping)"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:8:28","memberName":"_deposit","nodeType":"MemberAccess","referencedDeclaration":3747,"src":"3602:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:48:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5740,"nodeType":"ExpressionStatement","src":"3602:48:28"},{"assignments":[5742,5744],"declarations":[{"constant":false,"id":5742,"mutability":"mutable","name":"flashLoanAmt","nameLocation":"3721:12:28","nodeType":"VariableDeclaration","scope":5814,"src":"3716:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5741,"name":"uint","nodeType":"ElementaryTypeName","src":"3716:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5744,"mutability":"mutable","name":"minAmountsOut","nameLocation":"3740:13:28","nodeType":"VariableDeclaration","scope":5814,"src":"3735:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5743,"name":"uint","nodeType":"ElementaryTypeName","src":"3735:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5748,"initialValue":{"arguments":[{"id":5746,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"3777:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5745,"name":"depositCalculations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"3757:19:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view returns (uint256,uint256)"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3757:27:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3715:69:28"},{"assignments":[5753],"declarations":[{"constant":false,"id":5753,"mutability":"mutable","name":"tokens","nameLocation":"3907:6:28","nodeType":"VariableDeclaration","scope":5814,"src":"3891:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":5751,"nodeType":"UserDefinedTypeName","pathNode":{"id":5750,"name":"IERC20","nameLocations":["3891:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"3891:6:28"},"referencedDeclaration":1440,"src":"3891:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":5752,"nodeType":"ArrayTypeName","src":"3891:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"id":5760,"initialValue":{"arguments":[{"hexValue":"31","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3929:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3916:12:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (contract IERC20[] memory)"},"typeName":{"baseType":{"id":5755,"nodeType":"UserDefinedTypeName","pathNode":{"id":5754,"name":"IERC20","nameLocations":["3920:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"3920:6:28"},"referencedDeclaration":1440,"src":"3920:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":5756,"nodeType":"ArrayTypeName","src":"3920:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}}},"id":5759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3916:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3891:40:28"},{"expression":{"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5761,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"3941:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":5763,"indexExpression":{"hexValue":"30","id":5762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3948:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3941:9:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5765,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3960:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3965:5:28","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"3960:10:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3960:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5764,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"3953:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1440_$","typeString":"type(contract IERC20)"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3953:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"src":"3941:32:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":5770,"nodeType":"ExpressionStatement","src":"3941:32:28"},{"assignments":[5775],"declarations":[{"constant":false,"id":5775,"mutability":"mutable","name":"amounts","nameLocation":"4000:7:28","nodeType":"VariableDeclaration","scope":5814,"src":"3983:24:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5773,"name":"uint256","nodeType":"ElementaryTypeName","src":"3983:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5774,"nodeType":"ArrayTypeName","src":"3983:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5781,"initialValue":{"arguments":[{"hexValue":"31","id":5779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4024:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4010:13:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5776,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5777,"nodeType":"ArrayTypeName","src":"4014:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4010:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3983:43:28"},{"expression":{"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5782,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5775,"src":"4036:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5784,"indexExpression":{"hexValue":"30","id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4044:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4036:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5785,"name":"flashLoanAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"4049:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4036:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5787,"nodeType":"ExpressionStatement","src":"4036:25:28"},{"assignments":[5789],"declarations":[{"constant":false,"id":5789,"mutability":"mutable","name":"userData","nameLocation":"4084:8:28","nodeType":"VariableDeclaration","scope":5814,"src":"4071:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5788,"name":"bytes","nodeType":"ElementaryTypeName","src":"4071:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5801,"initialValue":{"arguments":[{"expression":{"id":5792,"name":"Operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"4112:9:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$5564_$","typeString":"type(enum Looping.Operation)"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4122:7:28","memberName":"Deposit","nodeType":"MemberAccess","referencedDeclaration":5562,"src":"4112:17:28","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$5564","typeString":"enum Looping.Operation"}},{"id":5794,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"4131:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4151:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5796,"name":"uint256","nodeType":"ElementaryTypeName","src":"4151:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5795,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4146:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4160:3:28","memberName":"min","nodeType":"MemberAccess","src":"4146:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Operation_$5564","typeString":"enum Looping.Operation"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5790,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4095:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4099:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"4095:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4095:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4071:93:28"},{"expression":{"arguments":[{"arguments":[{"id":5807,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4240:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":5806,"name":"IFlashLoanRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"4220:19:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFlashLoanRecipient_$1479_$","typeString":"type(contract IFlashLoanRecipient)"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4220:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$1479","typeString":"contract IFlashLoanRecipient"}},{"id":5809,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"4247:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},{"id":5810,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5775,"src":"4255:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":5811,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"4264:8:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$1479","typeString":"contract IFlashLoanRecipient"},{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":5803,"name":"BALANCER_FLASHLOAN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"4190:18:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5802,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"4183:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$2066_$","typeString":"type(contract IVault)"}},"id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4183:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$2066","typeString":"contract IVault"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4210:9:28","memberName":"flashLoan","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"4183:36:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IFlashLoanRecipient_$1479_$_t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IFlashLoanRecipient,contract IERC20[] memory,uint256[] memory,bytes memory) external"}},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4183:90:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5813,"nodeType":"ExpressionStatement","src":"4183:90:28"}]},"id":5815,"implemented":true,"kind":"function","modifiers":[],"name":"_deposit","nameLocation":"3499:8:28","nodeType":"FunctionDefinition","overrides":{"id":5730,"nodeType":"OverrideSpecifier","overrides":[],"src":"3583:8:28"},"parameters":{"id":5729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5722,"mutability":"mutable","name":"caller","nameLocation":"3516:6:28","nodeType":"VariableDeclaration","scope":5815,"src":"3508:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5721,"name":"address","nodeType":"ElementaryTypeName","src":"3508:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5724,"mutability":"mutable","name":"receiver","nameLocation":"3532:8:28","nodeType":"VariableDeclaration","scope":5815,"src":"3524:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5723,"name":"address","nodeType":"ElementaryTypeName","src":"3524:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5726,"mutability":"mutable","name":"assets","nameLocation":"3550:6:28","nodeType":"VariableDeclaration","scope":5815,"src":"3542:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5725,"name":"uint256","nodeType":"ElementaryTypeName","src":"3542:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5728,"mutability":"mutable","name":"shares","nameLocation":"3566:6:28","nodeType":"VariableDeclaration","scope":5815,"src":"3558:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5727,"name":"uint256","nodeType":"ElementaryTypeName","src":"3558:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3507:66:28"},"returnParameters":{"id":5731,"nodeType":"ParameterList","parameters":[],"src":"3592:0:28"},"scope":6386,"src":"3490:790:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5886,"nodeType":"Block","src":"4411:840:28","statements":[{"assignments":[5827],"declarations":[{"constant":false,"id":5827,"mutability":"mutable","name":"assetPrice","nameLocation":"4802:10:28","nodeType":"VariableDeclaration","scope":5886,"src":"4797:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5826,"name":"uint","nodeType":"ElementaryTypeName","src":"4797:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5834,"initialValue":{"arguments":[{"id":5832,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"4854:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5829,"name":"AAVE_ORACLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"4827:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5828,"name":"IAaveOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"4815:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAaveOracle_$75_$","typeString":"type(contract IAaveOracle)"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4815:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAaveOracle_$75","typeString":"contract IAaveOracle"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4840:13:28","memberName":"getAssetPrice","nodeType":"MemberAccess","referencedDeclaration":946,"src":"4815:38:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4815:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4797:63:28"},{"assignments":[5836],"declarations":[{"constant":false,"id":5836,"mutability":"mutable","name":"liabilityPrice","nameLocation":"4875:14:28","nodeType":"VariableDeclaration","scope":5886,"src":"4870:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5835,"name":"uint","nodeType":"ElementaryTypeName","src":"4870:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5845,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5841,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4931:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4936:5:28","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"4931:10:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4931:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5838,"name":"AAVE_ORACLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"4904:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5837,"name":"IAaveOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"4892:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAaveOracle_$75_$","typeString":"type(contract IAaveOracle)"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4892:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAaveOracle_$75","typeString":"contract IAaveOracle"}},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4917:13:28","memberName":"getAssetPrice","nodeType":"MemberAccess","referencedDeclaration":946,"src":"4892:38:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4892:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4870:74:28"},{"assignments":[5847,5849,null,null,null,null],"declarations":[{"constant":false,"id":5847,"mutability":"mutable","name":"totalCollateralBase","nameLocation":"4963:19:28","nodeType":"VariableDeclaration","scope":5886,"src":"4955:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5846,"name":"uint256","nodeType":"ElementaryTypeName","src":"4955:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5849,"mutability":"mutable","name":"totalDebtBase","nameLocation":"4992:13:28","nodeType":"VariableDeclaration","scope":5886,"src":"4984:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5848,"name":"uint256","nodeType":"ElementaryTypeName","src":"4984:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null,null,null],"id":5859,"initialValue":{"arguments":[{"arguments":[{"id":5856,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5056:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":5855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5048:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5854,"name":"address","nodeType":"ElementaryTypeName","src":"5048:7:28","typeDescriptions":{}}},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5048:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5851,"name":"AAVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"5023:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5850,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"5017:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPool_$714_$","typeString":"type(contract IPool)"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5017:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$714","typeString":"contract IPool"}},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5029:18:28","memberName":"getUserAccountData","nodeType":"MemberAccess","referencedDeclaration":484,"src":"5017:30:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5017:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4954:108:28"},{"expression":{"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5860,"name":"flashLoanAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"5081:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5863,"name":"sharesAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"5117:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5864,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"5128:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5128:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5861,"name":"totalDebtBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"5096:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5110:6:28","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":4826,"src":"5096:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5096:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5081:61:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5868,"nodeType":"ExpressionStatement","src":"5081:61:28"},{"expression":{"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5869,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"5152:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5872,"name":"liabilityPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"5188:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5873,"name":"_max_ltv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"5204:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5874,"name":"assetPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"5213:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5204:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5225:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5877,"name":"_slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"5227:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":5878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5237:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"5227:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5225:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5881,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5224:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5204:39:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5870,"name":"flashLoanAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"5168:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5181:6:28","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":4826,"src":"5168:19:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5168:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5152:92:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5885,"nodeType":"ExpressionStatement","src":"5152:92:28"}]},"id":5887,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawCalculations","nameLocation":"4295:20:28","nodeType":"FunctionDefinition","parameters":{"id":5818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5817,"mutability":"mutable","name":"sharesAmt","nameLocation":"4321:9:28","nodeType":"VariableDeclaration","scope":5887,"src":"4316:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5816,"name":"uint","nodeType":"ElementaryTypeName","src":"4316:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4315:16:28"},"returnParameters":{"id":5825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5820,"mutability":"mutable","name":"flashLoanAmt","nameLocation":"4359:12:28","nodeType":"VariableDeclaration","scope":5887,"src":"4354:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5819,"name":"uint","nodeType":"ElementaryTypeName","src":"4354:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5822,"mutability":"mutable","name":"minAmountsOut","nameLocation":"4378:13:28","nodeType":"VariableDeclaration","scope":5887,"src":"4373:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5821,"name":"uint","nodeType":"ElementaryTypeName","src":"4373:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5824,"mutability":"mutable","name":"withdrawAmt","nameLocation":"4398:11:28","nodeType":"VariableDeclaration","scope":5887,"src":"4393:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5823,"name":"uint","nodeType":"ElementaryTypeName","src":"4393:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4353:57:28"},"scope":6386,"src":"4286:965:28","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[3794],"body":{"id":5980,"nodeType":"Block","src":"5421:649:28","statements":[{"assignments":[5902,5904,5906],"declarations":[{"constant":false,"id":5902,"mutability":"mutable","name":"flashLoanAmt","nameLocation":"5437:12:28","nodeType":"VariableDeclaration","scope":5980,"src":"5432:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5901,"name":"uint","nodeType":"ElementaryTypeName","src":"5432:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5904,"mutability":"mutable","name":"minAmountsOut","nameLocation":"5456:13:28","nodeType":"VariableDeclaration","scope":5980,"src":"5451:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5903,"name":"uint","nodeType":"ElementaryTypeName","src":"5451:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5906,"mutability":"mutable","name":"withdrawAmt","nameLocation":"5476:11:28","nodeType":"VariableDeclaration","scope":5980,"src":"5471:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5905,"name":"uint","nodeType":"ElementaryTypeName","src":"5471:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5910,"initialValue":{"arguments":[{"id":5908,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"5512:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5907,"name":"withdrawCalculations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"5491:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view returns (uint256,uint256,uint256)"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5491:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5431:88:28"},{"assignments":[5915],"declarations":[{"constant":false,"id":5915,"mutability":"mutable","name":"tokens","nameLocation":"5642:6:28","nodeType":"VariableDeclaration","scope":5980,"src":"5626:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":5913,"nodeType":"UserDefinedTypeName","pathNode":{"id":5912,"name":"IERC20","nameLocations":["5626:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"5626:6:28"},"referencedDeclaration":1440,"src":"5626:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":5914,"nodeType":"ArrayTypeName","src":"5626:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"id":5922,"initialValue":{"arguments":[{"hexValue":"31","id":5920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5664:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5651:12:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (contract IERC20[] memory)"},"typeName":{"baseType":{"id":5917,"nodeType":"UserDefinedTypeName","pathNode":{"id":5916,"name":"IERC20","nameLocations":["5655:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"5655:6:28"},"referencedDeclaration":1440,"src":"5655:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":5918,"nodeType":"ArrayTypeName","src":"5655:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}}},"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5651:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5626:40:28"},{"expression":{"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5923,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"5676:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":5925,"indexExpression":{"hexValue":"30","id":5924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5683:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5676:9:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5927,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"5695:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5926,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"5688:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1440_$","typeString":"type(contract IERC20)"}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5688:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"src":"5676:25:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":5930,"nodeType":"ExpressionStatement","src":"5676:25:28"},{"assignments":[5935],"declarations":[{"constant":false,"id":5935,"mutability":"mutable","name":"amounts","nameLocation":"5728:7:28","nodeType":"VariableDeclaration","scope":5980,"src":"5711:24:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"5711:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5934,"nodeType":"ArrayTypeName","src":"5711:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5941,"initialValue":{"arguments":[{"hexValue":"31","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5752:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5738:13:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5936,"name":"uint256","nodeType":"ElementaryTypeName","src":"5742:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5937,"nodeType":"ArrayTypeName","src":"5742:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5738:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5711:43:28"},{"expression":{"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5942,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"5764:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5944,"indexExpression":{"hexValue":"30","id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5772:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5764:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5945,"name":"flashLoanAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"5777:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5764:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5947,"nodeType":"ExpressionStatement","src":"5764:25:28"},{"assignments":[5949],"declarations":[{"constant":false,"id":5949,"mutability":"mutable","name":"userData","nameLocation":"5812:8:28","nodeType":"VariableDeclaration","scope":5980,"src":"5799:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5948,"name":"bytes","nodeType":"ElementaryTypeName","src":"5799:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5957,"initialValue":{"arguments":[{"expression":{"id":5952,"name":"Operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"5840:9:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$5564_$","typeString":"type(enum Looping.Operation)"}},"id":5953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5850:8:28","memberName":"Withdraw","nodeType":"MemberAccess","referencedDeclaration":5563,"src":"5840:18:28","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$5564","typeString":"enum Looping.Operation"}},{"id":5954,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"5860:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5955,"name":"withdrawAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"5875:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Operation_$5564","typeString":"enum Looping.Operation"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5950,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5823:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5827:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"5823:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5823:64:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5799:88:28"},{"expression":{"arguments":[{"arguments":[{"id":5963,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5963:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":5962,"name":"IFlashLoanRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"5943:19:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFlashLoanRecipient_$1479_$","typeString":"type(contract IFlashLoanRecipient)"}},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5943:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$1479","typeString":"contract IFlashLoanRecipient"}},{"id":5965,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"5970:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},{"id":5966,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"5978:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":5967,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"5987:8:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$1479","typeString":"contract IFlashLoanRecipient"},{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":5959,"name":"BALANCER_FLASHLOAN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"5913:18:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5958,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"5906:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$2066_$","typeString":"type(contract IVault)"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5906:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$2066","typeString":"contract IVault"}},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:9:28","memberName":"flashLoan","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"5906:36:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IFlashLoanRecipient_$1479_$_t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IFlashLoanRecipient,contract IERC20[] memory,uint256[] memory,bytes memory) external"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5906:90:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5969,"nodeType":"ExpressionStatement","src":"5906:90:28"},{"expression":{"arguments":[{"id":5973,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"6023:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5974,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"6031:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5975,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"6041:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5976,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"6048:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5977,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"6056:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5970,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6007:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Looping_$6386_$","typeString":"type(contract super Looping)"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6013:9:28","memberName":"_withdraw","nodeType":"MemberAccess","referencedDeclaration":3794,"src":"6007:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6007:56:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5979,"nodeType":"ExpressionStatement","src":"6007:56:28"}]},"id":5981,"implemented":true,"kind":"function","modifiers":[],"name":"_withdraw","nameLocation":"5266:9:28","nodeType":"FunctionDefinition","overrides":{"id":5899,"nodeType":"OverrideSpecifier","overrides":[],"src":"5412:8:28"},"parameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5889,"mutability":"mutable","name":"caller","nameLocation":"5293:6:28","nodeType":"VariableDeclaration","scope":5981,"src":"5285:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5888,"name":"address","nodeType":"ElementaryTypeName","src":"5285:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5891,"mutability":"mutable","name":"receiver","nameLocation":"5317:8:28","nodeType":"VariableDeclaration","scope":5981,"src":"5309:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5890,"name":"address","nodeType":"ElementaryTypeName","src":"5309:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5893,"mutability":"mutable","name":"owner","nameLocation":"5343:5:28","nodeType":"VariableDeclaration","scope":5981,"src":"5335:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5892,"name":"address","nodeType":"ElementaryTypeName","src":"5335:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5895,"mutability":"mutable","name":"assets","nameLocation":"5366:6:28","nodeType":"VariableDeclaration","scope":5981,"src":"5358:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5894,"name":"uint256","nodeType":"ElementaryTypeName","src":"5358:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5897,"mutability":"mutable","name":"shares","nameLocation":"5390:6:28","nodeType":"VariableDeclaration","scope":5981,"src":"5382:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5896,"name":"uint256","nodeType":"ElementaryTypeName","src":"5382:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5275:127:28"},"returnParameters":{"id":5900,"nodeType":"ParameterList","parameters":[],"src":"5421:0:28"},"scope":6386,"src":"5257:813:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1478],"body":{"id":6046,"nodeType":"Block","src":"6302:423:28","statements":[{"assignments":[5998,6000,6002],"declarations":[{"constant":false,"id":5998,"mutability":"mutable","name":"operation","nameLocation":"6323:9:28","nodeType":"VariableDeclaration","scope":6046,"src":"6313:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$5564","typeString":"enum Looping.Operation"},"typeName":{"id":5997,"nodeType":"UserDefinedTypeName","pathNode":{"id":5996,"name":"Operation","nameLocations":["6313:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":5564,"src":"6313:9:28"},"referencedDeclaration":5564,"src":"6313:9:28","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$5564","typeString":"enum Looping.Operation"}},"visibility":"internal"},{"constant":false,"id":6000,"mutability":"mutable","name":"minAmountsOut","nameLocation":"6339:13:28","nodeType":"VariableDeclaration","scope":6046,"src":"6334:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5999,"name":"uint","nodeType":"ElementaryTypeName","src":"6334:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6002,"mutability":"mutable","name":"withdrawAmt","nameLocation":"6359:11:28","nodeType":"VariableDeclaration","scope":6046,"src":"6354:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6001,"name":"uint","nodeType":"ElementaryTypeName","src":"6354:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6013,"initialValue":{"arguments":[{"id":6005,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"6385:8:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6006,"name":"Operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"6396:9:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$5564_$","typeString":"type(enum Looping.Operation)"}},{"id":6008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6007,"name":"uint256","nodeType":"ElementaryTypeName","src":"6407:7:28","typeDescriptions":{}}},{"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6416:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6009,"name":"uint256","nodeType":"ElementaryTypeName","src":"6416:7:28","typeDescriptions":{}}}],"id":6011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6395:29:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_enum$_Operation_$5564_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(enum Looping.Operation),type(uint256),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_enum$_Operation_$5564_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(enum Looping.Operation),type(uint256),type(uint256))"}],"expression":{"id":6003,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6374:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:6:28","memberName":"decode","nodeType":"MemberAccess","src":"6374:10:28","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_Operation_$5564_$_t_uint256_$_t_uint256_$","typeString":"tuple(enum Looping.Operation,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6312:113:28"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Operation_$5564","typeString":"enum Looping.Operation"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6014,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"6440:9:28","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$5564","typeString":"enum Looping.Operation"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6015,"name":"Operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"6453:9:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$5564_$","typeString":"type(enum Looping.Operation)"}},"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6463:7:28","memberName":"Deposit","nodeType":"MemberAccess","referencedDeclaration":5562,"src":"6453:17:28","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$5564","typeString":"enum Looping.Operation"}},"src":"6440:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Operation_$5564","typeString":"enum Looping.Operation"},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6026,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"6543:9:28","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$5564","typeString":"enum Looping.Operation"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6027,"name":"Operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"6556:9:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$5564_$","typeString":"type(enum Looping.Operation)"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6566:8:28","memberName":"Withdraw","nodeType":"MemberAccess","referencedDeclaration":5563,"src":"6556:18:28","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$5564","typeString":"enum Looping.Operation"}},"src":"6543:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6043,"nodeType":"Block","src":"6658:61:28","statements":[{"expression":{"arguments":[{"hexValue":"4c6f6f70696e673a20756e6b6e6f776e206f7065726174696f6e","id":6040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6679:28:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e524d54a00e87e2c046abe94dbe89f408888d139c58b2e91fad29636ee26b20","typeString":"literal_string \"Looping: unknown operation\""},"value":"Looping: unknown operation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2e524d54a00e87e2c046abe94dbe89f408888d139c58b2e91fad29636ee26b20","typeString":"literal_string \"Looping: unknown operation\""}],"id":6039,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"6672:6:28","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6672:36:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6042,"nodeType":"ExpressionStatement","src":"6672:36:28"}]},"id":6044,"nodeType":"IfStatement","src":"6539:180:28","trueBody":{"id":6038,"nodeType":"Block","src":"6576:76:28","statements":[{"expression":{"arguments":[{"baseExpression":{"id":6031,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"6602:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6033,"indexExpression":{"hexValue":"30","id":6032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6610:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6602:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6034,"name":"withdrawAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"6614:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6035,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"6627:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6030,"name":"_deleverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"6590:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6590:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6037,"nodeType":"ExpressionStatement","src":"6590:51:28"}]}},"id":6045,"nodeType":"IfStatement","src":"6436:283:28","trueBody":{"id":6025,"nodeType":"Block","src":"6472:61:28","statements":[{"expression":{"arguments":[{"baseExpression":{"id":6019,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"6496:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6021,"indexExpression":{"hexValue":"30","id":6020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6504:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6496:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6022,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"6508:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6018,"name":"_leverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"6486:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6486:36:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6024,"nodeType":"ExpressionStatement","src":"6486:36:28"}]}}]},"functionSelector":"f04f2707","id":6047,"implemented":true,"kind":"function","modifiers":[],"name":"receiveFlashLoan","nameLocation":"6136:16:28","nodeType":"FunctionDefinition","parameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5985,"mutability":"mutable","name":"tokens","nameLocation":"6178:6:28","nodeType":"VariableDeclaration","scope":6047,"src":"6162:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":5983,"nodeType":"UserDefinedTypeName","pathNode":{"id":5982,"name":"IERC20","nameLocations":["6162:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"6162:6:28"},"referencedDeclaration":1440,"src":"6162:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":5984,"nodeType":"ArrayTypeName","src":"6162:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$1440_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":5988,"mutability":"mutable","name":"amounts","nameLocation":"6211:7:28","nodeType":"VariableDeclaration","scope":6047,"src":"6194:24:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5986,"name":"uint256","nodeType":"ElementaryTypeName","src":"6194:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5987,"nodeType":"ArrayTypeName","src":"6194:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5991,"mutability":"mutable","name":"feeAmounts","nameLocation":"6245:10:28","nodeType":"VariableDeclaration","scope":6047,"src":"6228:27:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5989,"name":"uint256","nodeType":"ElementaryTypeName","src":"6228:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5990,"nodeType":"ArrayTypeName","src":"6228:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5993,"mutability":"mutable","name":"userData","nameLocation":"6278:8:28","nodeType":"VariableDeclaration","scope":6047,"src":"6265:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5992,"name":"bytes","nodeType":"ElementaryTypeName","src":"6265:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6152:140:28"},"returnParameters":{"id":5995,"nodeType":"ParameterList","parameters":[],"src":"6302:0:28"},"scope":6386,"src":"6127:598:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6234,"nodeType":"Block","src":"6797:1767:28","statements":[{"assignments":[6055],"declarations":[{"constant":false,"id":6055,"mutability":"mutable","name":"amountToSwap","nameLocation":"6853:12:28","nodeType":"VariableDeclaration","scope":6234,"src":"6845:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6054,"name":"uint256","nodeType":"ElementaryTypeName","src":"6845:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6067,"initialValue":{"arguments":[{"arguments":[{"id":6064,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6907:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6899:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6062,"name":"address","nodeType":"ElementaryTypeName","src":"6899:7:28","typeDescriptions":{}}},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6899:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6057,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6875:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6880:5:28","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"6875:10:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6875:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6056,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"6868:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1440_$","typeString":"type(contract IERC20)"}},"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6868:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6889:9:28","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1379,"src":"6868:30:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6868:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6845:68:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6076,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6966:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6958:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6074,"name":"address","nodeType":"ElementaryTypeName","src":"6958:7:28","typeDescriptions":{}}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6958:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6078,"name":"BALANCER_SWAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"6973:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6069,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6934:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6939:5:28","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"6934:10:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6934:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6068,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"6927:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1440_$","typeString":"type(contract IERC20)"}},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6948:9:28","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1399,"src":"6927:30:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:60:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6080,"name":"amountToSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"6990:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6927:75:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6100,"nodeType":"IfStatement","src":"6923:271:28","trueBody":{"id":6099,"nodeType":"Block","src":"7012:182:28","statements":[{"assignments":[6083],"declarations":[{"constant":false,"id":6083,"mutability":"mutable","name":"success","nameLocation":"7031:7:28","nodeType":"VariableDeclaration","scope":6099,"src":"7026:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6082,"name":"bool","nodeType":"ElementaryTypeName","src":"7026:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6093,"initialValue":{"arguments":[{"id":6090,"name":"BALANCER_SWAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"7070:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6091,"name":"amountToSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"7085:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6085,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7048:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7053:5:28","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"7048:10:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7048:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6084,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"7041:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1440_$","typeString":"type(contract IERC20)"}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7062:7:28","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1409,"src":"7041:28:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:57:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7026:72:28"},{"expression":{"arguments":[{"id":6095,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"7120:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6f6f70696e673a206661696c656420746f20617070726f766520746869732e6173736574282920666f72204f4e45494e4348","id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7129:53:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5e9aba8936f0d98cc0d871076fe590e36d77eec3b7bb337facc1e79abb591ec","typeString":"literal_string \"Looping: failed to approve this.asset() for ONEINCH\""},"value":"Looping: failed to approve this.asset() for ONEINCH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5e9aba8936f0d98cc0d871076fe590e36d77eec3b7bb337facc1e79abb591ec","typeString":"literal_string \"Looping: failed to approve this.asset() for ONEINCH\""}],"id":6094,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7112:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7112:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6098,"nodeType":"ExpressionStatement","src":"7112:71:28"}]}},{"id":6169,"nodeType":"Block","src":"7212:873:28","statements":[{"assignments":[6105],"declarations":[{"constant":false,"id":6105,"mutability":"mutable","name":"singleSwap","nameLocation":"7251:10:28","nodeType":"VariableDeclaration","scope":6169,"src":"7226:35:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$1894_memory_ptr","typeString":"struct IVault.SingleSwap"},"typeName":{"id":6104,"nodeType":"UserDefinedTypeName","pathNode":{"id":6103,"name":"IVault.SingleSwap","nameLocations":["7226:6:28","7233:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":1894,"src":"7226:17:28"},"referencedDeclaration":1894,"src":"7226:17:28","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$1894_storage_ptr","typeString":"struct IVault.SingleSwap"}},"visibility":"internal"}],"id":6123,"initialValue":{"arguments":[{"id":6108,"name":"BALANCER_POOL_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"7308:16:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"expression":{"id":6109,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"7348:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$2066_$","typeString":"type(contract IVault)"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7355:8:28","memberName":"SwapKind","nodeType":"MemberAccess","referencedDeclaration":1861,"src":"7348:15:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SwapKind_$1861_$","typeString":"type(enum IVault.SwapKind)"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7364:8:28","memberName":"GIVEN_IN","nodeType":"MemberAccess","referencedDeclaration":1859,"src":"7348:24:28","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1861","typeString":"enum IVault.SwapKind"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6113,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7406:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7411:5:28","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"7406:10:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7406:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6112,"name":"IAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7399:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAsset_$1444_$","typeString":"type(contract IAsset)"}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7399:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"}},{"arguments":[{"id":6118,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"7454:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6117,"name":"IAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7447:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAsset_$1444_$","typeString":"type(contract IAsset)"}},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7447:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"}},{"id":6120,"name":"amountToSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"7486:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3078","id":6121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7526:4:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_SwapKind_$1861","typeString":"enum IVault.SwapKind"},{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"},{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"expression":{"id":6106,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"7264:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$2066_$","typeString":"type(contract IVault)"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7271:10:28","memberName":"SingleSwap","nodeType":"MemberAccess","referencedDeclaration":1894,"src":"7264:17:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SingleSwap_$1894_storage_ptr_$","typeString":"type(struct IVault.SingleSwap storage pointer)"}},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7300:6:28","7342:4:28","7390:7:28","7437:8:28","7478:6:28","7516:8:28"],"names":["poolId","kind","assetIn","assetOut","amount","userData"],"nodeType":"FunctionCall","src":"7264:281:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$1894_memory_ptr","typeString":"struct IVault.SingleSwap memory"}},"nodeType":"VariableDeclarationStatement","src":"7226:319:28"},{"assignments":[6128],"declarations":[{"constant":false,"id":6128,"mutability":"mutable","name":"funds","nameLocation":"7589:5:28","nodeType":"VariableDeclaration","scope":6169,"src":"7560:34:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":6127,"nodeType":"UserDefinedTypeName","pathNode":{"id":6126,"name":"IVault.FundManagement","nameLocations":["7560:6:28","7567:14:28"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"7560:21:28"},"referencedDeclaration":1957,"src":"7560:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"}],"id":6145,"initialValue":{"arguments":[{"arguments":[{"id":6133,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7652:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7644:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6131,"name":"address","nodeType":"ElementaryTypeName","src":"7644:7:28","typeDescriptions":{}}},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7644:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":6135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7695:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"arguments":[{"id":6140,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7744:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7736:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6138,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:28","typeDescriptions":{}}},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7736:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7728:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6136,"name":"address","nodeType":"ElementaryTypeName","src":"7728:8:28","stateMutability":"payable","typeDescriptions":{}}},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7728:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"hexValue":"66616c7365","id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7786:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6129,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"7597:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$2066_$","typeString":"type(contract IVault)"}},"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7604:14:28","memberName":"FundManagement","nodeType":"MemberAccess","referencedDeclaration":1957,"src":"7597:21:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FundManagement_$1957_storage_ptr_$","typeString":"type(struct IVault.FundManagement storage pointer)"}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7637:6:28","7675:19:28","7718:9:28","7768:17:28"],"names":["sender","fromInternalBalance","recipient","toInternalBalance"],"nodeType":"FunctionCall","src":"7597:196:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_memory_ptr","typeString":"struct IVault.FundManagement memory"}},"nodeType":"VariableDeclarationStatement","src":"7560:233:28"},{"assignments":[6147],"declarations":[{"constant":false,"id":6147,"mutability":"mutable","name":"limit","nameLocation":"7812:5:28","nodeType":"VariableDeclaration","scope":6169,"src":"7807:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6146,"name":"uint","nodeType":"ElementaryTypeName","src":"7807:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6149,"initialValue":{"id":6148,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"7820:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7807:26:28"},{"assignments":[6151],"declarations":[{"constant":false,"id":6151,"mutability":"mutable","name":"deadline","nameLocation":"7852:8:28","nodeType":"VariableDeclaration","scope":6169,"src":"7847:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6150,"name":"uint","nodeType":"ElementaryTypeName","src":"7847:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6156,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6152,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7863:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7869:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"7863:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3630","id":6154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7879:2:28","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"7863:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7847:34:28"},{"assignments":[6158],"declarations":[{"constant":false,"id":6158,"mutability":"mutable","name":"amountCalculated","nameLocation":"7915:16:28","nodeType":"VariableDeclaration","scope":6169,"src":"7907:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6157,"name":"uint256","nodeType":"ElementaryTypeName","src":"7907:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6168,"initialValue":{"arguments":[{"id":6163,"name":"singleSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"7978:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$1894_memory_ptr","typeString":"struct IVault.SingleSwap memory"}},{"id":6164,"name":"funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"8006:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_memory_ptr","typeString":"struct IVault.FundManagement memory"}},{"id":6165,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"8029:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6166,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"8052:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SingleSwap_$1894_memory_ptr","typeString":"struct IVault.SingleSwap memory"},{"typeIdentifier":"t_struct$_FundManagement_$1957_memory_ptr","typeString":"struct IVault.FundManagement memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6160,"name":"BALANCER_SWAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"7941:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6159,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"7934:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$2066_$","typeString":"type(contract IVault)"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$2066","typeString":"contract IVault"}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7956:4:28","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":1877,"src":"7934:26:28","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_SingleSwap_$1894_memory_ptr_$_t_struct$_FundManagement_$1957_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct IVault.SingleSwap memory,struct IVault.FundManagement memory,uint256,uint256) payable external returns (uint256)"}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:140:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7907:167:28"}]},{"id":6193,"nodeType":"Block","src":"8127:182:28","statements":[{"assignments":[6171],"declarations":[{"constant":false,"id":6171,"mutability":"mutable","name":"success","nameLocation":"8146:7:28","nodeType":"VariableDeclaration","scope":6193,"src":"8141:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6170,"name":"bool","nodeType":"ElementaryTypeName","src":"8141:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6187,"initialValue":{"arguments":[{"id":6176,"name":"AAVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"8178:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":6183,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8216:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8208:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6181,"name":"address","nodeType":"ElementaryTypeName","src":"8208:7:28","typeDescriptions":{}}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8208:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6178,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"8191:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6177,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"8184:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1440_$","typeString":"type(contract IERC20)"}},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8184:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8198:9:28","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1379,"src":"8184:23:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8184:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6173,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"8163:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6172,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"8156:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1440_$","typeString":"type(contract IERC20)"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8156:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8170:7:28","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1409,"src":"8156:21:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8156:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8141:82:28"},{"expression":{"arguments":[{"id":6189,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"8245:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6f6f70696e673a206661696c656420746f20617070726f766520737445544820666f722041415645","id":6190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8254:43:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_512c61cfaa61b9c1dd65fcbf25cb777e9c10d785b70ff491e53c9f144d56680c","typeString":"literal_string \"Looping: failed to approve stETH for AAVE\""},"value":"Looping: failed to approve stETH for AAVE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_512c61cfaa61b9c1dd65fcbf25cb777e9c10d785b70ff491e53c9f144d56680c","typeString":"literal_string \"Looping: failed to approve stETH for AAVE\""}],"id":6188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8237:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8237:61:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6192,"nodeType":"ExpressionStatement","src":"8237:61:28"}]},{"expression":{"arguments":[{"id":6198,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"8337:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":6205,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8376:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8368:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6203,"name":"address","nodeType":"ElementaryTypeName","src":"8368:7:28","typeDescriptions":{}}},"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8368:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6200,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"8351:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6199,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"8344:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1440_$","typeString":"type(contract IERC20)"}},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8344:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8358:9:28","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1379,"src":"8344:23:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8344:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6210,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8392:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8384:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6208,"name":"address","nodeType":"ElementaryTypeName","src":"8384:7:28","typeDescriptions":{}}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8384:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8399:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"arguments":[{"id":6195,"name":"AAVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"8324:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6194,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"8318:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPool_$714_$","typeString":"type(contract IPool)"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8318:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$714","typeString":"contract IPool"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8330:6:28","memberName":"supply","nodeType":"MemberAccess","referencedDeclaration":299,"src":"8318:18:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$","typeString":"function (address,uint256,address,uint16) external"}},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8318:83:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6214,"nodeType":"ExpressionStatement","src":"8318:83:28"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6219,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8484:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8489:5:28","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"8484:10:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8484:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6222,"name":"flashLoanAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"8498:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6225,"name":"_interestRateMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"8520:17:28","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}],"id":6224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8512:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6223,"name":"uint256","nodeType":"ElementaryTypeName","src":"8512:7:28","typeDescriptions":{}}},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8512:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8540:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"id":6230,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8551:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8543:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6228,"name":"address","nodeType":"ElementaryTypeName","src":"8543:7:28","typeDescriptions":{}}},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6216,"name":"AAVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"8471:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6215,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"8465:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPool_$714_$","typeString":"type(contract IPool)"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8465:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$714","typeString":"contract IPool"}},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8477:6:28","memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":345,"src":"8465:18:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint16_$_t_address_$returns$__$","typeString":"function (address,uint256,uint256,uint16,address) external"}},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8465:92:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6233,"nodeType":"ExpressionStatement","src":"8465:92:28"}]},"id":6235,"implemented":true,"kind":"function","modifiers":[],"name":"_leverage","nameLocation":"6740:9:28","nodeType":"FunctionDefinition","parameters":{"id":6052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"mutability":"mutable","name":"flashLoanAmt","nameLocation":"6755:12:28","nodeType":"VariableDeclaration","scope":6235,"src":"6750:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6048,"name":"uint","nodeType":"ElementaryTypeName","src":"6750:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6051,"mutability":"mutable","name":"minAmountsOut","nameLocation":"6774:13:28","nodeType":"VariableDeclaration","scope":6235,"src":"6769:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6050,"name":"uint","nodeType":"ElementaryTypeName","src":"6769:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6749:39:28"},"returnParameters":{"id":6053,"nodeType":"ParameterList","parameters":[],"src":"6797:0:28"},"scope":6386,"src":"6731:1833:28","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6384,"nodeType":"Block","src":"8652:1510:28","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6248,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8720:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8725:5:28","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"8720:10:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8720:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6251,"name":"flashLoanAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"8734:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6254,"name":"_interestRateMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"8756:17:28","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_InterestRateMode_$1003","typeString":"enum DataTypes.InterestRateMode"}],"id":6253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8748:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6252,"name":"uint256","nodeType":"ElementaryTypeName","src":"8748:7:28","typeDescriptions":{}}},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8748:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6258,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8784:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8776:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6256,"name":"address","nodeType":"ElementaryTypeName","src":"8776:7:28","typeDescriptions":{}}},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6245,"name":"AAVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"8708:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6244,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"8702:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPool_$714_$","typeString":"type(contract IPool)"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8702:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$714","typeString":"contract IPool"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8714:5:28","memberName":"repay","nodeType":"MemberAccess","referencedDeclaration":359,"src":"8702:17:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,uint256,uint256,address) external returns (uint256)"}},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8702:88:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6261,"nodeType":"ExpressionStatement","src":"8702:88:28"},{"expression":{"arguments":[{"id":6266,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"8857:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6267,"name":"lendAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"8864:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6270,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8881:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8873:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6268,"name":"address","nodeType":"ElementaryTypeName","src":"8873:7:28","typeDescriptions":{}}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8873:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6263,"name":"AAVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"8842:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6262,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"8836:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPool_$714_$","typeString":"type(contract IPool)"}},"id":6264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8836:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$714","typeString":"contract IPool"}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8848:8:28","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":331,"src":"8836:20:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,uint256,address) external returns (uint256)"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8836:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6273,"nodeType":"ExpressionStatement","src":"8836:51:28"},{"assignments":[6275],"declarations":[{"constant":false,"id":6275,"mutability":"mutable","name":"amountToSwap","nameLocation":"8952:12:28","nodeType":"VariableDeclaration","scope":6384,"src":"8944:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6274,"name":"uint256","nodeType":"ElementaryTypeName","src":"8944:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6285,"initialValue":{"arguments":[{"arguments":[{"id":6282,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8999:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8991:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6280,"name":"address","nodeType":"ElementaryTypeName","src":"8991:7:28","typeDescriptions":{}}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8991:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6277,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"8974:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6276,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"8967:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1440_$","typeString":"type(contract IERC20)"}},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8967:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8981:9:28","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1379,"src":"8967:23:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8967:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8944:61:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6292,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9051:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9043:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6290,"name":"address","nodeType":"ElementaryTypeName","src":"9043:7:28","typeDescriptions":{}}},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9043:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6294,"name":"BALANCER_SWAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"9058:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6287,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"9026:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6286,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"9019:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1440_$","typeString":"type(contract IERC20)"}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9019:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9033:9:28","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1399,"src":"9019:23:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9019:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6296,"name":"amountToSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"9075:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9019:68:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6314,"nodeType":"IfStatement","src":"9015:250:28","trueBody":{"id":6313,"nodeType":"Block","src":"9097:168:28","statements":[{"assignments":[6299],"declarations":[{"constant":false,"id":6299,"mutability":"mutable","name":"success","nameLocation":"9116:7:28","nodeType":"VariableDeclaration","scope":6313,"src":"9111:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6298,"name":"bool","nodeType":"ElementaryTypeName","src":"9111:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6307,"initialValue":{"arguments":[{"id":6304,"name":"BALANCER_SWAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"9148:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6305,"name":"amountToSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"9163:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6301,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"9133:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6300,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"9126:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1440_$","typeString":"type(contract IERC20)"}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9126:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9140:7:28","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1409,"src":"9126:21:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9126:50:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9111:65:28"},{"expression":{"arguments":[{"id":6309,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"9198:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6f6f70696e673a206661696c656420746f20617070726f7665205f6261736520666f72204f4e45494e4348","id":6310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9207:46:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_39431e0a7778d71f44691f22c6678f9270f26e86b092dbfe6141cf559f232303","typeString":"literal_string \"Looping: failed to approve _base for ONEINCH\""},"value":"Looping: failed to approve _base for ONEINCH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39431e0a7778d71f44691f22c6678f9270f26e86b092dbfe6141cf559f232303","typeString":"literal_string \"Looping: failed to approve _base for ONEINCH\""}],"id":6308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9190:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9190:64:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6312,"nodeType":"ExpressionStatement","src":"9190:64:28"}]}},{"id":6383,"nodeType":"Block","src":"9283:873:28","statements":[{"assignments":[6319],"declarations":[{"constant":false,"id":6319,"mutability":"mutable","name":"singleSwap","nameLocation":"9322:10:28","nodeType":"VariableDeclaration","scope":6383,"src":"9297:35:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$1894_memory_ptr","typeString":"struct IVault.SingleSwap"},"typeName":{"id":6318,"nodeType":"UserDefinedTypeName","pathNode":{"id":6317,"name":"IVault.SingleSwap","nameLocations":["9297:6:28","9304:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":1894,"src":"9297:17:28"},"referencedDeclaration":1894,"src":"9297:17:28","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$1894_storage_ptr","typeString":"struct IVault.SingleSwap"}},"visibility":"internal"}],"id":6337,"initialValue":{"arguments":[{"id":6322,"name":"BALANCER_POOL_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"9379:16:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"expression":{"id":6323,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"9419:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$2066_$","typeString":"type(contract IVault)"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9426:8:28","memberName":"SwapKind","nodeType":"MemberAccess","referencedDeclaration":1861,"src":"9419:15:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SwapKind_$1861_$","typeString":"type(enum IVault.SwapKind)"}},"id":6325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9435:8:28","memberName":"GIVEN_IN","nodeType":"MemberAccess","referencedDeclaration":1859,"src":"9419:24:28","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1861","typeString":"enum IVault.SwapKind"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6327,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9478:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}},"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9483:5:28","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"9478:10:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6326,"name":"IAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"9471:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAsset_$1444_$","typeString":"type(contract IAsset)"}},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9471:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"}},{"arguments":[{"id":6332,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"9525:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6331,"name":"IAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"9518:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAsset_$1444_$","typeString":"type(contract IAsset)"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9518:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"}},{"id":6334,"name":"amountToSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"9557:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3078","id":6335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9597:4:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_SwapKind_$1861","typeString":"enum IVault.SwapKind"},{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"},{"typeIdentifier":"t_contract$_IAsset_$1444","typeString":"contract IAsset"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"expression":{"id":6320,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"9335:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$2066_$","typeString":"type(contract IVault)"}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9342:10:28","memberName":"SingleSwap","nodeType":"MemberAccess","referencedDeclaration":1894,"src":"9335:17:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SingleSwap_$1894_storage_ptr_$","typeString":"type(struct IVault.SingleSwap storage pointer)"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9371:6:28","9413:4:28","9461:8:28","9509:7:28","9549:6:28","9587:8:28"],"names":["poolId","kind","assetOut","assetIn","amount","userData"],"nodeType":"FunctionCall","src":"9335:281:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$1894_memory_ptr","typeString":"struct IVault.SingleSwap memory"}},"nodeType":"VariableDeclarationStatement","src":"9297:319:28"},{"assignments":[6342],"declarations":[{"constant":false,"id":6342,"mutability":"mutable","name":"funds","nameLocation":"9660:5:28","nodeType":"VariableDeclaration","scope":6383,"src":"9631:34:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":6341,"nodeType":"UserDefinedTypeName","pathNode":{"id":6340,"name":"IVault.FundManagement","nameLocations":["9631:6:28","9638:14:28"],"nodeType":"IdentifierPath","referencedDeclaration":1957,"src":"9631:21:28"},"referencedDeclaration":1957,"src":"9631:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"}],"id":6359,"initialValue":{"arguments":[{"arguments":[{"id":6347,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9723:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9715:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6345,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:28","typeDescriptions":{}}},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9715:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":6349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9766:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"arguments":[{"id":6354,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9815:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Looping_$6386","typeString":"contract Looping"}],"id":6353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9807:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6352,"name":"address","nodeType":"ElementaryTypeName","src":"9807:7:28","typeDescriptions":{}}},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9799:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6350,"name":"address","nodeType":"ElementaryTypeName","src":"9799:8:28","stateMutability":"payable","typeDescriptions":{}}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9799:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"hexValue":"66616c7365","id":6357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9857:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6343,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"9668:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$2066_$","typeString":"type(contract IVault)"}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9675:14:28","memberName":"FundManagement","nodeType":"MemberAccess","referencedDeclaration":1957,"src":"9668:21:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FundManagement_$1957_storage_ptr_$","typeString":"type(struct IVault.FundManagement storage pointer)"}},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9708:6:28","9746:19:28","9789:9:28","9839:17:28"],"names":["sender","fromInternalBalance","recipient","toInternalBalance"],"nodeType":"FunctionCall","src":"9668:196:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_memory_ptr","typeString":"struct IVault.FundManagement memory"}},"nodeType":"VariableDeclarationStatement","src":"9631:233:28"},{"assignments":[6361],"declarations":[{"constant":false,"id":6361,"mutability":"mutable","name":"limit","nameLocation":"9883:5:28","nodeType":"VariableDeclaration","scope":6383,"src":"9878:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6360,"name":"uint","nodeType":"ElementaryTypeName","src":"9878:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6363,"initialValue":{"id":6362,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"9891:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9878:26:28"},{"assignments":[6365],"declarations":[{"constant":false,"id":6365,"mutability":"mutable","name":"deadline","nameLocation":"9923:8:28","nodeType":"VariableDeclaration","scope":6383,"src":"9918:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6364,"name":"uint","nodeType":"ElementaryTypeName","src":"9918:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6370,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6366,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9934:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9940:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"9934:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3630","id":6368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9950:2:28","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"9934:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9918:34:28"},{"assignments":[6372],"declarations":[{"constant":false,"id":6372,"mutability":"mutable","name":"amountCalculated","nameLocation":"9986:16:28","nodeType":"VariableDeclaration","scope":6383,"src":"9978:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6371,"name":"uint256","nodeType":"ElementaryTypeName","src":"9978:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6382,"initialValue":{"arguments":[{"id":6377,"name":"singleSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"10049:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$1894_memory_ptr","typeString":"struct IVault.SingleSwap memory"}},{"id":6378,"name":"funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"10077:5:28","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1957_memory_ptr","typeString":"struct IVault.FundManagement memory"}},{"id":6379,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"10100:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6380,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"10123:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SingleSwap_$1894_memory_ptr","typeString":"struct IVault.SingleSwap memory"},{"typeIdentifier":"t_struct$_FundManagement_$1957_memory_ptr","typeString":"struct IVault.FundManagement memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6374,"name":"BALANCER_SWAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"10012:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6373,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"10005:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$2066_$","typeString":"type(contract IVault)"}},"id":6375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10005:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$2066","typeString":"contract IVault"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10027:4:28","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":1877,"src":"10005:26:28","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_SingleSwap_$1894_memory_ptr_$_t_struct$_FundManagement_$1957_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct IVault.SingleSwap memory,struct IVault.FundManagement memory,uint256,uint256) payable external returns (uint256)"}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10005:140:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9978:167:28"}]}]},"id":6385,"implemented":true,"kind":"function","modifiers":[],"name":"_deleverage","nameLocation":"8579:11:28","nodeType":"FunctionDefinition","parameters":{"id":6242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6237,"mutability":"mutable","name":"flashLoanAmt","nameLocation":"8596:12:28","nodeType":"VariableDeclaration","scope":6385,"src":"8591:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6236,"name":"uint","nodeType":"ElementaryTypeName","src":"8591:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6239,"mutability":"mutable","name":"lendAmt","nameLocation":"8615:7:28","nodeType":"VariableDeclaration","scope":6385,"src":"8610:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6238,"name":"uint","nodeType":"ElementaryTypeName","src":"8610:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6241,"mutability":"mutable","name":"minAmountsOut","nameLocation":"8629:13:28","nodeType":"VariableDeclaration","scope":6385,"src":"8624:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6240,"name":"uint","nodeType":"ElementaryTypeName","src":"8624:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8590:53:28"},"returnParameters":{"id":6243,"nodeType":"ParameterList","parameters":[],"src":"8652:0:28"},"scope":6386,"src":"8570:1592:28","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":6387,"src":"1024:9140:28","usedErrors":[2080,2085,2400,2405,2410,2419,2424,2429,3152,3161,3170,3179,3882,4163,4168,4171,4444],"usedEvents":[2091,2239,2251,3052,3061]}],"src":"0:10164:28"},"id":28},"contracts/OwnableERC4626.sol":{"ast":{"absolutePath":"contracts/OwnableERC4626.sol","exportedSymbols":{"ERC4626":[3803],"IERC20":[3118],"Ownable":[2214],"OwnableERC4626":[6428],"SafeERC20":[4155]},"id":6429,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6388,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:29"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6429,"sourceUnit":2215,"src":"57:67:29","symbolAliases":[{"foreign":{"id":6389,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"65:7:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol","id":6392,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6429,"sourceUnit":3804,"src":"125:83:29","symbolAliases":[{"foreign":{"id":6391,"name":"ERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"133:7:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"@openzeppelin/contracts/interfaces/IERC20.sol","id":6394,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6429,"sourceUnit":2219,"src":"209:69:29","symbolAliases":[{"foreign":{"id":6393,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"217:6:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":6396,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6429,"sourceUnit":4156,"src":"279:82:29","symbolAliases":[{"foreign":{"id":6395,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"287:9:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6397,"name":"ERC4626","nameLocations":["544:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":3803,"src":"544:7:29"},"id":6398,"nodeType":"InheritanceSpecifier","src":"544:7:29"},{"baseName":{"id":6399,"name":"Ownable","nameLocations":["553:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":2214,"src":"553:7:29"},"id":6400,"nodeType":"InheritanceSpecifier","src":"553:7:29"}],"canonicalName":"OwnableERC4626","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6428,"linearizedBaseContracts":[6428,2214,3803,2388,3040,2430,3829,3118,4438],"name":"OwnableERC4626","nameLocation":"526:14:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6404,"libraryName":{"id":6401,"name":"SafeERC20","nameLocations":["573:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":4155,"src":"573:9:29"},"nodeType":"UsingForDirective","src":"567:27:29","typeName":{"id":6403,"nodeType":"UserDefinedTypeName","pathNode":{"id":6402,"name":"IERC20","nameLocations":["587:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":3118,"src":"587:6:29"},"referencedDeclaration":3118,"src":"587:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}}},{"constant":false,"id":6406,"mutability":"immutable","name":"_base","nameLocation":"627:5:29","nodeType":"VariableDeclaration","scope":6428,"src":"600:32:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6405,"name":"address","nodeType":"ElementaryTypeName","src":"600:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"body":{"id":6426,"nodeType":"Block","src":"735:29:29","statements":[{"expression":{"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6422,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"745:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6423,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"753:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"745:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6425,"nodeType":"ExpressionStatement","src":"745:12:29"}]},"id":6427,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"arguments":[{"id":6414,"name":"quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"699:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6413,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"692:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3118_$","typeString":"type(contract IERC20)"}},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"692:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3118","typeString":"contract IERC20"}}],"id":6416,"kind":"baseConstructorSpecifier","modifierName":{"id":6412,"name":"ERC4626","nameLocations":["684:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":3803,"src":"684:7:29"},"nodeType":"ModifierInvocation","src":"684:22:29"},{"arguments":[{"expression":{"id":6418,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:29","memberName":"sender","nodeType":"MemberAccess","src":"719:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6420,"kind":"baseConstructorSpecifier","modifierName":{"id":6417,"name":"Ownable","nameLocations":["711:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":2214,"src":"711:7:29"},"nodeType":"ModifierInvocation","src":"711:19:29"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6408,"mutability":"mutable","name":"quote","nameLocation":"658:5:29","nodeType":"VariableDeclaration","scope":6427,"src":"650:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6407,"name":"address","nodeType":"ElementaryTypeName","src":"650:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6410,"mutability":"mutable","name":"base","nameLocation":"673:4:29","nodeType":"VariableDeclaration","scope":6427,"src":"665:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6409,"name":"address","nodeType":"ElementaryTypeName","src":"665:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"649:29:29"},"returnParameters":{"id":6421,"nodeType":"ParameterList","parameters":[],"src":"735:0:29"},"scope":6428,"src":"638:126:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6429,"src":"508:258:29","usedErrors":[2080,2085,2400,2405,2410,2419,2424,2429,3152,3161,3170,3179,3882,4163,4168,4171,4444],"usedEvents":[2091,2239,2251,3052,3061]}],"src":"32:735:29"},"id":29}},"contracts":{"@aave/core-v3/contracts/interfaces/IAaveOracle.sol":{"IAaveOracle":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":true,"internalType":"address","name":"source","type":"address"}],"name":"AssetSourceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"baseCurrency","type":"address"},{"indexed":false,"internalType":"uint256","name":"baseCurrencyUnit","type":"uint256"}],"name":"BaseCurrencySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"fallbackOracle","type":"address"}],"name":"FallbackOracleUpdated","type":"event"},{"inputs":[],"name":"ADDRESSES_PROVIDER","outputs":[{"internalType":"contract IPoolAddressesProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BASE_CURRENCY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BASE_CURRENCY_UNIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"}],"name":"getAssetsPrices","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFallbackOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getSourceOfAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"address[]","name":"sources","type":"address[]"}],"name":"setAssetSources","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fallbackOracle","type":"address"}],"name":"setFallbackOracle","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"ADDRESSES_PROVIDER()":"0542975c","BASE_CURRENCY()":"e19f4700","BASE_CURRENCY_UNIT()":"8c89b64f","getAssetPrice(address)":"b3596f07","getAssetsPrices(address[])":"9d23d9f2","getFallbackOracle()":"6210308c","getSourceOfAsset(address)":"92bf2be0","setAssetSources(address[],address[])":"abfd5310","setFallbackOracle(address)":"170aee73"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"AssetSourceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseCurrency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"}],\"name\":\"BaseCurrencySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"FallbackOracleUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY_UNIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"getAssetsPrices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getSourceOfAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"sources\",\"type\":\"address[]\"}],\"name\":\"setAssetSources\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"setFallbackOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"AssetSourceUpdated(address,address)\":{\"details\":\"Emitted after the price source of an asset is updated\",\"params\":{\"asset\":\"The address of the asset\",\"source\":\"The price source of the asset\"}},\"BaseCurrencySet(address,uint256)\":{\"details\":\"Emitted after the base currency is set\",\"params\":{\"baseCurrency\":\"The base currency of used for price quotes\",\"baseCurrencyUnit\":\"The unit of the base currency\"}},\"FallbackOracleUpdated(address)\":{\"details\":\"Emitted after the address of fallback oracle is updated\",\"params\":{\"fallbackOracle\":\"The address of the fallback oracle\"}}},\"kind\":\"dev\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"returns\":{\"_0\":\"The address of the PoolAddressesProvider contract\"}},\"BASE_CURRENCY()\":{\"details\":\"Address 0x0 is reserved for USD as base currency.\",\"returns\":{\"_0\":\"Returns the base currency address.\"}},\"BASE_CURRENCY_UNIT()\":{\"details\":\"1 ether for ETH, 1e8 for USD.\",\"returns\":{\"_0\":\"Returns the base currency unit.\"}},\"getAssetPrice(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"The price of the asset\"}},\"getAssetsPrices(address[])\":{\"params\":{\"assets\":\"The list of assets addresses\"},\"returns\":{\"_0\":\"The prices of the given assets\"}},\"getFallbackOracle()\":{\"returns\":{\"_0\":\"The address of the fallback oracle\"}},\"getSourceOfAsset(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"The address of the source\"}},\"setAssetSources(address[],address[])\":{\"params\":{\"assets\":\"The addresses of the assets\",\"sources\":\"The addresses of the price sources\"}},\"setFallbackOracle(address)\":{\"params\":{\"fallbackOracle\":\"The address of the fallback oracle\"}}},\"title\":\"IAaveOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"notice\":\"Returns the PoolAddressesProvider\"},\"BASE_CURRENCY()\":{\"notice\":\"Returns the base currency address\"},\"BASE_CURRENCY_UNIT()\":{\"notice\":\"Returns the base currency unit\"},\"getAssetPrice(address)\":{\"notice\":\"Returns the asset price in the base currency\"},\"getAssetsPrices(address[])\":{\"notice\":\"Returns a list of prices from a list of assets addresses\"},\"getFallbackOracle()\":{\"notice\":\"Returns the address of the fallback oracle\"},\"getSourceOfAsset(address)\":{\"notice\":\"Returns the address of the source for an asset address\"},\"setAssetSources(address[],address[])\":{\"notice\":\"Sets or replaces price sources of assets\"},\"setFallbackOracle(address)\":{\"notice\":\"Sets the fallback oracle\"}},\"notice\":\"Defines the basic interface for the Aave Oracle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IAaveOracle.sol\":\"IAaveOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IAaveOracle.sol\":{\"keccak256\":\"0x15942c0df4ce9f50a9cf172c9ed0efa0abbf841cd8560fbd0da3d6a7dea69a96\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9eefeb1b2df351e6b766745bb9d0e115ec0c4266c8c47e126395eb4d992e0738\",\"dweb:/ipfs/QmVGeZY3E2SYHnoDYtcUmdJBecD99tDcRRNdkFj8N534Nj\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol\":{\"keccak256\":\"0xfe72e94869ca91465a7f57282b8d367b2c9ba798fdc13ac8546304db8d971df6\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://17eb0014e4dd33c8a177ff6a80aea1361d40cda65f0e832484d9dad9c80c9aea\",\"dweb:/ipfs/QmVNsRx7bJjKmgfTVnpArCRRFGAyds2d5pY4sigcvgmxtf\"]}},\"version\":1}"}},"@aave/core-v3/contracts/interfaces/IPool.sol":{"IPool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"backer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"BackUnbacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"borrowRate","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"Borrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"address","name":"initiator","type":"address"},{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDebt","type":"uint256"}],"name":"IsolationModeTotalDebtUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collateralAsset","type":"address"},{"indexed":true,"internalType":"address","name":"debtAsset","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"debtToCover","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidatedCollateralAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"liquidator","type":"address"},{"indexed":false,"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"LiquidationCall","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"MintUnbacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountMinted","type":"uint256"}],"name":"MintedToTreasury","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"RebalanceStableBorrowRate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"repayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"useATokens","type":"bool"}],"name":"Repay","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint256","name":"liquidityRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidityIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowIndex","type":"uint256"}],"name":"ReserveDataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralDisabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"Supply","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"}],"name":"SwapBorrowRateMode","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint8","name":"categoryId","type":"uint8"}],"name":"UserEModeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"ADDRESSES_PROVIDER","outputs":[{"internalType":"contract IPoolAddressesProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BRIDGE_PROTOCOL_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FLASHLOAN_PREMIUM_TOTAL","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FLASHLOAN_PREMIUM_TO_PROTOCOL","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_NUMBER_RESERVES","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_STABLE_RATE_BORROW_SIZE_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"}],"name":"backUnbacked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"uint16","name":"referralCode","type":"uint16"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"id","type":"uint8"},{"components":[{"internalType":"uint16","name":"ltv","type":"uint16"},{"internalType":"uint16","name":"liquidationThreshold","type":"uint16"},{"internalType":"uint16","name":"liquidationBonus","type":"uint16"},{"internalType":"address","name":"priceSource","type":"address"},{"internalType":"string","name":"label","type":"string"}],"internalType":"struct DataTypes.EModeCategory","name":"config","type":"tuple"}],"name":"configureEModeCategory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"dropReserve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"balanceFromBefore","type":"uint256"},{"internalType":"uint256","name":"balanceToBefore","type":"uint256"}],"name":"finalizeTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"interestRateModes","type":"uint256[]"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"flashLoanSimple","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"id","type":"uint8"}],"name":"getEModeCategoryData","outputs":[{"components":[{"internalType":"uint16","name":"ltv","type":"uint16"},{"internalType":"uint16","name":"liquidationThreshold","type":"uint16"},{"internalType":"uint16","name":"liquidationBonus","type":"uint16"},{"internalType":"address","name":"priceSource","type":"address"},{"internalType":"string","name":"label","type":"string"}],"internalType":"struct DataTypes.EModeCategory","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"id","type":"uint16"}],"name":"getReserveAddressById","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveData","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"},{"internalType":"uint128","name":"liquidityIndex","type":"uint128"},{"internalType":"uint128","name":"currentLiquidityRate","type":"uint128"},{"internalType":"uint128","name":"variableBorrowIndex","type":"uint128"},{"internalType":"uint128","name":"currentVariableBorrowRate","type":"uint128"},{"internalType":"uint128","name":"currentStableBorrowRate","type":"uint128"},{"internalType":"uint40","name":"lastUpdateTimestamp","type":"uint40"},{"internalType":"uint16","name":"id","type":"uint16"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtTokenAddress","type":"address"},{"internalType":"address","name":"variableDebtTokenAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"},{"internalType":"uint128","name":"accruedToTreasury","type":"uint128"},{"internalType":"uint128","name":"unbacked","type":"uint128"},{"internalType":"uint128","name":"isolationModeTotalDebt","type":"uint128"}],"internalType":"struct DataTypes.ReserveData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveNormalizedIncome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveNormalizedVariableDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReservesList","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserAccountData","outputs":[{"internalType":"uint256","name":"totalCollateralBase","type":"uint256"},{"internalType":"uint256","name":"totalDebtBase","type":"uint256"},{"internalType":"uint256","name":"availableBorrowsBase","type":"uint256"},{"internalType":"uint256","name":"currentLiquidationThreshold","type":"uint256"},{"internalType":"uint256","name":"ltv","type":"uint256"},{"internalType":"uint256","name":"healthFactor","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.UserConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserEMode","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtAddress","type":"address"},{"internalType":"address","name":"variableDebtAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"}],"name":"initReserve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"collateralAsset","type":"address"},{"internalType":"address","name":"debtAsset","type":"address"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"debtToCover","type":"uint256"},{"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"liquidationCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"}],"name":"mintToTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"mintUnbacked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"user","type":"address"}],"name":"rebalanceStableBorrowRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"repay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"}],"name":"repayWithATokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"permitV","type":"uint8"},{"internalType":"bytes32","name":"permitR","type":"bytes32"},{"internalType":"bytes32","name":"permitS","type":"bytes32"}],"name":"repayWithPermit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"rescueTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"resetIsolationModeTotalDebt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"}],"name":"setConfiguration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"rateStrategyAddress","type":"address"}],"name":"setReserveInterestRateStrategyAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"categoryId","type":"uint8"}],"name":"setUserEMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"bool","name":"useAsCollateral","type":"bool"}],"name":"setUserUseReserveAsCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"supply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"permitV","type":"uint8"},{"internalType":"bytes32","name":"permitR","type":"bytes32"},{"internalType":"bytes32","name":"permitS","type":"bytes32"}],"name":"supplyWithPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"}],"name":"swapBorrowRateMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"bridgeProtocolFee","type":"uint256"}],"name":"updateBridgeProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint128","name":"flashLoanPremiumTotal","type":"uint128"},{"internalType":"uint128","name":"flashLoanPremiumToProtocol","type":"uint128"}],"name":"updateFlashloanPremiums","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"ADDRESSES_PROVIDER()":"0542975c","BRIDGE_PROTOCOL_FEE()":"272d9072","FLASHLOAN_PREMIUM_TOTAL()":"074b2e43","FLASHLOAN_PREMIUM_TO_PROTOCOL()":"6a99c036","MAX_NUMBER_RESERVES()":"f8119d51","MAX_STABLE_RATE_BORROW_SIZE_PERCENT()":"e82fec2f","backUnbacked(address,uint256,uint256)":"d65dc7a1","borrow(address,uint256,uint256,uint16,address)":"a415bcad","configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))":"d579ea7d","deposit(address,uint256,address,uint16)":"e8eda9df","dropReserve(address)":"63c9b860","finalizeTransfer(address,address,address,uint256,uint256,uint256)":"d5ed3933","flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":"ab9c4b5d","flashLoanSimple(address,address,uint256,bytes,uint16)":"42b0b77c","getConfiguration(address)":"c44b11f7","getEModeCategoryData(uint8)":"6c6f6ae1","getReserveAddressById(uint16)":"52751797","getReserveData(address)":"35ea6a75","getReserveNormalizedIncome(address)":"d15e0053","getReserveNormalizedVariableDebt(address)":"386497fd","getReservesList()":"d1946dbc","getUserAccountData(address)":"bf92857c","getUserConfiguration(address)":"4417a583","getUserEMode(address)":"eddf1b79","initReserve(address,address,address,address,address)":"7a708e92","liquidationCall(address,address,address,uint256,bool)":"00a718a9","mintToTreasury(address[])":"9cd19996","mintUnbacked(address,uint256,address,uint16)":"69a933a5","rebalanceStableBorrowRate(address,address)":"cd112382","repay(address,uint256,uint256,address)":"573ade81","repayWithATokens(address,uint256,uint256)":"2dad97d4","repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)":"ee3e210b","rescueTokens(address,address,uint256)":"cea9d26f","resetIsolationModeTotalDebt(address)":"e43e88a1","setConfiguration(address,(uint256))":"f51e435b","setReserveInterestRateStrategyAddress(address,address)":"1d2118f9","setUserEMode(uint8)":"28530a47","setUserUseReserveAsCollateral(address,bool)":"5a3b74b9","supply(address,uint256,address,uint16)":"617ba037","supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)":"02c205f0","swapBorrowRateMode(address,uint256)":"94ba89a2","updateBridgeProtocolFee(uint256)":"3036b439","updateFlashloanPremiums(uint128,uint128)":"bcb6e522","withdraw(address,uint256,address)":"69328dec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"BackUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"}],\"name\":\"IsolationModeTotalDebtUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"MintUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"}],\"name\":\"MintedToTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useATokens\",\"type\":\"bool\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Supply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"}],\"name\":\"SwapBorrowRateMode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"UserEModeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BRIDGE_PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TOTAL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TO_PROTOCOL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUMBER_RESERVES\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"backUnbacked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"configureEModeCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"dropReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"interestRateModes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoanSimple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"getEModeCategoryData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"getReserveAddressById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"accruedToTreasury\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"unbacked\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"isolationModeTotalDebt\",\"type\":\"uint128\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserEMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"mintUnbacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"repayWithATokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"repayWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"resetIsolationModeTotalDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"setUserEMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"supplyWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bridgeProtocolFee\",\"type\":\"uint256\"}],\"name\":\"updateBridgeProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumToProtocol\",\"type\":\"uint128\"}],\"name\":\"updateFlashloanPremiums\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"BackUnbacked(address,address,uint256,uint256)\":{\"details\":\"Emitted on backUnbacked()\",\"params\":{\"amount\":\"The amount added as backing\",\"backer\":\"The address paying for the backing\",\"fee\":\"The amount paid in fees\",\"reserve\":\"The address of the underlying asset of the reserve\"}},\"Borrow(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed, expressed in ray\",\"interestRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"interestRateMode\":\"The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used\",\"target\":\"The address of the flash loan receiver contract\"}},\"IsolationModeTotalDebtUpdated(address,uint256)\":{\"details\":\"Emitted on borrow(), repay() and liquidationCall() when using isolated assets\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"totalDebt\":\"The total isolation mode debt for the reserve\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"MintUnbacked(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on mintUnbacked()\",\"params\":{\"amount\":\"The amount of supplied assets\",\"onBehalfOf\":\"The beneficiary of the supplied assets, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"MintedToTreasury(address,uint256)\":{\"details\":\"Emitted when the protocol treasury receives minted aTokens from the accrued interest.\",\"params\":{\"amountMinted\":\"The amount minted to the treasury\",\"reserve\":\"The address of the reserve\"}},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed\"}},\"Repay(address,address,address,uint256,bool)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"useATokens\":\"True if the repayment is done using aTokens, `false` if done with underlying asset directly\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated.\",\"params\":{\"liquidityIndex\":\"The next liquidity index\",\"liquidityRate\":\"The next liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The next stable borrow rate\",\"variableBorrowIndex\":\"The next variable borrow index\",\"variableBorrowRate\":\"The next variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"Supply(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on supply()\",\"params\":{\"amount\":\"The amount supplied\",\"onBehalfOf\":\"The beneficiary of the supply, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"SwapBorrowRateMode(address,address,uint8)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"UserEModeSet(address,uint8)\":{\"details\":\"Emitted when the user selects a certain asset category for eMode\",\"params\":{\"categoryId\":\"The category id\",\"user\":\"The address of the user\"}},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn\",\"reserve\":\"The address of the underlying asset being withdrawn\",\"to\":\"The address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"returns\":{\"_0\":\"The address of the PoolAddressesProvider\"}},\"BRIDGE_PROTOCOL_FEE()\":{\"returns\":{\"_0\":\"The bridge fee sent to the protocol treasury\"}},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"returns\":{\"_0\":\"The total fee on flashloans\"}},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"returns\":{\"_0\":\"The flashloan fee sent to the protocol treasury\"}},\"MAX_NUMBER_RESERVES()\":{\"returns\":{\"_0\":\"The maximum number of reserves supported\"}},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"returns\":{\"_0\":\"The percentage of available liquidity to borrow, expressed in bps\"}},\"backUnbacked(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount to back\",\"asset\":\"The address of the underlying asset to back\",\"fee\":\"The amount paid in fees\"},\"returns\":{\"_0\":\"The backed amount\"}},\"borrow(address,uint256,uint256,uint16,address)\":{\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"details\":\"In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets\",\"params\":{\"config\":\"The configuration of the category\",\"id\":\"The id of the category\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deprecated: Use the `supply` function instead\",\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"dropReserve(address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"}},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"details\":\"Only callable by the overlying aToken of the `asset`\",\"params\":{\"amount\":\"The amount being transferred/withdrawn\",\"asset\":\"The address of the underlying asset of the aToken\",\"balanceFromBefore\":\"The aToken balance of the `from` user before the transfer\",\"balanceToBefore\":\"The aToken balance of the `to` user before the transfer\",\"from\":\"The user from which the aTokens are transferred\",\"to\":\"The user receiving the aTokens\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amounts\":\"The amounts of the assets being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"interestRateModes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amount\":\"The amount of the asset being flash-borrowed\",\"asset\":\"The address of the asset being flash-borrowed\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"getConfiguration(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve\"}},\"getEModeCategoryData(uint8)\":{\"params\":{\"id\":\"The id of the category\"},\"returns\":{\"_0\":\"The configuration data of the category\"}},\"getReserveAddressById(uint16)\":{\"params\":{\"id\":\"The id of the reserve as stored in the DataTypes.ReserveData struct\"},\"returns\":{\"_0\":\"The address of the reserve associated with id\"}},\"getReserveData(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state and configuration data of the reserve\"}},\"getReserveNormalizedIncome(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"WARNING: This function is intended to be used primarily by the protocol itself to get a \\\"dynamic\\\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getReservesList()\":{\"details\":\"It does not include dropped reserves\",\"returns\":{\"_0\":\"The addresses of the underlying assets of the initialized reserves\"}},\"getUserAccountData(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsBase\":\"The borrowing power left of the user in the base currency used by the price feed\",\"currentLiquidationThreshold\":\"The liquidation threshold of the user\",\"healthFactor\":\"The current health factor of the user\",\"ltv\":\"The loan to value of The user\",\"totalCollateralBase\":\"The total collateral of the user in the base currency used by the price feed\",\"totalDebtBase\":\"The total debt of the user in the base currency used by the price feed\"}},\"getUserConfiguration(address)\":{\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user\"}},\"getUserEMode(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The eMode id\"}},\"initReserve(address,address,address,address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"aTokenAddress\":\"The address of the aToken that will be assigned to the reserve\",\"asset\":\"The address of the underlying asset of the reserve\",\"interestRateStrategyAddress\":\"The address of the interest rate strategy contract\",\"stableDebtAddress\":\"The address of the StableDebtToken that will be assigned to the reserve\",\"variableDebtAddress\":\"The address of the VariableDebtToken that will be assigned to the reserve\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"mintToTreasury(address[])\":{\"params\":{\"assets\":\"The list of reserves for which the minting needs to be executed\"}},\"mintUnbacked(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to mint\",\"asset\":\"The address of the underlying asset to mint\",\"onBehalfOf\":\"The address that will receive the aTokens\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"rebalanceStableBorrowRate(address,address)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithATokens(address,uint256,uint256)\":{\"details\":\"Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt\",\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"rescueTokens(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to transfer\",\"to\":\"The address of the recipient\",\"token\":\"The address of the token\"}},\"resetIsolationModeTotalDebt(address)\":{\"details\":\"It requires the given asset has zero debt ceiling\",\"params\":{\"asset\":\"The address of the underlying asset to reset the isolationModeTotalDebt\"}},\"setConfiguration(address,(uint256))\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"configuration\":\"The new configuration bitmap\"}},\"setReserveInterestRateStrategyAddress(address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"rateStrategyAddress\":\"The address of the interest rate strategy contract\"}},\"setUserEMode(uint8)\":{\"params\":{\"categoryId\":\"The id of the category\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"params\":{\"asset\":\"The address of the underlying asset supplied\",\"useAsCollateral\":\"True if the user wants to use the supply as collateral, false otherwise\"}},\"supply(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"swapBorrowRateMode(address,uint256)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\"}},\"updateBridgeProtocolFee(uint256)\":{\"params\":{\"bridgeProtocolFee\":\"The part of the premium sent to the protocol treasury\"}},\"updateFlashloanPremiums(uint128,uint128)\":{\"details\":\"The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract\",\"params\":{\"flashLoanPremiumToProtocol\":\"The part of the premium sent to the protocol treasury, expressed in bps\",\"flashLoanPremiumTotal\":\"The total premium, expressed in bps\"}},\"withdraw(address,uint256,address)\":{\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn\"}}},\"title\":\"IPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"notice\":\"Returns the PoolAddressesProvider connected to this contract\"},\"BRIDGE_PROTOCOL_FEE()\":{\"notice\":\"Returns the part of the bridge fees sent to protocol\"},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"notice\":\"Returns the total fee on flash loans\"},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"notice\":\"Returns the part of the flashloan fees sent to protocol\"},\"MAX_NUMBER_RESERVES()\":{\"notice\":\"Returns the maximum number of reserves supported to be listed in this Pool\"},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"notice\":\"Returns the percentage of available liquidity that can be borrowed at once at stable rate\"},\"backUnbacked(address,uint256,uint256)\":{\"notice\":\"Back the current unbacked underlying with `amount` and pay `fee`.\"},\"borrow(address,uint256,uint256,uint16,address)\":{\"notice\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\"},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"notice\":\"Configures a new category for the eMode.\"},\"deposit(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"dropReserve(address)\":{\"notice\":\"Drop a reserve\"},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"notice\":\"Validates and finalizes an aToken transfer\"},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"getConfiguration(address)\":{\"notice\":\"Returns the configuration of the reserve\"},\"getEModeCategoryData(uint8)\":{\"notice\":\"Returns the data of an eMode category\"},\"getReserveAddressById(uint16)\":{\"notice\":\"Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\"},\"getReserveData(address)\":{\"notice\":\"Returns the state and configuration of the reserve\"},\"getReserveNormalizedIncome(address)\":{\"notice\":\"Returns the normalized income of the reserve\"},\"getReserveNormalizedVariableDebt(address)\":{\"notice\":\"Returns the normalized variable debt per unit of asset\"},\"getReservesList()\":{\"notice\":\"Returns the list of the underlying assets of all the initialized reserves\"},\"getUserAccountData(address)\":{\"notice\":\"Returns the user account data across all the reserves\"},\"getUserConfiguration(address)\":{\"notice\":\"Returns the configuration of the user across all the reserves\"},\"getUserEMode(address)\":{\"notice\":\"Returns the eMode the user is using\"},\"initReserve(address,address,address,address,address)\":{\"notice\":\"Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy\"},\"liquidationCall(address,address,address,uint256,bool)\":{\"notice\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\"},\"mintToTreasury(address[])\":{\"notice\":\"Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\"},\"mintUnbacked(address,uint256,address,uint16)\":{\"notice\":\"Mints an `amount` of aTokens to the `onBehalfOf`\"},\"rebalanceStableBorrowRate(address,address)\":{\"notice\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough\"},\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"},\"repayWithATokens(address,uint256,uint256)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\"},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"rescueTokens(address,address,uint256)\":{\"notice\":\"Rescue and transfer tokens locked in this contract\"},\"resetIsolationModeTotalDebt(address)\":{\"notice\":\"Resets the isolation mode total debt of the given asset to zero\"},\"setConfiguration(address,(uint256))\":{\"notice\":\"Sets the configuration bitmap of the reserve as a whole\"},\"setReserveInterestRateStrategyAddress(address,address)\":{\"notice\":\"Updates the address of the interest rate strategy contract\"},\"setUserEMode(uint8)\":{\"notice\":\"Allows a user to use the protocol in eMode\"},\"setUserUseReserveAsCollateral(address,bool)\":{\"notice\":\"Allows suppliers to enable/disable a specific supplied asset as collateral\"},\"supply(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"swapBorrowRateMode(address,uint256)\":{\"notice\":\"Allows a borrower to swap his debt between stable and variable mode, or vice versa\"},\"updateBridgeProtocolFee(uint256)\":{\"notice\":\"Updates the protocol fee on the bridging\"},\"updateFlashloanPremiums(uint128,uint128)\":{\"notice\":\"Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury\"},\"withdraw(address,uint256,address)\":{\"notice\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\"}},\"notice\":\"Defines the basic interface for an Aave Pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":\"IPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xff95adc41b2bbda0c08208e66c1e2fd0d99fa6d8f937667c2b366ddf08f10eeb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://734ac1a253d41ace0fe411359248a1534e530b85b3c0c9fe37931ee11580dbc6\",\"dweb:/ipfs/QmNSm1bqFo2x8EghUyShK34bU1esDeLCw1ZWPoRZwcoVvM\"]}},\"version\":1}"}},"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol":{"IPoolAddressesProvider":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ACLAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ACLManagerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"AddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":false,"internalType":"address","name":"oldImplementationAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementationAddress","type":"address"}],"name":"AddressSetAsProxy","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"oldMarketId","type":"string"},{"indexed":true,"internalType":"string","name":"newMarketId","type":"string"}],"name":"MarketIdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolConfiguratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolDataProviderUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleSentinelUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":true,"internalType":"address","name":"implementationAddress","type":"address"}],"name":"ProxyCreated","type":"event"},{"inputs":[],"name":"getACLAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getACLManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarketId","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolConfigurator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolDataProvider","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceOracleSentinel","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAclAdmin","type":"address"}],"name":"setACLAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAclManager","type":"address"}],"name":"setACLManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newAddress","type":"address"}],"name":"setAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newImplementationAddress","type":"address"}],"name":"setAddressAsProxy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newMarketId","type":"string"}],"name":"setMarketId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPoolConfiguratorImpl","type":"address"}],"name":"setPoolConfiguratorImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newDataProvider","type":"address"}],"name":"setPoolDataProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPoolImpl","type":"address"}],"name":"setPoolImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPriceOracle","type":"address"}],"name":"setPriceOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPriceOracleSentinel","type":"address"}],"name":"setPriceOracleSentinel","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getACLAdmin()":"0e67178c","getACLManager()":"707cd716","getAddress(bytes32)":"21f8a721","getMarketId()":"568ef470","getPool()":"026b1d5f","getPoolConfigurator()":"631adfca","getPoolDataProvider()":"e860accb","getPriceOracle()":"fca513a8","getPriceOracleSentinel()":"5eb88d3d","setACLAdmin(address)":"76d84ffc","setACLManager(address)":"ed301ca9","setAddress(bytes32,address)":"ca446dd9","setAddressAsProxy(bytes32,address)":"5dcc528c","setMarketId(string)":"f67b1847","setPoolConfiguratorImpl(address)":"e4ca28b7","setPoolDataProvider(address)":"e44e9ed1","setPoolImpl(address)":"a1564406","setPriceOracle(address)":"530e784f","setPriceOracleSentinel(address)":"74944cec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementationAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"AddressSetAsProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldMarketId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolDataProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleSentinelUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getACLAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getACLManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolDataProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleSentinel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclAdmin\",\"type\":\"address\"}],\"name\":\"setACLAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclManager\",\"type\":\"address\"}],\"name\":\"setACLManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolConfiguratorImpl\",\"type\":\"address\"}],\"name\":\"setPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDataProvider\",\"type\":\"address\"}],\"name\":\"setPoolDataProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolImpl\",\"type\":\"address\"}],\"name\":\"setPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracleSentinel\",\"type\":\"address\"}],\"name\":\"setPriceOracleSentinel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"ACLAdminUpdated(address,address)\":{\"details\":\"Emitted when the ACL admin is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLAdmin\",\"oldAddress\":\"The old address of the ACLAdmin\"}},\"ACLManagerUpdated(address,address)\":{\"details\":\"Emitted when the ACL manager is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLManager\",\"oldAddress\":\"The old address of the ACLManager\"}},\"AddressSet(bytes32,address,address)\":{\"details\":\"Emitted when a new non-proxied contract address is registered.\",\"params\":{\"id\":\"The identifier of the contract\",\"newAddress\":\"The address of the new contract\",\"oldAddress\":\"The address of the old contract\"}},\"AddressSetAsProxy(bytes32,address,address,address)\":{\"details\":\"Emitted when the implementation of the proxy registered with id is updated\",\"params\":{\"id\":\"The identifier of the contract\",\"newImplementationAddress\":\"The address of the new implementation contract\",\"oldImplementationAddress\":\"The address of the old implementation contract\",\"proxyAddress\":\"The address of the proxy contract\"}},\"MarketIdSet(string,string)\":{\"details\":\"Emitted when the market identifier is updated.\",\"params\":{\"newMarketId\":\"The new id of the market\",\"oldMarketId\":\"The old id of the market\"}},\"PoolConfiguratorUpdated(address,address)\":{\"details\":\"Emitted when the pool configurator is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolConfigurator\",\"oldAddress\":\"The old address of the PoolConfigurator\"}},\"PoolDataProviderUpdated(address,address)\":{\"details\":\"Emitted when the pool data provider is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolDataProvider\",\"oldAddress\":\"The old address of the PoolDataProvider\"}},\"PoolUpdated(address,address)\":{\"details\":\"Emitted when the pool is updated.\",\"params\":{\"newAddress\":\"The new address of the Pool\",\"oldAddress\":\"The old address of the Pool\"}},\"PriceOracleSentinelUpdated(address,address)\":{\"details\":\"Emitted when the price oracle sentinel is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracleSentinel\",\"oldAddress\":\"The old address of the PriceOracleSentinel\"}},\"PriceOracleUpdated(address,address)\":{\"details\":\"Emitted when the price oracle is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracle\",\"oldAddress\":\"The old address of the PriceOracle\"}},\"ProxyCreated(bytes32,address,address)\":{\"details\":\"Emitted when a new proxy is created.\",\"params\":{\"id\":\"The identifier of the proxy\",\"implementationAddress\":\"The address of the implementation contract\",\"proxyAddress\":\"The address of the created proxy contract\"}}},\"kind\":\"dev\",\"methods\":{\"getACLAdmin()\":{\"returns\":{\"_0\":\"The address of the ACL admin\"}},\"getACLManager()\":{\"returns\":{\"_0\":\"The address of the ACLManager\"}},\"getAddress(bytes32)\":{\"details\":\"The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id\",\"params\":{\"id\":\"The id\"},\"returns\":{\"_0\":\"The address of the registered for the specified id\"}},\"getMarketId()\":{\"returns\":{\"_0\":\"The market id\"}},\"getPool()\":{\"returns\":{\"_0\":\"The Pool proxy address\"}},\"getPoolConfigurator()\":{\"returns\":{\"_0\":\"The PoolConfigurator proxy address\"}},\"getPoolDataProvider()\":{\"returns\":{\"_0\":\"The address of the DataProvider\"}},\"getPriceOracle()\":{\"returns\":{\"_0\":\"The address of the PriceOracle\"}},\"getPriceOracleSentinel()\":{\"returns\":{\"_0\":\"The address of the PriceOracleSentinel\"}},\"setACLAdmin(address)\":{\"params\":{\"newAclAdmin\":\"The address of the new ACL admin\"}},\"setACLManager(address)\":{\"params\":{\"newAclManager\":\"The address of the new ACLManager\"}},\"setAddress(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, as it will do a hard replacement\",\"params\":{\"id\":\"The id\",\"newAddress\":\"The address to set\"}},\"setAddressAsProxy(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences\",\"params\":{\"id\":\"The id\",\"newImplementationAddress\":\"The address of the new implementation\"}},\"setMarketId(string)\":{\"details\":\"This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.\",\"params\":{\"newMarketId\":\"The market id\"}},\"setPoolConfiguratorImpl(address)\":{\"params\":{\"newPoolConfiguratorImpl\":\"The new PoolConfigurator implementation\"}},\"setPoolDataProvider(address)\":{\"params\":{\"newDataProvider\":\"The address of the new DataProvider\"}},\"setPoolImpl(address)\":{\"params\":{\"newPoolImpl\":\"The new Pool implementation\"}},\"setPriceOracle(address)\":{\"params\":{\"newPriceOracle\":\"The address of the new PriceOracle\"}},\"setPriceOracleSentinel(address)\":{\"params\":{\"newPriceOracleSentinel\":\"The address of the new PriceOracleSentinel\"}}},\"title\":\"IPoolAddressesProvider\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getACLAdmin()\":{\"notice\":\"Returns the address of the ACL admin.\"},\"getACLManager()\":{\"notice\":\"Returns the address of the ACL manager.\"},\"getAddress(bytes32)\":{\"notice\":\"Returns an address by its identifier.\"},\"getMarketId()\":{\"notice\":\"Returns the id of the Aave market to which this contract points to.\"},\"getPool()\":{\"notice\":\"Returns the address of the Pool proxy.\"},\"getPoolConfigurator()\":{\"notice\":\"Returns the address of the PoolConfigurator proxy.\"},\"getPoolDataProvider()\":{\"notice\":\"Returns the address of the data provider.\"},\"getPriceOracle()\":{\"notice\":\"Returns the address of the price oracle.\"},\"getPriceOracleSentinel()\":{\"notice\":\"Returns the address of the price oracle sentinel.\"},\"setACLAdmin(address)\":{\"notice\":\"Updates the address of the ACL admin.\"},\"setACLManager(address)\":{\"notice\":\"Updates the address of the ACL manager.\"},\"setAddress(bytes32,address)\":{\"notice\":\"Sets an address for an id replacing the address saved in the addresses map.\"},\"setAddressAsProxy(bytes32,address)\":{\"notice\":\"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`.\"},\"setMarketId(string)\":{\"notice\":\"Associates an id with a specific PoolAddressesProvider.\"},\"setPoolConfiguratorImpl(address)\":{\"notice\":\"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time.\"},\"setPoolDataProvider(address)\":{\"notice\":\"Updates the address of the data provider.\"},\"setPoolImpl(address)\":{\"notice\":\"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time.\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the address of the price oracle.\"},\"setPriceOracleSentinel(address)\":{\"notice\":\"Updates the address of the price oracle sentinel.\"}},\"notice\":\"Defines the basic interface for a Pool Addresses Provider.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":\"IPoolAddressesProvider\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]}},\"version\":1}"}},"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol":{"IPriceOracleGetter":{"abi":[{"inputs":[],"name":"BASE_CURRENCY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BASE_CURRENCY_UNIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BASE_CURRENCY()":"e19f4700","BASE_CURRENCY_UNIT()":"8c89b64f","getAssetPrice(address)":"b3596f07"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BASE_CURRENCY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY_UNIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"BASE_CURRENCY()\":{\"details\":\"Address 0x0 is reserved for USD as base currency.\",\"returns\":{\"_0\":\"Returns the base currency address.\"}},\"BASE_CURRENCY_UNIT()\":{\"details\":\"1 ether for ETH, 1e8 for USD.\",\"returns\":{\"_0\":\"Returns the base currency unit.\"}},\"getAssetPrice(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"The price of the asset\"}}},\"title\":\"IPriceOracleGetter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"BASE_CURRENCY()\":{\"notice\":\"Returns the base currency address\"},\"BASE_CURRENCY_UNIT()\":{\"notice\":\"Returns the base currency unit\"},\"getAssetPrice(address)\":{\"notice\":\"Returns the asset price in the base currency\"}},\"notice\":\"Interface for the Aave price oracle.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol\":\"IPriceOracleGetter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol\":{\"keccak256\":\"0xfe72e94869ca91465a7f57282b8d367b2c9ba798fdc13ac8546304db8d971df6\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://17eb0014e4dd33c8a177ff6a80aea1361d40cda65f0e832484d9dad9c80c9aea\",\"dweb:/ipfs/QmVNsRx7bJjKmgfTVnpArCRRFGAyds2d5pY4sigcvgmxtf\"]}},\"version\":1}"}},"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"DataTypes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b53ec01bb29f093a28f0aa53bf152800177f658e949ab1bc21c3897d6264f95d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 RETURNDATACOPY 0xC0 SHL 0xB2 SWAP16 MULMOD GASPRICE 0x28 CREATE 0xAA MSTORE8 0xBF ISZERO 0x28 STOP OR PUSH32 0x658E949AB1BC21C3897D6264F95D64736F6C6343000814003300000000000000 ","sourceMap":"62:7258:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b53ec01bb29f093a28f0aa53bf152800177f658e949ab1bc21c3897d6264f95d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 RETURNDATACOPY 0xC0 SHL 0xB2 SWAP16 MULMOD GASPRICE 0x28 CREATE 0xAA MSTORE8 0xBF ISZERO 0x28 STOP OR PUSH32 0x658E949AB1BC21C3897D6264F95D64736F6C6343000814003300000000000000 ","sourceMap":"62:7258:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xff95adc41b2bbda0c08208e66c1e2fd0d99fa6d8f937667c2b366ddf08f10eeb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://734ac1a253d41ace0fe411359248a1534e530b85b3c0c9fe37931ee11580dbc6\",\"dweb:/ipfs/QmNSm1bqFo2x8EghUyShK34bU1esDeLCw1ZWPoRZwcoVvM\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"IAuthentication":{"abi":[{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getActionId(bytes4)":"851c1bb3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":\"IAuthentication\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"ISignaturesValidator":{"abi":[{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the SignatureValidator helper, used to support meta-transactions.\",\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":\"ISignaturesValidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"ITemporarilyPausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPausedState()":"1c0de051"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the TemporarilyPausable helper.\",\"events\":{\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"}},\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current paused state.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":\"ITemporarilyPausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"IWETH":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for WETH9. See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"IAsset":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":\"IAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"IAuthorizer":{"abi":[{"inputs":[{"internalType":"bytes32","name":"actionId","type":"bytes32"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"where","type":"address"}],"name":"canPerform","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"canPerform(bytes32,address,address)":"9be2a884"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"IFlashLoanRecipient":{"abi":[{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"receiveFlashLoan(address[],uint256[],uint256[],bytes)":"f04f2707"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"IProtocolFeesCollector":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"FlashLoanFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newSwapFeePercentage","type":"uint256"}],"name":"SwapFeePercentageChanged","type":"event"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"getCollectedFeeAmounts","outputs":[{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFlashLoanFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSwapFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"setFlashLoanFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newSwapFeePercentage","type":"uint256"}],"name":"setSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"recipient","type":"address"}],"name":"withdrawCollectedFees","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getAuthorizer()":"aaabadc5","getCollectedFeeAmounts(address[])":"e42abf35","getFlashLoanFeePercentage()":"d877845c","getSwapFeePercentage()":"55c67628","setFlashLoanFeePercentage(uint256)":"6b6b9f69","setSwapFeePercentage(uint256)":"38e9922e","vault()":"fbfa77cf","withdrawCollectedFees(address[],uint256[],address)":"6daefab6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"FlashLoanFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getCollectedFeeAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlashLoanFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setFlashLoanFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawCollectedFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":\"IProtocolFeesCollector\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"IVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"AuthorizerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ExternalBalanceTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feeAmount","type":"uint256"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"int256","name":"delta","type":"int256"}],"name":"InternalBalanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"indexed":false,"internalType":"int256[]","name":"deltas","type":"int256[]"},{"indexed":false,"internalType":"uint256[]","name":"protocolFeeAmounts","type":"uint256[]"}],"name":"PoolBalanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"assetManager","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"int256","name":"cashDelta","type":"int256"},{"indexed":false,"internalType":"int256","name":"managedDelta","type":"int256"}],"name":"PoolBalanceManaged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"poolAddress","type":"address"},{"indexed":false,"internalType":"enum IVault.PoolSpecialization","name":"specialization","type":"uint8"}],"name":"PoolRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"RelayerApprovalChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"TokensDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"indexed":false,"internalType":"address[]","name":"assetManagers","type":"address[]"}],"name":"TokensRegistered","type":"event"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"assetInIndex","type":"uint256"},{"internalType":"uint256","name":"assetOutIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"},{"internalType":"int256[]","name":"limits","type":"int256[]"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"batchSwap","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"deregisterTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address payable","name":"recipient","type":"address"},{"components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.ExitPoolRequest","name":"request","type":"tuple"}],"name":"exitPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"getInternalBalance","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"enum IVault.PoolSpecialization","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getPoolTokenInfo","outputs":[{"internalType":"uint256","name":"cash","type":"uint256"},{"internalType":"uint256","name":"managed","type":"uint256"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"address","name":"assetManager","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPoolTokens","outputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProtocolFeesCollector","outputs":[{"internalType":"contract IProtocolFeesCollector","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"relayer","type":"address"}],"name":"hasApprovedRelayer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"}],"internalType":"struct IVault.JoinPoolRequest","name":"request","type":"tuple"}],"name":"joinPool","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.PoolBalanceOpKind","name":"kind","type":"uint8"},{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IVault.PoolBalanceOp[]","name":"ops","type":"tuple[]"}],"name":"managePoolBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.UserBalanceOpKind","name":"kind","type":"uint8"},{"internalType":"contract IAsset","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address payable","name":"recipient","type":"address"}],"internalType":"struct IVault.UserBalanceOp[]","name":"ops","type":"tuple[]"}],"name":"manageUserBalance","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"assetInIndex","type":"uint256"},{"internalType":"uint256","name":"assetOutIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"}],"name":"queryBatchSwap","outputs":[{"internalType":"int256[]","name":"assetDeltas","type":"int256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum IVault.PoolSpecialization","name":"specialization","type":"uint8"}],"name":"registerPool","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"address[]","name":"assetManagers","type":"address[]"}],"name":"registerTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"setAuthorizer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setRelayerApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"internalType":"contract IAsset","name":"assetIn","type":"address"},{"internalType":"contract IAsset","name":"assetOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.SingleSwap","name":"singleSwap","type":"tuple"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"WETH()":"ad5c4648","batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)":"945bcec9","deregisterTokens(bytes32,address[])":"7d3aeb96","exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"8bdb3913","flashLoan(address,address[],uint256[],bytes)":"5c38449e","getActionId(bytes4)":"851c1bb3","getAuthorizer()":"aaabadc5","getDomainSeparator()":"ed24911d","getInternalBalance(address,address[])":"0f5a6efa","getNextNonce(address)":"90193b7c","getPausedState()":"1c0de051","getPool(bytes32)":"f6c00927","getPoolTokenInfo(bytes32,address)":"b05f8e48","getPoolTokens(bytes32)":"f94d4668","getProtocolFeesCollector()":"d2946c2b","hasApprovedRelayer(address,address)":"fec90d72","joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"b95cac28","managePoolBalance((uint8,bytes32,address,uint256)[])":"e6c46092","manageUserBalance((uint8,address,uint256,address,address)[])":"0e8e3e84","queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))":"f84d066e","registerPool(uint8)":"09b2760f","registerTokens(bytes32,address[],address[])":"66a9c7d2","setAuthorizer(address)":"058a628f","setPaused(bool)":"16c38b3c","setRelayerApproval(address,address,bool)":"fa6e671d","swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)":"52bbbe29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract IProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Full external interface for the Vault core contract - no external or public methods exist in the contract that don't override one of these declarations.\",\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"FlashLoan(address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual flash loan performed by `flashLoan`.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current paused state.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":\"IVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4626.sol":{"IERC4626":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"assetTokenAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"totalManagedAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address)":"ba087652","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256,address,address)":"b460af94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalManagedAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC4626 \\\"Tokenized Vault Standard\\\", as defined in https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"maxDeposit(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert.\"},\"maxMint(address)\":{\"details\":\"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert.\"},\"maxRedeem(address)\":{\"details\":\"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert.\"},\"maxWithdraw(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"redeem(uint256,address,address)\":{\"details\":\"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256,address,address)\":{\"details\":\"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":\"IERC4626\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol":{"ERC4626":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxDeposit","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxMint","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxRedeem","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxWithdraw","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address)":"ba087652","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256,address,address)":"b460af94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxDeposit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxRedeem\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC4626 \\\"Tokenized Vault Standard\\\" as defined in https://eips.ethereum.org/EIPS/eip-4626[EIP-4626]. This extension allows the minting and burning of \\\"shares\\\" (represented using the ERC20 inheritance) in exchange for underlying \\\"assets\\\" through standardized {deposit}, {mint}, {redeem} and {burn} workflows. This contract extends the ERC20 standard. Any additional extensions included along it would affect the \\\"shares\\\" token represented by this contract and not the \\\"assets\\\" token which is an independent contract. [CAUTION] ==== In empty (or nearly empty) ERC-4626 vaults, deposits are at high risk of being stolen through frontrunning with a \\\"donation\\\" to the vault that inflates the price of a share. This is variously known as a donation or inflation attack and is essentially a problem of slippage. Vault deployers can protect against this attack by making an initial deposit of a non-trivial amount of the asset, such that price manipulation becomes infeasible. Withdrawals may similarly be affected by slippage. Users can protect against this attack as well as unexpected slippage in general by verifying the amount received is as expected, using a wrapper that performs these checks such as https://github.com/fei-protocol/ERC4626#erc4626router-and-base[ERC4626Router]. Since v4.9, this implementation uses virtual assets and shares to mitigate that risk. The `_decimalsOffset()` corresponds to an offset in the decimal representation between the underlying asset's decimals and the vault decimals. This offset also determines the rate of virtual shares to virtual assets in the vault, which itself determines the initial exchange rate. While not fully preventing the attack, analysis shows that the default offset (0) makes it non-profitable, as a result of the value being captured by the virtual shares (out of the attacker's donation) matching the attacker's expected gains. With a larger offset, the attack becomes orders of magnitude more expensive than it is profitable. More details about the underlying math can be found xref:erc4626.adoc#inflation-attack[here]. The drawback of this approach is that the virtual shares do capture (a very small) part of the value being accrued to the vault. Also, if the vault experiences losses, the users try to exit the vault, the virtual shares and assets will cause the first user to exit to experience reduced losses in detriment to the last users that will experience bigger losses. Developers willing to revert back to the pre-v4.9 behavior just need to override the `_convertToShares` and `_convertToAssets` functions. To learn more, check out our xref:ROOT:erc4626.adoc[ERC-4626 guide]. ====\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC4626ExceededMaxDeposit(address,uint256,uint256)\":[{\"details\":\"Attempted to deposit more assets than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxMint(address,uint256,uint256)\":[{\"details\":\"Attempted to mint more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxRedeem(address,uint256,uint256)\":[{\"details\":\"Attempted to redeem more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxWithdraw(address,uint256,uint256)\":[{\"details\":\"Attempted to withdraw more assets than the max amount for `receiver`.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"See {IERC4626-asset}. \"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Set the underlying asset contract. This must be an ERC20-compatible contract (ERC20 or ERC777).\"},\"convertToAssets(uint256)\":{\"details\":\"See {IERC4626-convertToAssets}. \"},\"convertToShares(uint256)\":{\"details\":\"See {IERC4626-convertToShares}. \"},\"decimals()\":{\"details\":\"Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This \\\"original\\\" value is cached during construction of the vault contract. If this read operation fails (e.g., the asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals. See {IERC20Metadata-decimals}.\"},\"deposit(uint256,address)\":{\"details\":\"See {IERC4626-deposit}. \"},\"maxDeposit(address)\":{\"details\":\"See {IERC4626-maxDeposit}. \"},\"maxMint(address)\":{\"details\":\"See {IERC4626-maxMint}. \"},\"maxRedeem(address)\":{\"details\":\"See {IERC4626-maxRedeem}. \"},\"maxWithdraw(address)\":{\"details\":\"See {IERC4626-maxWithdraw}. \"},\"mint(uint256,address)\":{\"details\":\"See {IERC4626-mint}. As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero. In this case, the shares will be minted without requiring any assets to be deposited.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"See {IERC4626-previewDeposit}. \"},\"previewMint(uint256)\":{\"details\":\"See {IERC4626-previewMint}. \"},\"previewRedeem(uint256)\":{\"details\":\"See {IERC4626-previewRedeem}. \"},\"previewWithdraw(uint256)\":{\"details\":\"See {IERC4626-previewWithdraw}. \"},\"redeem(uint256,address,address)\":{\"details\":\"See {IERC4626-redeem}. \"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"See {IERC4626-totalAssets}. \"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"withdraw(uint256,address,address)\":{\"details\":\"See {IERC4626-withdraw}. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\":\"ERC4626\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0x1837547e04d5fe5334eeb77a345683c22995f1e7aa033020757ddf83a80fc72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d6031bc0e6f70edceb4e63fd624fe6be09dc48f5201c7a9078c26e6a9ef95f\",\"dweb:/ipfs/QmPTEBH7dmU3NgE6vtjMy7xEK54as9VHSgf9ojupwnvoke\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc0c1c87e408c4e55dc6229db728f4ce7c7bcde319cf505b5daf94e2df764f5264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xC SHR DUP8 0xE4 ADDMOD 0xC4 0xE5 0x5D 0xC6 0x22 SWAP14 0xB7 0x28 DELEGATECALL 0xCE PUSH29 0x7BCDE319CF505B5DAF94E2DF764F5264736F6C63430008140033000000 ","sourceMap":"751:5018:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc0c1c87e408c4e55dc6229db728f4ce7c7bcde319cf505b5daf94e2df764f5264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xC SHR DUP8 0xE4 ADDMOD 0xC4 0xE5 0x5D 0xC6 0x22 SWAP14 0xB7 0x28 DELEGATECALL 0xCE PUSH29 0x7BCDE319CF505B5DAF94E2DF764F5264736F6C63430008140033000000 ","sourceMap":"751:5018:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"contracts/Looping.sol":{"Looping":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxDeposit","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxMint","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxRedeem","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxWithdraw","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"max_ltv","type":"uint16"},{"internalType":"uint16","name":"slippage","type":"uint16"},{"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"}],"name":"setExecutionParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","owner()":"8da5cb5b","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","receiveFlashLoan(address[],uint256[],uint256[],bytes)":"f04f2707","redeem(uint256,address,address)":"ba087652","renounceOwnership()":"715018a6","setExecutionParams(uint16,uint16,uint8)":"4b6b2887","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw(uint256,address,address)":"b460af94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxDeposit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxRedeem\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"max_ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"slippage\",\"type\":\"uint16\"},{\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"}],\"name\":\"setExecutionParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC4626ExceededMaxDeposit(address,uint256,uint256)\":[{\"details\":\"Attempted to deposit more assets than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxMint(address,uint256,uint256)\":[{\"details\":\"Attempted to mint more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxRedeem(address,uint256,uint256)\":[{\"details\":\"Attempted to redeem more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxWithdraw(address,uint256,uint256)\":[{\"details\":\"Attempted to withdraw more assets than the max amount for `receiver`.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"See {IERC4626-asset}. \"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"convertToAssets(uint256)\":{\"details\":\"See {IERC4626-convertToAssets}. \"},\"convertToShares(uint256)\":{\"details\":\"See {IERC4626-convertToShares}. \"},\"decimals()\":{\"details\":\"Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This \\\"original\\\" value is cached during construction of the vault contract. If this read operation fails (e.g., the asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals. See {IERC20Metadata-decimals}.\"},\"deposit(uint256,address)\":{\"details\":\"See {IERC4626-deposit}. \"},\"maxDeposit(address)\":{\"details\":\"See {IERC4626-maxDeposit}. \"},\"maxMint(address)\":{\"details\":\"See {IERC4626-maxMint}. \"},\"maxRedeem(address)\":{\"details\":\"See {IERC4626-maxRedeem}. \"},\"maxWithdraw(address)\":{\"details\":\"See {IERC4626-maxWithdraw}. \"},\"mint(uint256,address)\":{\"details\":\"See {IERC4626-mint}. As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero. In this case, the shares will be minted without requiring any assets to be deposited.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"previewDeposit(uint256)\":{\"details\":\"See {IERC4626-previewDeposit}. \"},\"previewMint(uint256)\":{\"details\":\"See {IERC4626-previewMint}. \"},\"previewRedeem(uint256)\":{\"details\":\"See {IERC4626-previewRedeem}. \"},\"previewWithdraw(uint256)\":{\"details\":\"See {IERC4626-previewWithdraw}. \"},\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"},\"redeem(uint256,address,address)\":{\"details\":\"See {IERC4626-redeem}. \"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"See {IERC4626-totalAssets}. \"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,address,address)\":{\"details\":\"See {IERC4626-withdraw}. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Looping.sol\":\"Looping\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IAaveOracle.sol\":{\"keccak256\":\"0x15942c0df4ce9f50a9cf172c9ed0efa0abbf841cd8560fbd0da3d6a7dea69a96\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9eefeb1b2df351e6b766745bb9d0e115ec0c4266c8c47e126395eb4d992e0738\",\"dweb:/ipfs/QmVGeZY3E2SYHnoDYtcUmdJBecD99tDcRRNdkFj8N534Nj\"]},\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol\":{\"keccak256\":\"0xfe72e94869ca91465a7f57282b8d367b2c9ba798fdc13ac8546304db8d971df6\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://17eb0014e4dd33c8a177ff6a80aea1361d40cda65f0e832484d9dad9c80c9aea\",\"dweb:/ipfs/QmVNsRx7bJjKmgfTVnpArCRRFGAyds2d5pY4sigcvgmxtf\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xff95adc41b2bbda0c08208e66c1e2fd0d99fa6d8f937667c2b366ddf08f10eeb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://734ac1a253d41ace0fe411359248a1534e530b85b3c0c9fe37931ee11580dbc6\",\"dweb:/ipfs/QmNSm1bqFo2x8EghUyShK34bU1esDeLCw1ZWPoRZwcoVvM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0x1837547e04d5fe5334eeb77a345683c22995f1e7aa033020757ddf83a80fc72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d6031bc0e6f70edceb4e63fd624fe6be09dc48f5201c7a9078c26e6a9ef95f\",\"dweb:/ipfs/QmPTEBH7dmU3NgE6vtjMy7xEK54as9VHSgf9ojupwnvoke\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/Looping.sol\":{\"keccak256\":\"0x800fcb4f4e97a433b4a5644090ee6a1931b9c67b991f654139fea6577754c6ed\",\"urls\":[\"bzz-raw://d428e12719e05f47a5caf48f43894134758012534c3b14a0fa33bc72c3ea2a79\",\"dweb:/ipfs/QmYop9fjSMctf7jfrnxyQbmkQPZfCZBbE26UUfiLqnTKZ8\"]},\"contracts/OwnableERC4626.sol\":{\"keccak256\":\"0xc3359f65a0053636e09d24374822eebba04dff6bdfbdf1256439c2fee6f32244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cfbab02f58fd14c8d243f62a86dedec2d48fa9fb030b153a598cda425cb68fd\",\"dweb:/ipfs/QmcMWhL7afPAFFSG3RTtCHvHdGTofdYzgDmV3Tk56WHZne\"]}},\"version\":1}"}},"contracts/OwnableERC4626.sol":{"OwnableERC4626":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxDeposit","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxMint","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxRedeem","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxWithdraw","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","owner()":"8da5cb5b","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address)":"ba087652","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw(uint256,address,address)":"b460af94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxDeposit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxRedeem\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC4626ExceededMaxDeposit(address,uint256,uint256)\":[{\"details\":\"Attempted to deposit more assets than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxMint(address,uint256,uint256)\":[{\"details\":\"Attempted to mint more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxRedeem(address,uint256,uint256)\":[{\"details\":\"Attempted to redeem more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxWithdraw(address,uint256,uint256)\":[{\"details\":\"Attempted to withdraw more assets than the max amount for `receiver`.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"See {IERC4626-asset}. \"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"convertToAssets(uint256)\":{\"details\":\"See {IERC4626-convertToAssets}. \"},\"convertToShares(uint256)\":{\"details\":\"See {IERC4626-convertToShares}. \"},\"decimals()\":{\"details\":\"Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This \\\"original\\\" value is cached during construction of the vault contract. If this read operation fails (e.g., the asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals. See {IERC20Metadata-decimals}.\"},\"deposit(uint256,address)\":{\"details\":\"See {IERC4626-deposit}. \"},\"maxDeposit(address)\":{\"details\":\"See {IERC4626-maxDeposit}. \"},\"maxMint(address)\":{\"details\":\"See {IERC4626-maxMint}. \"},\"maxRedeem(address)\":{\"details\":\"See {IERC4626-maxRedeem}. \"},\"maxWithdraw(address)\":{\"details\":\"See {IERC4626-maxWithdraw}. \"},\"mint(uint256,address)\":{\"details\":\"See {IERC4626-mint}. As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero. In this case, the shares will be minted without requiring any assets to be deposited.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"previewDeposit(uint256)\":{\"details\":\"See {IERC4626-previewDeposit}. \"},\"previewMint(uint256)\":{\"details\":\"See {IERC4626-previewMint}. \"},\"previewRedeem(uint256)\":{\"details\":\"See {IERC4626-previewRedeem}. \"},\"previewWithdraw(uint256)\":{\"details\":\"See {IERC4626-previewWithdraw}. \"},\"redeem(uint256,address,address)\":{\"details\":\"See {IERC4626-redeem}. \"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"See {IERC4626-totalAssets}. \"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,address,address)\":{\"details\":\"See {IERC4626-withdraw}. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OwnableERC4626.sol\":\"OwnableERC4626\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0x1837547e04d5fe5334eeb77a345683c22995f1e7aa033020757ddf83a80fc72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d6031bc0e6f70edceb4e63fd624fe6be09dc48f5201c7a9078c26e6a9ef95f\",\"dweb:/ipfs/QmPTEBH7dmU3NgE6vtjMy7xEK54as9VHSgf9ojupwnvoke\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/OwnableERC4626.sol\":{\"keccak256\":\"0xc3359f65a0053636e09d24374822eebba04dff6bdfbdf1256439c2fee6f32244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cfbab02f58fd14c8d243f62a86dedec2d48fa9fb030b153a598cda425cb68fd\",\"dweb:/ipfs/QmcMWhL7afPAFFSG3RTtCHvHdGTofdYzgDmV3Tk56WHZne\"]}},\"version\":1}"}}}}}